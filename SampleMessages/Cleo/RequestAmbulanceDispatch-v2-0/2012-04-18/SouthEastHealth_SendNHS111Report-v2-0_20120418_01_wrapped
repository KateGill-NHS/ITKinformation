<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
	<s:Header>
		<To s:mustUnderstand="1" xmlns="http://schemas.microsoft.com/ws/2005/05/addressing/none">https://al0002:1879/NHS111Reportv20.svc</To>
		<Action s:mustUnderstand="1" xmlns="http://schemas.microsoft.com/ws/2005/05/addressing/none">urn:nhs-itk:services:201005:SendNHS111Report-v2-0</Action>
	</s:Header>
	<s:Body xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
		<DistributionEnvelope xmlns="urn:nhs-itk:ns:201005">
			<header trackingid="6CEE57A8-7BB5-4D8C-A82C-056BF5AC202E" service="SendNHS111Report-v2-0">
				<auditIdentity>
					<id uri="urn:nhs-uk:addressing:ods:SEH"/>
				</auditIdentity>
				<manifest count="1">
					<manifestitem id="uuid_429DF81E-426E-4DF9-93E6-493D84E276D2" mimetype="text/xml" profileid="urn:nhs-en:profile:nhs111CDADocument-v2-0"/>
				</manifest>
				<senderAddress uri="urn:nhs-uk:addressing:ods:SEH"/>
				<handlingSpecification>
					<spec key="urn:nhs-itk:ns:201005:interaction" value="urn:nhs-itk:interaction:primaryGeneralPractitionerRecipientNHS111CDADocument-v2-0"/>
				</handlingSpecification>
			</header>
			<payloads count="1">
				<payload id="uuid_429DF81E-426E-4DF9-93E6-493D84E276D2">
					<ClinicalDocument moodCode="EVN" classCode="DOCCLIN" xmlns="urn:hl7-org:v3">
						<typeId extension="POCD_HD000040" root="2.16.840.1.113883.1.3"/>
						<messageType extension="POCD_MT200001GB02" root="2.16.840.1.113883.2.1.3.2.4.18.17" xmlns="NPFIT:HL7:Localisation"/>
						<id root="77DDF455-FF25-48DE-A368-ADDC2E8C6DE9"/>
						<code code="819551000000100" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
						<title>NHS 111 Report</title>
						<effectiveTime value="20120418060816"/>
						<confidentialityCode code="R" codeSystem="2.16.840.1.113883.1.11.16926" displayName="restricted"/>
						<setId root="4F29CBE7-950E-4874-906B-2694EF0990D0"/>
						<versionNumber value="1"/>
						<recordTarget typeCode="RCT" contextControlCode="OP">
							<contentId extension="COCD_TP145201GB01#PatientRole" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
							<patientRole classCode="PAT">
								<templateId extension="COCD_TP145201GB01#PatientRole" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
								<id extension="1111111111" root="2.16.840.1.113883.2.1.3.2.4.18.23"/>
								<addr use="PHYS">
									<streetAddressLine partType="SAL">13 Estuary View Business Park,Boorman Way</streetAddressLine>
									<streetAddressLine partType="SAL">Whitstable</streetAddressLine>
									<streetAddressLine partType="SAL"/>
									<streetAddressLine partType="SAL"/>
									<streetAddressLine partType="SAL"/>
									<postalCode partType="ZIP">CT5 3SE</postalCode>
									<addressKey/>
									<additionalLocator partType="ADL"/>
								</addr>
								<telecom value="tel:" use="H"/>
								<patient determinerCode="INSTANCE" classCode="PSN">
									<templateId extension="COCD_TP145201GB01#patientPatient" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<name>TESTING, Another</name>
									<administrativeGenderCode code="1" codeSystem="2.16.840.1.113883.2.1.3.2.4.16.25" displayName="Male"/>
									<birthTime value="19010101"/>
									<languageCommunication>
										<templateId extension="COCD_TP145201GB01#languageCommunication" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
										<languageCode code="en"/>
										<modeCode code="RSP" codeSystem="2.16.840.1.113883.5.60" displayName="Received Spoken"/>
										<proficiencyLevelCode code="F" codeSystem="2.16.840.1.113883.5.61" displayName="Fair"/>
										<preferenceInd nullFlavor="UNK"/>
									</languageCommunication>
								</patient>
								<providerOrganization determinerCode="INSTANCE" classCode="ORG">
									<templateId extension="COCD_TP145201GB01#providerOrganization" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<id root="2.16.840.1.113883.2.1.3.2.4.19.1"/>
									<name>UNKNOWN</name>
									<standardIndustryClassCode code="001" codeSystem="2.16.840.1.113883.2.1.3.2.4.17.289" displayName="GP Practice"/>
								</providerOrganization>
							</patientRole>
						</recordTarget>
						<author typeCode="AUT" contextControlCode="OP">
							<contentId extension="COCD_TP145200GB01#AssignedAuthor" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
							<functionCode code="OA" codeSystem="2.16.840.1.113883.2.1.3.2.4.17.178" displayName="Originating Author"/>
							<time value="20120418060816"/>
							<assignedAuthor classCode="ASSIGNED">
								<templateId extension="COCD_TP145200GB01#AssignedAuthor" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
								<id extension="Neil Stevens" root="2.16.840.1.113883.2.1.3.2.4.18.24"/>
								<assignedPerson classCode="PSN" determinerCode="INSTANCE">
									<templateId extension="COCD_TP145200GB01#assignedPerson" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<name>Neil Stevens</name>
								</assignedPerson>
								<representedOrganization determinerCode="INSTANCE" classCode="ORG">
									<templateId extension="COCD_TP145200GB01#representedOrganization" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<id extension="NVE001" root="2.16.840.1.113883.2.1.3.2.4.19.1"/>
									<name>South East Health</name>
								</representedOrganization>
							</assignedAuthor>
						</author>
						<informant typeCode="INF" contextControlCode="OP">
							<contentId extension="COCD_TP145007UK03#RelatedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
							<relatedEntity classCode="PRS">
								<templateId extension="COCD_TP145007UK03#RelatedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
								<code code="21" codeSystem="2.16.840.1.113883.2.1.3.2.4.16.45" displayName="Self"/>
								<telecom value="tel:" use="EC"/>
								<relatedPerson classCode="PSN" determinerCode="INSTANCE">
									<templateId extension="COCD_TP145007UK03#relationshipHolder" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<name/>
								</relatedPerson>
							</relatedEntity>
						</informant>
						<custodian typeCode="CST">
							<contentId extension="COCD_TP145018UK03#AssignedCustodian" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
							<assignedCustodian classCode="ASSIGNED">
								<templateId extension="COCD_TP145018UK03#AssignedCustodian" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
								<representedCustodianOrganization classCode="ORG" determinerCode="INSTANCE">
									<templateId extension="COCD_TP145018UK03#representedCustodianOrganization" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<id extension="NVE01" root="2.16.840.1.113883.2.1.3.2.4.19.2"/>
									<name>South East Health</name>
								</representedCustodianOrganization>
							</assignedCustodian>
						</custodian>
						<informationRecipient>
							<contentId extension="COCD_TP145203GB03#IntendedRecipient" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
							<intendedRecipient>
								<templateId extension="COCD_TP145203GB03#IntendedRecipient" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
								<receivedOrganization determinerCode="INSTANCE" classCode="ORG">
									<templateId extension="COCD_TP145203GB03#representedOrganization" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<id root="2.16.840.1.113883.2.1.3.2.4.19.1"/>
									<name>UNKNOWN</name>
								</receivedOrganization>
							</intendedRecipient>
						</informationRecipient>
						<participant typeCode="REFT" contextControlCode="OP">
							<contentId extension="COCD_TP145214GB01#AssociatedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
							<associatedEntity classCode="ASSIGNED">
								<templateId extension="COCD_TP145214GB01#AssociatedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
								<id root="2.16.840.1.113883.2.1.3.2.4.19.2"/>
								<addr use="PHYS">
									<streetAddressLine partType="SAL">Kingston House</streetAddressLine>
									<streetAddressLine partType="SAL">The Long Barrow</streetAddressLine>
									<streetAddressLine partType="SAL">Orbital Park</streetAddressLine>
									<streetAddressLine partType="SAL">Ashford</streetAddressLine>
									<streetAddressLine partType="SAL">Kent</streetAddressLine>
									<postalCode partType="ZIP">TN24 0GP</postalCode>
									<addressKey/>
									<additionalLocator partType="ADL"/>
								</addr>
								<telecom value="tel:tel:01233505450" use="EC"/>
								<scopingOrganization determinerCode="INSTANCE" classCode="ORG">
									<templateId extension="COCD_TP145214GB01#scopingOrganization" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<id extension="NVE01" root="2.16.840.1.113883.2.1.3.2.4.19.1"/>
									<name>South East Health</name>
								</scopingOrganization>
							</associatedEntity>
						</participant>
						<authorization typeCode="AUTH">
							<contentId extension="COCD_TP146226GB02#Consent" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
							<consent classCode="CONS" moodCode="EVN">
								<templateId extension="COCD_TP146226GB02#Consent" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
								<id root="9A413714-6AD0-489F-950C-097217A5A48D"/>
								<code code="425691002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Consent given for electronic record sharing"/>
								<statusCode code="completed"/>
							</consent>
						</authorization>
						<componentOf typeCode="COMP">
							<contentId extension="COCD_TP146232GB01#EncompassingEncounter" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
							<encompassingEncounter classCode="ENC" moodCode="EVN">
								<templateId extension="COCD_TP146232GB01#EncompassingEncounter" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
								<id extension="14221" root="2.16.840.1.113883.2.1.3.2.4.18.34"/>
								<code code="NHS111Encounter" codeSystem="2.16.840.1.113883.2.1.3.2.4.17.326" displayName="NHS111 Encounter"/>
								<effectiveTime>
									<low value="20120417103721"/>
									<high value="20120418060816"/>
								</effectiveTime>
								<location typeCode="LOC">
									<templateId extension="COCD_TP146232GB01#location" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
									<contentId extension="COCD_TP145222GB02#HealthCareFacility" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
									<healthCareFacility classCode="ISDLOC">
										<templateId extension="COCD_TP145222GB02#HealthCareFacility" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
										<id nullFlavor="NA"/>
									</healthCareFacility>
								</location>
							</encompassingEncounter>
						</componentOf>
						<component typeCode="COMP" contextConductionInd="true">
							<structuredBody classCode="DOCBODY" moodCode="EVN">
								<component typeCode="COMP" contextConductionInd="true">
									<section moodCode="EVN" classCode="DOCSECT">
										<id root="D7776030-4051-41C0-8719-AFDBF4414131"/>
										<entry contextConductionInd="true">
											<contentId extension="COCD_TP146002GB01#ObservationMedia" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
											<observationMedia classCode="OBS" moodCode="EVN">
												<templateId extension="COCD_TP146002GB01#ObservationMedia" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
												<id root="23044CEA-61DD-4A6A-8B01-DF39EF073400"/>
												<value representation="B64" mediaType="text/xml"></value>
												<participant contextControlCode="OP" typeCode="DEV">
													<templateId extension="COCD_TP146002GB01#ParticipantRole" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
													<contentId extension="COCD_TP145000GB01#ParticipantRole" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
													<participantRole>
														<templateId extension="COCD_TP145000GB01#ParticipantRole" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
														<code code="TS" codeSystem="2.16.840.1.113883.2.1.3.2.4.17.418"/>
														<playingDevice determinerCode="INSTANCE">
															<templateId extension="COCD_TP145000GB01#playingDevice" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
															<manufacturerModelName displayName="Pathways"/>
															<softwareName displayName="2.4"/>
														</playingDevice>
													</participantRole>
												</participant>
											</observationMedia>
										</entry>
										<component typeCode="COMP" contextConductionInd="true">
											<contentId extension="COCD_TP146246GB01#Section1" root="2.16.840.1.113883.2.1.3.2.4.18.16" xmlns="NPFIT:HL7:Localisation"/>
											<section moodCode="EVN" classCode="DOCSECT">
												<templateId extension="COCD_TP146246GB01#Section1" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
												<id root="136A838E-CFF1-4020-91B6-A7C1464D9CEA"/>
												<title>Case Summary</title>
												<text mediaType="text/x-hl7-text+xml">
													<content styleCode="bold">Attend Emergency Department within 4 hours</content>
													<br/>
													<content styleCode="bold">Selected care service:</content>
													<br/>
													<content>Dx03</content>
													<br/>
													<content styleCode="bold">Pathways Assessment:</content>
													<br/>
													<content>
														<br/>
													</content>
													<br/>
													<content styleCode="bold">Advice Given:</content>
													<br/>
													<content>
														<br/>
													</content>
												</text>
											</section>
										</component>
									</section>
								</component>
							</structuredBody>
						</component>
					</ClinicalDocument>
				</payload>
			</payloads>
		</DistributionEnvelope>
	</s:Body>
</s:Envelope>