<?xml version="1.0" encoding="UTF-8" standalone="no"?><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="urn:hl7-org:v3" xmlns:npfitlc="NPFIT:HL7:Localisation" xmlns:oms="urn:hl7-org:v3" xmlns:v3="urn:hl7-org:v3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0">
	<xsl:output indent="yes" method="xml"/>
	<!-- edited with XMLSpy v2011 rel. 2 sp1 (http://www.altova.com) by Prashant Trivedi (NHS Connecting for Health) -->
	<!--  This stylesheet was generated by the Open Mapping Tools, from Open Mapping Software Ltd., www.OpenMapSW.com.  -->
	<xsl:template match="/oms:ClinicalDocument" mode="main">
		<xsl:variable name="v_1" select="/oms:ClinicalDocument"/>
		<xsl:apply-templates mode="main_m1" select="$v_1"/>
	</xsl:template>
	<xsl:template match="oms:ClinicalDocument" mode="main_m1">
		<xsl:variable name="main.ClinicalDocument_in" select="."/>
		<xsl:variable name="v_2" select="$main.ClinicalDocument_in/oms:author"/>
		<xsl:variable name="main.Author_in" select="$v_2/self::node()"/>
		<xsl:variable name="v_3" select="$main.ClinicalDocument_in/oms:informationRecipient"/>
		<xsl:variable name="main.InformationRecipient_in" select="$v_3/self::node()"/>
		<ClinicalDocument>
			<xsl:variable name="v_4" select="'DOCCLIN'"/>
			<xsl:variable name="v_10" select="$main.ClinicalDocument_in/oms:id"/>
			<xsl:variable name="main.Id_in" select="$v_10/self::node()"/>
			<xsl:variable name="v_12" select="$main.ClinicalDocument_in/oms:code"/>
			<xsl:variable name="main.Code_in" select="$v_12/self::node()"/>
			<xsl:variable name="v_15" select="$main.ClinicalDocument_in/oms:title"/>
			<xsl:variable name="main.Title_in" select="$v_15/self::node()"/>
			<xsl:variable name="v_17" select="$main.ClinicalDocument_in/oms:effectiveTime"/>
			<xsl:variable name="main.EffectiveTime_in" select="$v_17/self::node()"/>
			<xsl:variable name="v_19" select="$main.ClinicalDocument_in/oms:confidentialityCode"/>
			<xsl:variable name="main.ConfidentialityCode_in" select="$v_19/self::node()"/>
			<xsl:variable name="v_23" select="$main.ClinicalDocument_in/oms:setId"/>
			<xsl:variable name="main.SetId_in" select="$v_23/self::node()"/>
			<xsl:variable name="v_25" select="$main.ClinicalDocument_in/oms:versionNumber"/>
			<xsl:variable name="main.VersionNumber_in" select="$v_25/self::node()"/>
			<xsl:variable name="v_27" select="$main.ClinicalDocument_in/oms:patientUniversal"/>
			<xsl:variable name="main.PatientUniversal_in" select="$v_27/self::node()"/>
			<xsl:variable name="v_95" select="$main.Author_in/oms:authorPerson"/>
			<xsl:variable name="main.AuthorPerson_in" select="$v_95/self::node()"/>
			<xsl:variable name="v_136" select="$main.Author_in/oms:authorNonNamedPerson"/>
			<xsl:variable name="main.AuthorNonNamedPerson_in" select="$v_136/self::node()"/>
			<xsl:variable name="v_161" select="$main.Author_in/oms:authorWorkgroup"/>
			<xsl:variable name="main.AuthorWorkgroup_in" select="$v_161/self::node()"/>
			<xsl:variable name="v_198" select="$main.Author_in/oms:authorDevice"/>
			<xsl:variable name="main.AuthorDevice_in" select="$v_198/self::node()"/>
			<xsl:variable name="v_229" select="$main.ClinicalDocument_in/oms:dataEnterer"/>
			<xsl:variable name="main.DataEnterer_in" select="$v_229/self::node()"/>
			<xsl:variable name="v_270" select="$main.ClinicalDocument_in/oms:informantRelatedEntity"/>
			<xsl:variable name="main.InformantRelatedEntity_in" select="$v_270/self::node()"/>
			<xsl:variable name="v_295" select="$main.ClinicalDocument_in/oms:informantPersonWithOrg"/>
			<xsl:variable name="main.InformantPersonWithOrg_in" select="$v_295/self::node()"/>
			<xsl:variable name="v_331" select="$main.ClinicalDocument_in/oms:custodian"/>
			<xsl:variable name="main.Custodian_in" select="$v_331/self::node()"/>
			<xsl:variable name="v_345" select="$main.InformationRecipient_in/oms:informationRecipientPerson"/>
			<xsl:variable name="main.InformationRecipientPerson_in" select="$v_345/self::node()"/>
			<xsl:variable name="v_380" select="$main.InformationRecipient_in/oms:informationRecipientOrg"/>
			<xsl:variable name="main.InformationRecipientOrg_in" select="$v_380/self::node()"/>
			<xsl:variable name="v_395" select="$main.InformationRecipient_in/oms:informationRecipientworkgroup"/>
			<xsl:variable name="main.InformationRecipientworkgroup_in" select="$v_395/self::node()"/>
			<xsl:variable name="v_430" select="$main.ClinicalDocument_in/oms:trackerPerson"/>
			<xsl:variable name="main.TrackerPerson_in" select="$v_430/self::node()"/>
			<xsl:variable name="v_463" select="$main.ClinicalDocument_in/oms:trackerOrganization"/>
			<xsl:variable name="main.TrackerOrganization_in" select="$v_463/self::node()"/>
			<xsl:variable name="v_478" select="$main.ClinicalDocument_in/oms:trackerWorkgroup"/>
			<xsl:variable name="main.TrackerWorkgroup_in" select="$v_478/self::node()"/>
			<xsl:variable name="v_513" select="$main.ClinicalDocument_in/oms:authenticator"/>
			<xsl:variable name="main.Authenticator_in" select="$v_513/self::node()"/>
			<xsl:variable name="v_553" select="$main.ClinicalDocument_in/oms:participant"/>
			<xsl:variable name="main.Participant_in" select="$v_553/self::node()"/>
			<xsl:variable name="v_585" select="$main.ClinicalDocument_in/oms:documentOf"/>
			<xsl:variable name="main.DocumentOf_in" select="$v_585/self::node()"/>
			<xsl:variable name="v_669" select="$main.ClinicalDocument_in/oms:relatedDocument"/>
			<xsl:variable name="main.RelatedDocument_in" select="$v_669/self::node()"/>
			<xsl:variable name="v_688" select="$main.ClinicalDocument_in/oms:authorization"/>
			<xsl:variable name="main.Authorization_in" select="$v_688/self::node()"/>
			<xsl:variable name="v_699" select="$main.ClinicalDocument_in/oms:encompassingEncounter"/>
			<xsl:variable name="main.EncompassingEncounter_in" select="$v_699/self::node()"/>
			<xsl:if test="string($v_4)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_4"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_5" select="'EVN'"/>
			<xsl:if test="string($v_5)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_5"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="typeId_1"/>
			<xsl:call-template name="npfitlc:messageType_2"/>
			<xsl:apply-templates mode="main_m2" select="$main.Id_in"/>
			<xsl:apply-templates mode="main_m3" select="$main.Code_in"/>
			<xsl:apply-templates mode="main_m4" select="$main.Title_in"/>
			<xsl:apply-templates mode="main_m5" select="$main.EffectiveTime_in"/>
			<xsl:apply-templates mode="main_m6" select="$main.ConfidentialityCode_in"/>
			<xsl:apply-templates mode="main_m7" select="$main.SetId_in"/>
			<xsl:apply-templates mode="main_m8" select="$main.VersionNumber_in"/>
			<xsl:apply-templates mode="main_m9" select="$main.PatientUniversal_in"/>
			<xsl:apply-templates mode="main_m35" select="$main.AuthorPerson_in"/>
			<xsl:apply-templates mode="main_m46" select="$main.AuthorNonNamedPerson_in"/>
			<xsl:apply-templates mode="main_m52" select="$main.AuthorWorkgroup_in"/>
			<xsl:apply-templates mode="main_m63" select="$main.AuthorDevice_in"/>
			<xsl:apply-templates mode="main_m70" select="$main.DataEnterer_in"/>
			<xsl:apply-templates mode="main_m83" select="$main.InformantRelatedEntity_in"/>
			<xsl:apply-templates mode="main_m91" select="$main.InformantPersonWithOrg_in"/>
			<xsl:apply-templates mode="main_m101" select="$main.Custodian_in"/>
			<xsl:apply-templates mode="main_m104" select="$main.InformationRecipientPerson_in"/>
			<xsl:apply-templates mode="main_m113" select="$main.InformationRecipientOrg_in"/>
			<xsl:apply-templates mode="main_m116" select="$main.InformationRecipientworkgroup_in"/>
			<xsl:apply-templates mode="main_m126" select="$main.TrackerPerson_in"/>
			<xsl:apply-templates mode="main_m135" select="$main.TrackerOrganization_in"/>
			<xsl:apply-templates mode="main_m138" select="$main.TrackerWorkgroup_in"/>
			<xsl:apply-templates mode="main_m148" select="$main.Authenticator_in"/>
			<xsl:apply-templates mode="main_m161" select="$main.Participant_in"/>
			<xsl:apply-templates mode="main_m171" select="$main.DocumentOf_in"/>
			<xsl:apply-templates mode="main_m194" select="$main.RelatedDocument_in"/>
			<xsl:apply-templates mode="main_m200" select="$main.Authorization_in"/>
			<xsl:apply-templates mode="main_m202" select="$main.EncompassingEncounter_in"/>
			<xsl:call-template name="component_125">
				<xsl:with-param name="main.ClinicalDocument_in" select="$main.ClinicalDocument_in"/>
			</xsl:call-template>
		</ClinicalDocument>
	</xsl:template>
	<xsl:template name="typeId_1">
		<typeId>
			<xsl:variable name="v_6" select="'POCD_HD000040'"/>
			<xsl:if test="string($v_6)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_6"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_7" select="'2.16.840.1.113883.1.3'"/>
			<xsl:if test="string($v_7)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_7"/>
				</xsl:attribute>
			</xsl:if>
		</typeId>
	</xsl:template>
	<xsl:template name="npfitlc:messageType_2">
		<npfitlc:messageType>
			<xsl:variable name="v_8" select="'POCD_MT010011GB01'"/>
			<xsl:if test="string($v_8)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_8"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_9" select="'2.16.840.1.113883.2.1.3.2.4.18.17'"/>
			<xsl:if test="string($v_9)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_9"/>
				</xsl:attribute>
			</xsl:if>
		</npfitlc:messageType>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m2">
		<xsl:variable name="main.Id_in" select="."/>
		<id>
			<xsl:variable name="root_11" select="$main.Id_in/@root"/>
			<xsl:if test="string($root_11)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_11"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m3">
		<xsl:variable name="main.Code_in" select="."/>
		<code>
			<xsl:variable name="code_13" select="$main.Code_in/@code"/>
			<xsl:variable name="codeSystem_14" select="$main.Code_in/@codeSystem"/>
			<xsl:if test="string($code_13)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_13"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_14)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_14"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m4">
		<xsl:variable name="main.Title_in" select="."/>
		<title>
			<xsl:variable name="textConten_16" select="$main.Title_in/self::node()"/>
			<xsl:value-of select="$textConten_16"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:effectiveTime" mode="main_m5">
		<xsl:variable name="main.EffectiveTime_in" select="."/>
		<effectiveTime>
			<xsl:variable name="value_18" select="$main.EffectiveTime_in/@value"/>
			<xsl:if test="string($value_18)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_18"/>
				</xsl:attribute>
			</xsl:if>
		</effectiveTime>
	</xsl:template>
	<xsl:template match="oms:confidentialityCode" mode="main_m6">
		<xsl:variable name="main.ConfidentialityCode_in" select="."/>
		<confidentialityCode>
			<xsl:variable name="code_20" select="$main.ConfidentialityCode_in/@code"/>
			<xsl:variable name="codeSystem_21" select="$main.ConfidentialityCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_22" select="$main.ConfidentialityCode_in/@displayName"/>
			<xsl:if test="string($code_20)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_20"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_21)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_21"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_22)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_22"/>
				</xsl:attribute>
			</xsl:if>
		</confidentialityCode>
	</xsl:template>
	<xsl:template match="oms:setId" mode="main_m7">
		<xsl:variable name="main.SetId_in" select="."/>
		<setId>
			<xsl:variable name="root_24" select="$main.SetId_in/@root"/>
			<xsl:if test="string($root_24)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_24"/>
				</xsl:attribute>
			</xsl:if>
		</setId>
	</xsl:template>
	<xsl:template match="oms:versionNumber" mode="main_m8">
		<xsl:variable name="main.VersionNumber_in" select="."/>
		<versionNumber>
			<xsl:variable name="value_26" select="$main.VersionNumber_in/@value"/>
			<xsl:if test="string($value_26)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_26"/>
				</xsl:attribute>
			</xsl:if>
		</versionNumber>
	</xsl:template>
	<xsl:template match="oms:patientUniversal" mode="main_m9">
		<xsl:variable name="main.PatientUniversal_in" select="."/>
		<recordTarget_PatientRole_Univ>
			<xsl:variable name="v_28" select="'RCT'"/>
			<xsl:variable name="v_30" select="$main.PatientUniversal_in/oms:patientDetail"/>
			<xsl:variable name="main.PatientDetail_in" select="$v_30/self::node()"/>
			<xsl:if test="string($v_28)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_28"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_29" select="'OP'"/>
			<xsl:if test="string($v_29)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_29"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m10" select="$main.PatientDetail_in">
				<xsl:with-param name="main.PatientUniversal_in" select="$main.PatientUniversal_in"/>
			</xsl:apply-templates>
		</recordTarget_PatientRole_Univ>
	</xsl:template>
	<xsl:template match="oms:patientDetail" mode="main_m10">
		<xsl:param name="main.PatientUniversal_in"/>
		<xsl:variable name="main.PatientDetail_in" select="."/>
		<COCD_TP145201GB01.PatientRole_Univ>
			<xsl:variable name="v_31" select="'PAT'"/>
			<xsl:variable name="v_34" select="$main.PatientUniversal_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s0_in_s0" select="$v_34/self::node()"/>
			<xsl:variable name="v_38" select="$main.PatientUniversal_in/oms:addr"/>
			<xsl:variable name="main.Addr_in" select="$v_38/self::node()"/>
			<xsl:variable name="v_46" select="$main.PatientUniversal_in/oms:telecom"/>
			<xsl:variable name="main.Telecom_in" select="$v_46/self::node()"/>
			<xsl:variable name="v_49" select="$main.PatientDetail_in/self::node()"/>
			<xsl:variable name="v_50" select="$v_49/ancestor::oms:patientUniversal"/>
			<xsl:variable name="v_51" select="$v_50/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_51/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.PatientUniversal_in" select="$v_50/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="v_72" select="$main.PatientUniversal_in/oms:providerOrg"/>
			<xsl:variable name="main.ProviderOrg_in" select="$v_72/self::node()"/>
			<xsl:if test="string($v_31)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_31"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_3"/>
			<xsl:apply-templates mode="main_m11" select="$main.Id_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m12" select="$main.Addr_in"/>
			<xsl:apply-templates mode="main_m16" select="$main.Telecom_in"/>
			<xsl:apply-templates mode="main_m17" select="$main.PatientUniversal_in">
				<xsl:with-param name="main.PatientDetail_in" select="$main.PatientDetail_in"/>
			</xsl:apply-templates>
			<xsl:apply-templates mode="main_m26" select="$main.ProviderOrg_in"/>
		</COCD_TP145201GB01.PatientRole_Univ>
	</xsl:template>
	<xsl:template name="templateId_3">
		<templateId>
			<xsl:variable name="v_32" select="'COCD_TP145201GB01#PatientRole'"/>
			<xsl:if test="string($v_32)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_32"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_33" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_33)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_33"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m11">
		<xsl:variable name="main.Id_subset_s0_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_35" select="$main.Id_subset_s0_in/@nullFlavor"/>
			<xsl:variable name="root_36" select="$main.Id_subset_s0_in/@root"/>
			<xsl:variable name="extension_37" select="$main.Id_subset_s0_in/@extension"/>
			<xsl:if test="string($nullFlavor_35)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_35"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_36)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_36"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_37)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_37"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:addr" mode="main_m12">
		<xsl:variable name="main.Addr_in" select="."/>
		<addr>
			<xsl:variable name="use_39" select="$main.Addr_in/@use"/>
			<xsl:variable name="v_40" select="$main.Addr_in/oms:postalCode"/>
			<xsl:variable name="main.PostalCode_in" select="$v_40/self::node()"/>
			<xsl:variable name="v_42" select="$main.Addr_in/oms:city"/>
			<xsl:variable name="main.City_in" select="$v_42/self::node()"/>
			<xsl:variable name="v_44" select="$main.Addr_in/oms:streetAddressLine"/>
			<xsl:variable name="main.StreetAddressLine_in" select="$v_44/self::node()"/>
			<xsl:if test="string($use_39)">
				<xsl:attribute name="use">
					<xsl:value-of select="$use_39"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m13" select="$main.PostalCode_in"/>
			<xsl:apply-templates mode="main_m14" select="$main.City_in"/>
			<xsl:apply-templates mode="main_m15" select="$main.StreetAddressLine_in"/>
		</addr>
	</xsl:template>
	<xsl:template match="oms:postalCode" mode="main_m13">
		<xsl:variable name="main.PostalCode_in" select="."/>
		<postalCode>
			<xsl:variable name="textConten_41" select="$main.PostalCode_in/self::node()"/>
			<xsl:value-of select="$textConten_41"/>
		</postalCode>
	</xsl:template>
	<xsl:template match="oms:city" mode="main_m14">
		<xsl:variable name="main.City_in" select="."/>
		<city>
			<xsl:variable name="textConten_43" select="$main.City_in/self::node()"/>
			<xsl:value-of select="$textConten_43"/>
		</city>
	</xsl:template>
	<xsl:template match="oms:streetAddressLine" mode="main_m15">
		<xsl:variable name="main.StreetAddressLine_in" select="."/>
		<streetAddressLine>
			<xsl:variable name="textConten_45" select="$main.StreetAddressLine_in/self::node()"/>
			<xsl:value-of select="$textConten_45"/>
		</streetAddressLine>
	</xsl:template>
	<xsl:template match="oms:telecom" mode="main_m16">
		<xsl:variable name="main.Telecom_in" select="."/>
		<telecom>
			<xsl:variable name="value_47" select="$main.Telecom_in/@value"/>
			<xsl:variable name="use_48" select="$main.Telecom_in/@use"/>
			<xsl:if test="string($value_47)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_47"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($use_48)">
				<xsl:attribute name="use">
					<xsl:value-of select="$use_48"/>
				</xsl:attribute>
			</xsl:if>
		</telecom>
	</xsl:template>
	<xsl:template match="oms:patientUniversal" mode="main_m17">
		<xsl:param name="main.PatientDetail_in"/>
		<xsl:variable name="main.PatientUniversal_in" select="."/>
		<patientPatient>
			<xsl:variable name="v_52" select="'PSN'"/>
			<xsl:variable name="v_56" select="$main.PatientDetail_in/oms:name"/>
			<xsl:variable name="main.Name_in" select="$v_56/self::node()"/>
			<xsl:variable name="v_63" select="$main.PatientDetail_in/oms:sex"/>
			<xsl:variable name="main.Sex_in" select="$v_63/self::node()"/>
			<xsl:variable name="v_65" select="$main.PatientDetail_in/oms:dob"/>
			<xsl:variable name="main.Dob_in" select="$v_65/self::node()"/>
			<xsl:variable name="v_67" select="$main.PatientDetail_in/oms:languageCommunication"/>
			<xsl:variable name="main.LanguageCommunication_in" select="$v_67/self::node()"/>
			<xsl:if test="string($v_52)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_52"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_53" select="'INSTANCE'"/>
			<xsl:if test="string($v_53)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_53"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_4"/>
			<xsl:apply-templates mode="main_m18" select="$main.Name_in"/>
			<xsl:apply-templates mode="main_m22" select="$main.Sex_in"/>
			<xsl:apply-templates mode="main_m23" select="$main.Dob_in"/>
			<xsl:apply-templates mode="main_m24" select="$main.LanguageCommunication_in"/>
		</patientPatient>
	</xsl:template>
	<xsl:template name="templateId_4">
		<templateId>
			<xsl:variable name="v_54" select="'COCD_TP145201GB01#patientPatient'"/>
			<xsl:if test="string($v_54)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_54"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_55" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_55)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_55"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m18">
		<xsl:variable name="main.Name_in" select="."/>
		<name>
			<xsl:variable name="v_57" select="$main.Name_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_in" select="$v_57/self::node()"/>
			<xsl:variable name="v_59" select="$main.Name_in/oms:given"/>
			<xsl:variable name="main.Given_in" select="$v_59/self::node()"/>
			<xsl:variable name="v_61" select="$main.Name_in/oms:family"/>
			<xsl:variable name="main.Family_in" select="$v_61/self::node()"/>
			<xsl:apply-templates mode="main_m19" select="$main.Prefix_in"/>
			<xsl:apply-templates mode="main_m20" select="$main.Given_in"/>
			<xsl:apply-templates mode="main_m21" select="$main.Family_in"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m19">
		<xsl:variable name="main.Prefix_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_58" select="$main.Prefix_in/self::node()"/>
			<xsl:value-of select="$textConten_58"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m20">
		<xsl:variable name="main.Given_in" select="."/>
		<given>
			<xsl:variable name="textConten_60" select="$main.Given_in/self::node()"/>
			<xsl:value-of select="$textConten_60"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m21">
		<xsl:variable name="main.Family_in" select="."/>
		<family>
			<xsl:variable name="textConten_62" select="$main.Family_in/self::node()"/>
			<xsl:value-of select="$textConten_62"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:sex" mode="main_m22">
		<xsl:variable name="main.Sex_in" select="."/>
		<administrativeGenderCode>
			<xsl:variable name="code_64" select="$main.Sex_in/@code"/>
			<xsl:if test="string($code_64)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_64"/>
				</xsl:attribute>
			</xsl:if>
		</administrativeGenderCode>
	</xsl:template>
	<xsl:template match="oms:dob" mode="main_m23">
		<xsl:variable name="main.Dob_in" select="."/>
		<birthTime>
			<xsl:variable name="value_66" select="$main.Dob_in/@value"/>
			<xsl:if test="string($value_66)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_66"/>
				</xsl:attribute>
			</xsl:if>
		</birthTime>
	</xsl:template>
	<xsl:template match="oms:languageCommunication" mode="main_m24">
		<xsl:variable name="main.LanguageCommunication_in" select="."/>
		<languageCommunication>
			<xsl:variable name="v_70" select="$main.LanguageCommunication_in/oms:languageCode"/>
			<xsl:variable name="main.LanguageCode_in" select="$v_70/self::node()"/>
			<xsl:call-template name="templateId_5"/>
			<xsl:apply-templates mode="main_m25" select="$main.LanguageCode_in"/>
		</languageCommunication>
	</xsl:template>
	<xsl:template name="templateId_5">
		<templateId>
			<xsl:variable name="v_68" select="'COCD_TP145201GB01#languageCommunication'"/>
			<xsl:if test="string($v_68)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_68"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_69" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_69)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_69"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:languageCode" mode="main_m25">
		<xsl:variable name="main.LanguageCode_in" select="."/>
		<languageCode>
			<xsl:variable name="code_71" select="$main.LanguageCode_in/@code"/>
			<xsl:if test="string($code_71)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_71"/>
				</xsl:attribute>
			</xsl:if>
		</languageCode>
	</xsl:template>
	<xsl:template match="oms:providerOrg" mode="main_m26">
		<xsl:variable name="main.ProviderOrg_in" select="."/>
		<providerOrganization>
			<xsl:variable name="v_73" select="'ORG'"/>
			<xsl:variable name="v_77" select="$main.ProviderOrg_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s1_in_s1" select="$v_77/self::node()"/>
			<xsl:variable name="v_79" select="$main.ProviderOrg_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s0_in_s0" select="$v_79/self::node()"/>
			<xsl:variable name="v_81" select="$main.ProviderOrg_in/oms:telecom"/>
			<xsl:variable name="main.Telecom_subset_s0_in_s0" select="$v_81/self::node()"/>
			<xsl:variable name="v_84" select="$main.ProviderOrg_in/oms:addr"/>
			<xsl:variable name="main.Addr_subset_s0_in_s0" select="$v_84/self::node()"/>
			<xsl:variable name="v_91" select="$main.ProviderOrg_in/oms:stdClassCode"/>
			<xsl:variable name="main.StdClassCode_in" select="$v_91/self::node()"/>
			<xsl:if test="string($v_73)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_73"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_74" select="'INSTANCE'"/>
			<xsl:if test="string($v_74)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_74"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_6"/>
			<xsl:apply-templates mode="main_m27" select="$main.Id_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m28" select="$main.Name_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m29" select="$main.Telecom_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m30" select="$main.Addr_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m34" select="$main.StdClassCode_in"/>
		</providerOrganization>
	</xsl:template>
	<xsl:template name="templateId_6">
		<templateId>
			<xsl:variable name="v_75" select="'COCD_TP145201GB01#providerOrganization'"/>
			<xsl:if test="string($v_75)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_75"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_76" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_76)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_76"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m27">
		<xsl:variable name="main.Id_subset_s1_in" select="."/>
		<id>
			<xsl:variable name="extension_78" select="$main.Id_subset_s1_in/@extension"/>
			<xsl:if test="string($extension_78)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_78"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m28">
		<xsl:variable name="main.Name_subset_s0_in" select="."/>
		<name>
			<xsl:variable name="textConten_80" select="$main.Name_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_80"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:telecom" mode="main_m29">
		<xsl:variable name="main.Telecom_subset_s0_in" select="."/>
		<telecom>
			<xsl:variable name="value_82" select="$main.Telecom_subset_s0_in/@value"/>
			<xsl:variable name="use_83" select="$main.Telecom_subset_s0_in/@use"/>
			<xsl:if test="string($value_82)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_82"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($use_83)">
				<xsl:attribute name="use">
					<xsl:value-of select="$use_83"/>
				</xsl:attribute>
			</xsl:if>
		</telecom>
	</xsl:template>
	<xsl:template match="oms:addr" mode="main_m30">
		<xsl:variable name="main.Addr_subset_s0_in" select="."/>
		<addr>
			<xsl:variable name="v_85" select="$main.Addr_subset_s0_in/oms:postalCode"/>
			<xsl:variable name="main.PostalCode_subset_s0_in_s0" select="$v_85/self::node()"/>
			<xsl:variable name="v_87" select="$main.Addr_subset_s0_in/oms:city"/>
			<xsl:variable name="main.City_subset_s0_in_s0" select="$v_87/self::node()"/>
			<xsl:variable name="v_89" select="$main.Addr_subset_s0_in/oms:streetAddressLine"/>
			<xsl:variable name="main.StreetAddressLine_subset_s0_in_s0" select="$v_89/self::node()"/>
			<xsl:apply-templates mode="main_m31" select="$main.PostalCode_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m32" select="$main.City_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m33" select="$main.StreetAddressLine_subset_s0_in_s0"/>
		</addr>
	</xsl:template>
	<xsl:template match="oms:postalCode" mode="main_m31">
		<xsl:variable name="main.PostalCode_subset_s0_in" select="."/>
		<postalCode>
			<xsl:variable name="textConten_86" select="$main.PostalCode_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_86"/>
		</postalCode>
	</xsl:template>
	<xsl:template match="oms:city" mode="main_m32">
		<xsl:variable name="main.City_subset_s0_in" select="."/>
		<city>
			<xsl:variable name="textConten_88" select="$main.City_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_88"/>
		</city>
	</xsl:template>
	<xsl:template match="oms:streetAddressLine" mode="main_m33">
		<xsl:variable name="main.StreetAddressLine_subset_s0_in" select="."/>
		<streetAddressLine>
			<xsl:variable name="textConten_90" select="$main.StreetAddressLine_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_90"/>
		</streetAddressLine>
	</xsl:template>
	<xsl:template match="oms:stdClassCode" mode="main_m34">
		<xsl:variable name="main.StdClassCode_in" select="."/>
		<standardIndustryClassCode>
			<xsl:variable name="code_92" select="$main.StdClassCode_in/@code"/>
			<xsl:variable name="codeSystem_93" select="$main.StdClassCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_94" select="$main.StdClassCode_in/@displayName"/>
			<xsl:if test="string($code_92)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_92"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_93)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_93"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_94)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_94"/>
				</xsl:attribute>
			</xsl:if>
		</standardIndustryClassCode>
	</xsl:template>
	<xsl:template match="oms:authorPerson" mode="main_m35">
		<xsl:variable name="main.AuthorPerson_in" select="."/>
		<author_AssignedAuthor_Person>
			<xsl:variable name="v_96" select="'AUT'"/>
			<xsl:variable name="v_99" select="$main.AuthorPerson_in/oms:time"/>
			<xsl:variable name="main.Time_in" select="$v_99/self::node()"/>
			<xsl:if test="string($v_96)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_96"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_97" select="'OP'"/>
			<xsl:if test="string($v_97)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_97"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="functionCode_7"/>
			<xsl:apply-templates mode="main_m36" select="$main.Time_in"/>
			<xsl:call-template name="COCD_TP145200GB01.AssignedAuthor_Person_8">
				<xsl:with-param name="main.AuthorPerson_in" select="$main.AuthorPerson_in"/>
			</xsl:call-template>
		</author_AssignedAuthor_Person>
	</xsl:template>
	<xsl:template name="functionCode_7">
		<functionCode>
			<xsl:variable name="v_98" select="'OA'"/>
			<xsl:if test="string($v_98)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_98"/>
				</xsl:attribute>
			</xsl:if>
		</functionCode>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m36">
		<xsl:variable name="main.Time_in" select="."/>
		<time>
			<xsl:variable name="value_100" select="$main.Time_in/@value"/>
			<xsl:if test="string($value_100)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_100"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145200GB01.AssignedAuthor_Person_8">
		<xsl:param name="main.AuthorPerson_in"/>
		<COCD_TP145200GB01.AssignedAuthor_Person>
			<xsl:variable name="v_101" select="'ASSIGNED'"/>
			<xsl:variable name="v_104" select="$main.AuthorPerson_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s2_in_s2" select="$v_104/self::node()"/>
			<xsl:variable name="v_108" select="$main.AuthorPerson_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s0_in_s0" select="$v_108/self::node()"/>
			<xsl:variable name="v_110" select="$main.AuthorPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s1_in_s1" select="$v_110/self::node()"/>
			<xsl:if test="string($v_101)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_101"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_9"/>
			<xsl:apply-templates mode="main_m37" select="$main.Id_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m38" select="$main.Code_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m39" select="$main.Name_subset_s1_in_s1"/>
			<xsl:call-template name="representedOrganization_11">
				<xsl:with-param name="main.AuthorPerson_in" select="$main.AuthorPerson_in"/>
			</xsl:call-template>
		</COCD_TP145200GB01.AssignedAuthor_Person>
	</xsl:template>
	<xsl:template name="templateId_9">
		<templateId>
			<xsl:variable name="v_102" select="'COCD_TP145200GB01#AssignedAuthor'"/>
			<xsl:if test="string($v_102)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_102"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_103" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_103)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_103"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m37">
		<xsl:variable name="main.Id_subset_s2_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_105" select="$main.Id_subset_s2_in/@nullFlavor"/>
			<xsl:variable name="root_106" select="$main.Id_subset_s2_in/@root"/>
			<xsl:variable name="extension_107" select="$main.Id_subset_s2_in/@extension"/>
			<xsl:if test="string($nullFlavor_105)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_105"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_106)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_106"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_107)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_107"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m38">
		<xsl:variable name="main.Code_subset_s0_in" select="."/>
		<code>
			<xsl:variable name="code_109" select="$main.Code_subset_s0_in/@code"/>
			<xsl:if test="string($code_109)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_109"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m39">
		<xsl:variable name="main.Name_subset_s1_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_111" select="'PSN'"/>
			<xsl:variable name="v_115" select="$main.Name_subset_s1_in/self::node()"/>
			<xsl:variable name="v_116" select="$v_115/ancestor::oms:authorPerson"/>
			<xsl:variable name="v_117" select="$v_116/self::node()"/>
			<xsl:variable name="v_118" select="($v_117/ancestor::oms:author)[1]"/>
			<xsl:variable name="v_119" select="$v_118/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_119/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.Author_in" select="$v_118/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="main.AuthorPerson_in" select="$v_116/self::node()[($main.Author_in)]"/>
			<xsl:if test="string($v_111)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_111"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_112" select="'INSTANCE'"/>
			<xsl:if test="string($v_112)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_112"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_10"/>
			<xsl:apply-templates mode="main_m40" select="$main.AuthorPerson_in">
				<xsl:with-param name="main.Name_subset_s1_in" select="$main.Name_subset_s1_in"/>
			</xsl:apply-templates>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_10">
		<templateId>
			<xsl:variable name="v_113" select="'COCD_TP145200GB01#assignedPerson'"/>
			<xsl:if test="string($v_113)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_113"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_114" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_114)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_114"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:authorPerson" mode="main_m40">
		<xsl:param name="main.Name_subset_s1_in"/>
		<xsl:variable name="main.AuthorPerson_in" select="."/>
		<name>
			<xsl:variable name="v_120" select="$main.Name_subset_s1_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s0_in_s0" select="$v_120/self::node()"/>
			<xsl:variable name="v_122" select="$main.Name_subset_s1_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s0_in_s0" select="$v_122/self::node()"/>
			<xsl:variable name="v_124" select="$main.Name_subset_s1_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s0_in_s0" select="$v_124/self::node()"/>
			<xsl:apply-templates mode="main_m41" select="$main.Prefix_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m42" select="$main.Given_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m43" select="$main.Family_subset_s0_in_s0"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m41">
		<xsl:variable name="main.Prefix_subset_s0_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_121" select="$main.Prefix_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_121"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m42">
		<xsl:variable name="main.Given_subset_s0_in" select="."/>
		<given>
			<xsl:variable name="textConten_123" select="$main.Given_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_123"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m43">
		<xsl:variable name="main.Family_subset_s0_in" select="."/>
		<family>
			<xsl:variable name="textConten_125" select="$main.Family_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_125"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_11">
		<xsl:param name="main.AuthorPerson_in"/>
		<representedOrganization>
			<xsl:variable name="v_126" select="'ORG'"/>
			<xsl:variable name="v_130" select="$main.AuthorPerson_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_in" select="$v_130/self::node()"/>
			<xsl:variable name="v_134" select="$main.AuthorPerson_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_in" select="$v_134/self::node()"/>
			<xsl:if test="string($v_126)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_126"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_127" select="'INSTANCE'"/>
			<xsl:if test="string($v_127)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_127"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_12"/>
			<xsl:apply-templates mode="main_m44" select="$main.OrgId_in"/>
			<xsl:apply-templates mode="main_m45" select="$main.OrgName_in"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_12">
		<templateId>
			<xsl:variable name="v_128" select="'COCD_TP145200GB01#representedOrganization'"/>
			<xsl:if test="string($v_128)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_128"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_129" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_129)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_129"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m44">
		<xsl:variable name="main.OrgId_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_131" select="$main.OrgId_in/@nullFlavor"/>
			<xsl:variable name="root_132" select="$main.OrgId_in/@root"/>
			<xsl:variable name="extension_133" select="$main.OrgId_in/@extension"/>
			<xsl:if test="string($nullFlavor_131)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_131"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_132)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_132"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_133)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_133"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m45">
		<xsl:variable name="main.OrgName_in" select="."/>
		<name>
			<xsl:variable name="textConten_135" select="$main.OrgName_in/self::node()"/>
			<xsl:value-of select="$textConten_135"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:authorNonNamedPerson" mode="main_m46">
		<xsl:variable name="main.AuthorNonNamedPerson_in" select="."/>
		<author_AssignedAuthor_Anon>
			<xsl:variable name="v_137" select="'AUT'"/>
			<xsl:variable name="v_140" select="$main.AuthorNonNamedPerson_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s0_in_s0" select="$v_140/self::node()"/>
			<xsl:if test="string($v_137)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_137"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_138" select="'OP'"/>
			<xsl:if test="string($v_138)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_138"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="functionCode_13"/>
			<xsl:apply-templates mode="main_m47" select="$main.Time_subset_s0_in_s0"/>
			<xsl:call-template name="COCD_TP145208GB01.AssignedAuthor_Anon_14">
				<xsl:with-param name="main.AuthorNonNamedPerson_in" select="$main.AuthorNonNamedPerson_in"/>
			</xsl:call-template>
		</author_AssignedAuthor_Anon>
	</xsl:template>
	<xsl:template name="functionCode_13">
		<functionCode>
			<xsl:variable name="v_139" select="'OA'"/>
			<xsl:if test="string($v_139)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_139"/>
				</xsl:attribute>
			</xsl:if>
		</functionCode>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m47">
		<xsl:variable name="main.Time_subset_s0_in" select="."/>
		<time>
			<xsl:variable name="value_141" select="$main.Time_subset_s0_in/@value"/>
			<xsl:if test="string($value_141)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_141"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145208GB01.AssignedAuthor_Anon_14">
		<xsl:param name="main.AuthorNonNamedPerson_in"/>
		<COCD_TP145208GB01.AssignedAuthor_Anon>
			<xsl:variable name="v_142" select="'ASSIGNED'"/>
			<xsl:variable name="v_145" select="$main.AuthorNonNamedPerson_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s3_in_s3" select="$v_145/self::node()"/>
			<xsl:variable name="v_149" select="$main.AuthorNonNamedPerson_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s1_in_s1" select="$v_149/self::node()"/>
			<xsl:if test="string($v_142)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_142"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_15"/>
			<xsl:apply-templates mode="main_m48" select="$main.Id_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m49" select="$main.Code_subset_s1_in_s1"/>
			<xsl:call-template name="representedOrganization_16">
				<xsl:with-param name="main.AuthorNonNamedPerson_in" select="$main.AuthorNonNamedPerson_in"/>
			</xsl:call-template>
		</COCD_TP145208GB01.AssignedAuthor_Anon>
	</xsl:template>
	<xsl:template name="templateId_15">
		<templateId>
			<xsl:variable name="v_143" select="'COCD_TP145208GB01#AssignedAuthor'"/>
			<xsl:if test="string($v_143)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_143"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_144" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_144)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_144"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m48">
		<xsl:variable name="main.Id_subset_s3_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_146" select="$main.Id_subset_s3_in/@nullFlavor"/>
			<xsl:variable name="root_147" select="$main.Id_subset_s3_in/@root"/>
			<xsl:variable name="extension_148" select="$main.Id_subset_s3_in/@extension"/>
			<xsl:if test="string($nullFlavor_146)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_146"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_147)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_147"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_148)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_148"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m49">
		<xsl:variable name="main.Code_subset_s1_in" select="."/>
		<code>
			<xsl:variable name="code_150" select="$main.Code_subset_s1_in/@code"/>
			<xsl:if test="string($code_150)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_150"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template name="representedOrganization_16">
		<xsl:param name="main.AuthorNonNamedPerson_in"/>
		<representedOrganization>
			<xsl:variable name="v_151" select="'ORG'"/>
			<xsl:variable name="v_155" select="$main.AuthorNonNamedPerson_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s0_in_s0" select="$v_155/self::node()"/>
			<xsl:variable name="v_159" select="$main.AuthorNonNamedPerson_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s0_in_s0" select="$v_159/self::node()"/>
			<xsl:if test="string($v_151)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_151"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_152" select="'INSTANCE'"/>
			<xsl:if test="string($v_152)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_152"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_17"/>
			<xsl:apply-templates mode="main_m50" select="$main.OrgId_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m51" select="$main.OrgName_subset_s0_in_s0"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_17">
		<templateId>
			<xsl:variable name="v_153" select="'COCD_TP145208GB01#representedOrganization'"/>
			<xsl:if test="string($v_153)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_153"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_154" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_154)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_154"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m50">
		<xsl:variable name="main.OrgId_subset_s0_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_156" select="$main.OrgId_subset_s0_in/@nullFlavor"/>
			<xsl:variable name="root_157" select="$main.OrgId_subset_s0_in/@root"/>
			<xsl:variable name="extension_158" select="$main.OrgId_subset_s0_in/@extension"/>
			<xsl:if test="string($nullFlavor_156)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_156"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_157)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_157"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_158)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_158"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m51">
		<xsl:variable name="main.OrgName_subset_s0_in" select="."/>
		<name>
			<xsl:variable name="textConten_160" select="$main.OrgName_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_160"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:authorWorkgroup" mode="main_m52">
		<xsl:variable name="main.AuthorWorkgroup_in" select="."/>
		<author_Workgroup>
			<xsl:variable name="v_162" select="'AUT'"/>
			<xsl:variable name="v_165" select="$main.AuthorWorkgroup_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s1_in_s1" select="$v_165/self::node()"/>
			<xsl:if test="string($v_162)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_162"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_163" select="'OP'"/>
			<xsl:if test="string($v_163)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_163"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="functionCode_18"/>
			<xsl:apply-templates mode="main_m53" select="$main.Time_subset_s1_in_s1"/>
			<xsl:call-template name="COCD_TP145212GB02.Workgroup_19">
				<xsl:with-param name="main.AuthorWorkgroup_in" select="$main.AuthorWorkgroup_in"/>
			</xsl:call-template>
		</author_Workgroup>
	</xsl:template>
	<xsl:template name="functionCode_18">
		<functionCode>
			<xsl:variable name="v_164" select="'OA'"/>
			<xsl:if test="string($v_164)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_164"/>
				</xsl:attribute>
			</xsl:if>
		</functionCode>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m53">
		<xsl:variable name="main.Time_subset_s1_in" select="."/>
		<time>
			<xsl:variable name="value_166" select="$main.Time_subset_s1_in/@value"/>
			<xsl:if test="string($value_166)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_166"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145212GB02.Workgroup_19">
		<xsl:param name="main.AuthorWorkgroup_in"/>
		<COCD_TP145212GB02.Workgroup>
			<xsl:variable name="v_167" select="'ASSIGNED'"/>
			<xsl:variable name="v_170" select="$main.AuthorWorkgroup_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s4_in_s4" select="$v_170/self::node()"/>
			<xsl:variable name="v_174" select="$main.AuthorWorkgroup_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s2_in_s2" select="$v_174/self::node()"/>
			<xsl:variable name="v_176" select="$main.AuthorWorkgroup_in/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_in" select="$v_176/self::node()"/>
			<xsl:if test="string($v_167)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_167"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_20"/>
			<xsl:apply-templates mode="main_m54" select="$main.Id_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m55" select="$main.Code_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m56" select="$main.AssignedPerson_in"/>
			<xsl:call-template name="representedOrganization_22">
				<xsl:with-param name="main.AuthorWorkgroup_in" select="$main.AuthorWorkgroup_in"/>
			</xsl:call-template>
		</COCD_TP145212GB02.Workgroup>
	</xsl:template>
	<xsl:template name="templateId_20">
		<templateId>
			<xsl:variable name="v_168" select="'COCD_TP145212GB02#Workgroup'"/>
			<xsl:if test="string($v_168)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_168"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_169" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_169)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_169"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m54">
		<xsl:variable name="main.Id_subset_s4_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_171" select="$main.Id_subset_s4_in/@nullFlavor"/>
			<xsl:variable name="root_172" select="$main.Id_subset_s4_in/@root"/>
			<xsl:variable name="extension_173" select="$main.Id_subset_s4_in/@extension"/>
			<xsl:if test="string($nullFlavor_171)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_171"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_172)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_172"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_173)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_173"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m55">
		<xsl:variable name="main.Code_subset_s2_in" select="."/>
		<code>
			<xsl:variable name="code_175" select="$main.Code_subset_s2_in/@code"/>
			<xsl:if test="string($code_175)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_175"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m56">
		<xsl:variable name="main.AssignedPerson_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_177" select="'PSN'"/>
			<xsl:variable name="v_181" select="$main.AssignedPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s2_in_s2" select="$v_181/self::node()"/>
			<xsl:if test="string($v_177)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_177"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_178" select="'INSTANCE'"/>
			<xsl:if test="string($v_178)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_178"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_21"/>
			<xsl:apply-templates mode="main_m57" select="$main.Name_subset_s2_in_s2"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_21">
		<templateId>
			<xsl:variable name="v_179" select="'COCD_TP145212GB02#assignedPerson'"/>
			<xsl:if test="string($v_179)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_179"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_180" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_180)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_180"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m57">
		<xsl:variable name="main.Name_subset_s2_in" select="."/>
		<name>
			<xsl:variable name="v_182" select="$main.Name_subset_s2_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s1_in_s1" select="$v_182/self::node()"/>
			<xsl:variable name="v_184" select="$main.Name_subset_s2_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s1_in_s1" select="$v_184/self::node()"/>
			<xsl:variable name="v_186" select="$main.Name_subset_s2_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s1_in_s1" select="$v_186/self::node()"/>
			<xsl:apply-templates mode="main_m58" select="$main.Prefix_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m59" select="$main.Given_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m60" select="$main.Family_subset_s1_in_s1"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m58">
		<xsl:variable name="main.Prefix_subset_s1_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_183" select="$main.Prefix_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_183"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m59">
		<xsl:variable name="main.Given_subset_s1_in" select="."/>
		<given>
			<xsl:variable name="textConten_185" select="$main.Given_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_185"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m60">
		<xsl:variable name="main.Family_subset_s1_in" select="."/>
		<family>
			<xsl:variable name="textConten_187" select="$main.Family_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_187"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_22">
		<xsl:param name="main.AuthorWorkgroup_in"/>
		<representedOrganization>
			<xsl:variable name="v_188" select="'ORG'"/>
			<xsl:variable name="v_192" select="$main.AuthorWorkgroup_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s1_in_s1" select="$v_192/self::node()"/>
			<xsl:variable name="v_196" select="$main.AuthorWorkgroup_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s1_in_s1" select="$v_196/self::node()"/>
			<xsl:if test="string($v_188)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_188"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_189" select="'INSTANCE'"/>
			<xsl:if test="string($v_189)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_189"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_23"/>
			<xsl:apply-templates mode="main_m61" select="$main.OrgId_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m62" select="$main.OrgName_subset_s1_in_s1"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_23">
		<templateId>
			<xsl:variable name="v_190" select="'COCD_TP145212GB02#representedOrganization'"/>
			<xsl:if test="string($v_190)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_190"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_191" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_191)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_191"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m61">
		<xsl:variable name="main.OrgId_subset_s1_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_193" select="$main.OrgId_subset_s1_in/@nullFlavor"/>
			<xsl:variable name="root_194" select="$main.OrgId_subset_s1_in/@root"/>
			<xsl:variable name="extension_195" select="$main.OrgId_subset_s1_in/@extension"/>
			<xsl:if test="string($nullFlavor_193)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_193"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_194)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_194"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_195)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_195"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m62">
		<xsl:variable name="main.OrgName_subset_s1_in" select="."/>
		<name>
			<xsl:variable name="textConten_197" select="$main.OrgName_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_197"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:authorDevice" mode="main_m63">
		<xsl:variable name="main.AuthorDevice_in" select="."/>
		<author_AssignedAuthorDevice>
			<xsl:variable name="v_199" select="'AUT'"/>
			<xsl:variable name="v_202" select="$main.AuthorDevice_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s2_in_s2" select="$v_202/self::node()"/>
			<xsl:if test="string($v_199)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_199"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_200" select="'OP'"/>
			<xsl:if test="string($v_200)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_200"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="functionCode_24"/>
			<xsl:apply-templates mode="main_m64" select="$main.Time_subset_s2_in_s2"/>
			<xsl:call-template name="COCD_TP145207GB01.AssignedAuthorDevice_25">
				<xsl:with-param name="main.AuthorDevice_in" select="$main.AuthorDevice_in"/>
			</xsl:call-template>
		</author_AssignedAuthorDevice>
	</xsl:template>
	<xsl:template name="functionCode_24">
		<functionCode>
			<xsl:variable name="v_201" select="'OA'"/>
			<xsl:if test="string($v_201)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_201"/>
				</xsl:attribute>
			</xsl:if>
		</functionCode>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m64">
		<xsl:variable name="main.Time_subset_s2_in" select="."/>
		<time>
			<xsl:variable name="value_203" select="$main.Time_subset_s2_in/@value"/>
			<xsl:if test="string($value_203)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_203"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145207GB01.AssignedAuthorDevice_25">
		<xsl:param name="main.AuthorDevice_in"/>
		<COCD_TP145207GB01.AssignedAuthorDevice>
			<xsl:variable name="v_204" select="'ASSIGNED'"/>
			<xsl:variable name="v_207" select="$main.AuthorDevice_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s5_in_s5" select="$v_207/self::node()"/>
			<xsl:if test="string($v_204)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_204"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_26"/>
			<xsl:apply-templates mode="main_m65" select="$main.Id_subset_s5_in_s5"/>
			<xsl:call-template name="assignedAuthoringDevice_27">
				<xsl:with-param name="main.AuthorDevice_in" select="$main.AuthorDevice_in"/>
			</xsl:call-template>
			<xsl:call-template name="representedOrganization_29">
				<xsl:with-param name="main.AuthorDevice_in" select="$main.AuthorDevice_in"/>
			</xsl:call-template>
		</COCD_TP145207GB01.AssignedAuthorDevice>
	</xsl:template>
	<xsl:template name="templateId_26">
		<templateId>
			<xsl:variable name="v_205" select="'COCD_TP145207GB01#AssignedAuthorDevice'"/>
			<xsl:if test="string($v_205)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_205"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_206" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_206)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_206"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m65">
		<xsl:variable name="main.Id_subset_s5_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_208" select="$main.Id_subset_s5_in/@nullFlavor"/>
			<xsl:variable name="root_209" select="$main.Id_subset_s5_in/@root"/>
			<xsl:variable name="extension_210" select="$main.Id_subset_s5_in/@extension"/>
			<xsl:if test="string($nullFlavor_208)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_208"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_209)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_209"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_210)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_210"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template name="assignedAuthoringDevice_27">
		<xsl:param name="main.AuthorDevice_in"/>
		<assignedAuthoringDevice>
			<xsl:variable name="v_211" select="'DEV'"/>
			<xsl:variable name="v_215" select="$main.AuthorDevice_in/oms:devName"/>
			<xsl:variable name="main.DevName_in" select="$v_215/self::node()"/>
			<xsl:variable name="v_217" select="$main.AuthorDevice_in/oms:softName"/>
			<xsl:variable name="main.SoftName_in" select="$v_217/self::node()"/>
			<xsl:if test="string($v_211)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_211"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_212" select="'INSTANCE'"/>
			<xsl:if test="string($v_212)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_212"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_28"/>
			<xsl:apply-templates mode="main_m66" select="$main.DevName_in"/>
			<xsl:apply-templates mode="main_m67" select="$main.SoftName_in"/>
		</assignedAuthoringDevice>
	</xsl:template>
	<xsl:template name="templateId_28">
		<templateId>
			<xsl:variable name="v_213" select="'COCD_TP145207GB01#assignedAuthoringDevice'"/>
			<xsl:if test="string($v_213)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_213"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_214" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_214)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_214"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:devName" mode="main_m66">
		<xsl:variable name="main.DevName_in" select="."/>
		<manufacturerModelName>
			<xsl:variable name="textConten_216" select="$main.DevName_in/self::node()"/>
			<xsl:value-of select="$textConten_216"/>
		</manufacturerModelName>
	</xsl:template>
	<xsl:template match="oms:softName" mode="main_m67">
		<xsl:variable name="main.SoftName_in" select="."/>
		<softwareName>
			<xsl:variable name="textConten_218" select="$main.SoftName_in/self::node()"/>
			<xsl:value-of select="$textConten_218"/>
		</softwareName>
	</xsl:template>
	<xsl:template name="representedOrganization_29">
		<xsl:param name="main.AuthorDevice_in"/>
		<representedOrganization>
			<xsl:variable name="v_219" select="'ORG'"/>
			<xsl:variable name="v_223" select="$main.AuthorDevice_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s2_in_s2" select="$v_223/self::node()"/>
			<xsl:variable name="v_227" select="$main.AuthorDevice_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s2_in_s2" select="$v_227/self::node()"/>
			<xsl:if test="string($v_219)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_219"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_220" select="'INSTANCE'"/>
			<xsl:if test="string($v_220)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_220"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_30"/>
			<xsl:apply-templates mode="main_m68" select="$main.OrgId_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m69" select="$main.OrgName_subset_s2_in_s2"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_30">
		<templateId>
			<xsl:variable name="v_221" select="'COCD_TP145207GB01#representedOrganization'"/>
			<xsl:if test="string($v_221)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_221"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_222" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_222)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_222"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m68">
		<xsl:variable name="main.OrgId_subset_s2_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_224" select="$main.OrgId_subset_s2_in/@nullFlavor"/>
			<xsl:variable name="root_225" select="$main.OrgId_subset_s2_in/@root"/>
			<xsl:variable name="extension_226" select="$main.OrgId_subset_s2_in/@extension"/>
			<xsl:if test="string($nullFlavor_224)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_224"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_225)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_225"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_226)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_226"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m69">
		<xsl:variable name="main.OrgName_subset_s2_in" select="."/>
		<name>
			<xsl:variable name="textConten_228" select="$main.OrgName_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_228"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:dataEnterer" mode="main_m70">
		<xsl:variable name="main.DataEnterer_in" select="."/>
		<dataEnterer_AssignedEntity>
			<xsl:variable name="v_230" select="'ENT'"/>
			<xsl:variable name="v_232" select="$main.DataEnterer_in/oms:dataEntName"/>
			<xsl:variable name="main.DataEntName_in" select="$v_232/self::node()"/>
			<xsl:if test="string($v_230)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_230"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_231" select="'OP'"/>
			<xsl:if test="string($v_231)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_231"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m71" select="$main.DataEntName_in">
				<xsl:with-param name="main.DataEnterer_in" select="$main.DataEnterer_in"/>
			</xsl:apply-templates>
		</dataEnterer_AssignedEntity>
	</xsl:template>
	<xsl:template match="oms:dataEntName" mode="main_m71">
		<xsl:param name="main.DataEnterer_in"/>
		<xsl:variable name="main.DataEntName_in" select="."/>
		<COCD_TP145205GB01.AssignedEntity>
			<xsl:variable name="v_233" select="'ASSIGNED'"/>
			<xsl:variable name="v_236" select="$main.DataEnterer_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s6_in_s6" select="$v_236/self::node()"/>
			<xsl:variable name="v_240" select="$main.DataEnterer_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s3_in_s3" select="$v_240/self::node()"/>
			<xsl:variable name="v_242" select="$main.DataEnterer_in/oms:telecom"/>
			<xsl:variable name="main.Telecom_subset_s1_in_s1" select="$v_242/self::node()"/>
			<xsl:variable name="v_245" select="$main.DataEntName_in/self::node()"/>
			<xsl:variable name="v_246" select="$v_245/ancestor::oms:dataEnterer"/>
			<xsl:variable name="v_247" select="$v_246/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_247/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.DataEnterer_in" select="$v_246/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="v_259" select="$main.DataEnterer_in/oms:representedOrganization"/>
			<xsl:variable name="main.RepresentedOrganization_in" select="$v_259/self::node()"/>
			<xsl:if test="string($v_233)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_233"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_31"/>
			<xsl:apply-templates mode="main_m72" select="$main.Id_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m73" select="$main.Code_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m74" select="$main.Telecom_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m75" select="$main.DataEnterer_in"/>
			<xsl:apply-templates mode="main_m80" select="$main.RepresentedOrganization_in"/>
		</COCD_TP145205GB01.AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_31">
		<templateId>
			<xsl:variable name="v_234" select="'COCD_TP145205GB01#AssignedEntity'"/>
			<xsl:if test="string($v_234)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_234"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_235" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_235)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_235"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m72">
		<xsl:variable name="main.Id_subset_s6_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_237" select="$main.Id_subset_s6_in/@nullFlavor"/>
			<xsl:variable name="root_238" select="$main.Id_subset_s6_in/@root"/>
			<xsl:variable name="extension_239" select="$main.Id_subset_s6_in/@extension"/>
			<xsl:if test="string($nullFlavor_237)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_237"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_238)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_238"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_239)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_239"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m73">
		<xsl:variable name="main.Code_subset_s3_in" select="."/>
		<code>
			<xsl:variable name="code_241" select="$main.Code_subset_s3_in/@code"/>
			<xsl:if test="string($code_241)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_241"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:telecom" mode="main_m74">
		<xsl:variable name="main.Telecom_subset_s1_in" select="."/>
		<telecom>
			<xsl:variable name="value_243" select="$main.Telecom_subset_s1_in/@value"/>
			<xsl:variable name="use_244" select="$main.Telecom_subset_s1_in/@use"/>
			<xsl:if test="string($value_243)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_243"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($use_244)">
				<xsl:attribute name="use">
					<xsl:value-of select="$use_244"/>
				</xsl:attribute>
			</xsl:if>
		</telecom>
	</xsl:template>
	<xsl:template match="oms:dataEnterer" mode="main_m75">
		<xsl:variable name="main.DataEnterer_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_248" select="'PSN'"/>
			<xsl:variable name="v_252" select="$main.DataEnterer_in/oms:dataEntName"/>
			<xsl:variable name="main.DataEntName_in" select="$v_252/self::node()"/>
			<xsl:if test="string($v_248)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_248"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_249" select="'INSTANCE'"/>
			<xsl:if test="string($v_249)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_249"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_32"/>
			<xsl:apply-templates mode="main_m76" select="$main.DataEntName_in"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_32">
		<templateId>
			<xsl:variable name="v_250" select="'COCD_TP145205GB01#assignedPerson'"/>
			<xsl:if test="string($v_250)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_250"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_251" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_251)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_251"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:dataEntName" mode="main_m76">
		<xsl:variable name="main.DataEntName_in" select="."/>
		<name>
			<xsl:variable name="v_253" select="$main.DataEntName_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s2_in_s2" select="$v_253/self::node()"/>
			<xsl:variable name="v_255" select="$main.DataEntName_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s2_in_s2" select="$v_255/self::node()"/>
			<xsl:variable name="v_257" select="$main.DataEntName_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s2_in_s2" select="$v_257/self::node()"/>
			<xsl:apply-templates mode="main_m77" select="$main.Prefix_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m78" select="$main.Given_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m79" select="$main.Family_subset_s2_in_s2"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m77">
		<xsl:variable name="main.Prefix_subset_s2_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_254" select="$main.Prefix_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_254"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m78">
		<xsl:variable name="main.Given_subset_s2_in" select="."/>
		<given>
			<xsl:variable name="textConten_256" select="$main.Given_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_256"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m79">
		<xsl:variable name="main.Family_subset_s2_in" select="."/>
		<family>
			<xsl:variable name="textConten_258" select="$main.Family_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_258"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:representedOrganization" mode="main_m80">
		<xsl:variable name="main.RepresentedOrganization_in" select="."/>
		<representedOrganization>
			<xsl:variable name="v_260" select="'ORG'"/>
			<xsl:variable name="v_264" select="$main.RepresentedOrganization_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s3_in_s3" select="$v_264/self::node()"/>
			<xsl:variable name="v_268" select="$main.RepresentedOrganization_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s3_in_s3" select="$v_268/self::node()"/>
			<xsl:if test="string($v_260)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_260"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_261" select="'INSTANCE'"/>
			<xsl:if test="string($v_261)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_261"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_33"/>
			<xsl:apply-templates mode="main_m81" select="$main.OrgId_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m82" select="$main.OrgName_subset_s3_in_s3"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_33">
		<templateId>
			<xsl:variable name="v_262" select="'COCD_TP145205GB01#representedOrganization'"/>
			<xsl:if test="string($v_262)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_262"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_263" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_263)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_263"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m81">
		<xsl:variable name="main.OrgId_subset_s3_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_265" select="$main.OrgId_subset_s3_in/@nullFlavor"/>
			<xsl:variable name="root_266" select="$main.OrgId_subset_s3_in/@root"/>
			<xsl:variable name="extension_267" select="$main.OrgId_subset_s3_in/@extension"/>
			<xsl:if test="string($nullFlavor_265)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_265"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_266)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_266"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_267)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_267"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m82">
		<xsl:variable name="main.OrgName_subset_s3_in" select="."/>
		<name>
			<xsl:variable name="textConten_269" select="$main.OrgName_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_269"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:informantRelatedEntity" mode="main_m83">
		<xsl:variable name="main.InformantRelatedEntity_in" select="."/>
		<informant_RelatedEntity>
			<xsl:variable name="v_271" select="'INF'"/>
			<xsl:variable name="v_273" select="$main.InformantRelatedEntity_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s4_in_s4" select="$v_273/self::node()"/>
			<xsl:if test="string($v_271)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_271"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_272" select="'OP'"/>
			<xsl:if test="string($v_272)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_272"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m84" select="$main.Code_subset_s4_in_s4">
				<xsl:with-param name="main.InformantRelatedEntity_in" select="$main.InformantRelatedEntity_in"/>
			</xsl:apply-templates>
		</informant_RelatedEntity>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m84">
		<xsl:param name="main.InformantRelatedEntity_in"/>
		<xsl:variable name="main.Code_subset_s4_in" select="."/>
		<COCD_TP145007UK03.RelatedEntity>
			<xsl:variable name="v_274" select="'PRS'"/>
			<xsl:variable name="v_277" select="$main.Code_subset_s4_in/self::node()"/>
			<xsl:variable name="v_278" select="$v_277/ancestor::oms:informantRelatedEntity"/>
			<xsl:variable name="v_279" select="$v_278/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_279/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.InformantRelatedEntity_in" select="$v_278/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="v_283" select="$main.InformantRelatedEntity_in/oms:relatedPerson"/>
			<xsl:variable name="main.RelatedPerson_in" select="$v_283/self::node()"/>
			<xsl:if test="string($v_274)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_274"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_34"/>
			<xsl:apply-templates mode="main_m85" select="$main.InformantRelatedEntity_in">
				<xsl:with-param name="main.Code_subset_s4_in" select="$main.Code_subset_s4_in"/>
			</xsl:apply-templates>
			<xsl:apply-templates mode="main_m86" select="$main.RelatedPerson_in"/>
		</COCD_TP145007UK03.RelatedEntity>
	</xsl:template>
	<xsl:template name="templateId_34">
		<templateId>
			<xsl:variable name="v_275" select="'COCD_TP145007UK03#RelatedEntity'"/>
			<xsl:if test="string($v_275)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_275"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_276" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_276)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_276"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:informantRelatedEntity" mode="main_m85">
		<xsl:param name="main.Code_subset_s4_in"/>
		<xsl:variable name="main.InformantRelatedEntity_in" select="."/>
		<code>
			<xsl:variable name="code_280" select="$main.Code_subset_s4_in/@code"/>
			<xsl:variable name="codeSystem_281" select="$main.Code_subset_s4_in/@codeSystem"/>
			<xsl:variable name="displayNam_282" select="$main.Code_subset_s4_in/@displayName"/>
			<xsl:if test="string($code_280)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_280"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_281)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_281"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_282)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_282"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:relatedPerson" mode="main_m86">
		<xsl:variable name="main.RelatedPerson_in" select="."/>
		<relationshipHolder>
			<xsl:variable name="v_284" select="'PSN'"/>
			<xsl:variable name="v_288" select="$main.RelatedPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s3_in_s3" select="$v_288/self::node()"/>
			<xsl:if test="string($v_284)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_284"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_285" select="'INSTANCE'"/>
			<xsl:if test="string($v_285)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_285"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_35"/>
			<xsl:apply-templates mode="main_m87" select="$main.Name_subset_s3_in_s3"/>
		</relationshipHolder>
	</xsl:template>
	<xsl:template name="templateId_35">
		<templateId>
			<xsl:variable name="v_286" select="'COCD_TP145007UK03#relationshipHolder'"/>
			<xsl:if test="string($v_286)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_286"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_287" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_287)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_287"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m87">
		<xsl:variable name="main.Name_subset_s3_in" select="."/>
		<name>
			<xsl:variable name="v_289" select="$main.Name_subset_s3_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s3_in_s3" select="$v_289/self::node()"/>
			<xsl:variable name="v_291" select="$main.Name_subset_s3_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s3_in_s3" select="$v_291/self::node()"/>
			<xsl:variable name="v_293" select="$main.Name_subset_s3_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s3_in_s3" select="$v_293/self::node()"/>
			<xsl:apply-templates mode="main_m88" select="$main.Prefix_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m89" select="$main.Given_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m90" select="$main.Family_subset_s3_in_s3"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m88">
		<xsl:variable name="main.Prefix_subset_s3_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_290" select="$main.Prefix_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_290"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m89">
		<xsl:variable name="main.Given_subset_s3_in" select="."/>
		<given>
			<xsl:variable name="textConten_292" select="$main.Given_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_292"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m90">
		<xsl:variable name="main.Family_subset_s3_in" select="."/>
		<family>
			<xsl:variable name="textConten_294" select="$main.Family_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_294"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:informantPersonWithOrg" mode="main_m91">
		<xsl:variable name="main.InformantPersonWithOrg_in" select="."/>
		<informant_AssignedEntity>
			<xsl:variable name="v_296" select="'INF'"/>
			<xsl:if test="string($v_296)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_296"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_297" select="'OP'"/>
			<xsl:if test="string($v_297)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_297"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145210GB01.AssignedEntity_36">
				<xsl:with-param name="main.InformantPersonWithOrg_in" select="$main.InformantPersonWithOrg_in"/>
			</xsl:call-template>
		</informant_AssignedEntity>
	</xsl:template>
	<xsl:template name="COCD_TP145210GB01.AssignedEntity_36">
		<xsl:param name="main.InformantPersonWithOrg_in"/>
		<COCD_TP145210GB01.AssignedEntity>
			<xsl:variable name="v_298" select="'ASSIGNED'"/>
			<xsl:variable name="v_301" select="$main.InformantPersonWithOrg_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s7_in_s7" select="$v_301/self::node()"/>
			<xsl:variable name="v_305" select="$main.InformantPersonWithOrg_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s5_in_s5" select="$v_305/self::node()"/>
			<xsl:variable name="v_307" select="$main.InformantPersonWithOrg_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s4_in_s4" select="$v_307/self::node()"/>
			<xsl:if test="string($v_298)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_298"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_37"/>
			<xsl:apply-templates mode="main_m92" select="$main.Id_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m93" select="$main.Code_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m94" select="$main.Name_subset_s4_in_s4"/>
			<xsl:call-template name="representedOrganization_39">
				<xsl:with-param name="main.InformantPersonWithOrg_in" select="$main.InformantPersonWithOrg_in"/>
			</xsl:call-template>
		</COCD_TP145210GB01.AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_37">
		<templateId>
			<xsl:variable name="v_299" select="'COCD_TP145210GB01#AssignedEntity'"/>
			<xsl:if test="string($v_299)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_299"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_300" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_300)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_300"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m92">
		<xsl:variable name="main.Id_subset_s7_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_302" select="$main.Id_subset_s7_in/@nullFlavor"/>
			<xsl:variable name="root_303" select="$main.Id_subset_s7_in/@root"/>
			<xsl:variable name="extension_304" select="$main.Id_subset_s7_in/@extension"/>
			<xsl:if test="string($nullFlavor_302)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_302"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_303)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_303"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_304)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_304"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m93">
		<xsl:variable name="main.Code_subset_s5_in" select="."/>
		<code>
			<xsl:variable name="code_306" select="$main.Code_subset_s5_in/@code"/>
			<xsl:if test="string($code_306)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_306"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m94">
		<xsl:variable name="main.Name_subset_s4_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_308" select="'PSN'"/>
			<xsl:variable name="v_312" select="$main.Name_subset_s4_in/self::node()"/>
			<xsl:variable name="v_313" select="$v_312/ancestor::oms:informantPersonWithOrg"/>
			<xsl:variable name="v_314" select="$v_313/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_314/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.InformantPersonWithOrg_in" select="$v_313/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:if test="string($v_308)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_308"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_309" select="'INSTANCE'"/>
			<xsl:if test="string($v_309)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_309"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_38"/>
			<xsl:apply-templates mode="main_m95" select="$main.InformantPersonWithOrg_in">
				<xsl:with-param name="main.Name_subset_s4_in" select="$main.Name_subset_s4_in"/>
			</xsl:apply-templates>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_38">
		<templateId>
			<xsl:variable name="v_310" select="'COCD_TP145210GB01#assignedPerson'"/>
			<xsl:if test="string($v_310)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_310"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_311" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_311)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_311"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:informantPersonWithOrg" mode="main_m95">
		<xsl:param name="main.Name_subset_s4_in"/>
		<xsl:variable name="main.InformantPersonWithOrg_in" select="."/>
		<name>
			<xsl:variable name="v_315" select="$main.Name_subset_s4_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s4_in_s4" select="$v_315/self::node()"/>
			<xsl:variable name="v_317" select="$main.Name_subset_s4_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s4_in_s4" select="$v_317/self::node()"/>
			<xsl:variable name="v_319" select="$main.Name_subset_s4_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s4_in_s4" select="$v_319/self::node()"/>
			<xsl:apply-templates mode="main_m96" select="$main.Prefix_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m97" select="$main.Given_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m98" select="$main.Family_subset_s4_in_s4"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m96">
		<xsl:variable name="main.Prefix_subset_s4_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_316" select="$main.Prefix_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_316"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m97">
		<xsl:variable name="main.Given_subset_s4_in" select="."/>
		<given>
			<xsl:variable name="textConten_318" select="$main.Given_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_318"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m98">
		<xsl:variable name="main.Family_subset_s4_in" select="."/>
		<family>
			<xsl:variable name="textConten_320" select="$main.Family_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_320"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_39">
		<xsl:param name="main.InformantPersonWithOrg_in"/>
		<representedOrganization>
			<xsl:variable name="v_321" select="'ORG'"/>
			<xsl:variable name="v_325" select="$main.InformantPersonWithOrg_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s4_in_s4" select="$v_325/self::node()"/>
			<xsl:variable name="v_329" select="$main.InformantPersonWithOrg_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s4_in_s4" select="$v_329/self::node()"/>
			<xsl:if test="string($v_321)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_321"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_322" select="'INSTANCE'"/>
			<xsl:if test="string($v_322)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_322"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_40"/>
			<xsl:apply-templates mode="main_m99" select="$main.OrgId_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m100" select="$main.OrgName_subset_s4_in_s4"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_40">
		<templateId>
			<xsl:variable name="v_323" select="'COCD_TP145210GB01#representedOrganization'"/>
			<xsl:if test="string($v_323)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_323"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_324" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_324)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_324"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m99">
		<xsl:variable name="main.OrgId_subset_s4_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_326" select="$main.OrgId_subset_s4_in/@nullFlavor"/>
			<xsl:variable name="root_327" select="$main.OrgId_subset_s4_in/@root"/>
			<xsl:variable name="extension_328" select="$main.OrgId_subset_s4_in/@extension"/>
			<xsl:if test="string($nullFlavor_326)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_326"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_327)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_327"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_328)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_328"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m100">
		<xsl:variable name="main.OrgName_subset_s4_in" select="."/>
		<name>
			<xsl:variable name="textConten_330" select="$main.OrgName_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_330"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:custodian" mode="main_m101">
		<xsl:variable name="main.Custodian_in" select="."/>
		<custodian_AssignedCustodian>
			<xsl:variable name="v_332" select="'CST'"/>
			<xsl:if test="string($v_332)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_332"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145018UK03.AssignedCustodian_41">
				<xsl:with-param name="main.Custodian_in" select="$main.Custodian_in"/>
			</xsl:call-template>
		</custodian_AssignedCustodian>
	</xsl:template>
	<xsl:template name="COCD_TP145018UK03.AssignedCustodian_41">
		<xsl:param name="main.Custodian_in"/>
		<COCD_TP145018UK03.AssignedCustodian>
			<xsl:variable name="v_333" select="'ASSIGNED'"/>
			<xsl:if test="string($v_333)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_333"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_42"/>
			<xsl:call-template name="representedCustodianOrganization_43">
				<xsl:with-param name="main.Custodian_in" select="$main.Custodian_in"/>
			</xsl:call-template>
		</COCD_TP145018UK03.AssignedCustodian>
	</xsl:template>
	<xsl:template name="templateId_42">
		<templateId>
			<xsl:variable name="v_334" select="'COCD_TP145018UK03#AssignedCustodian'"/>
			<xsl:if test="string($v_334)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_334"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_335" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_335)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_335"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="representedCustodianOrganization_43">
		<xsl:param name="main.Custodian_in"/>
		<representedCustodianOrganization>
			<xsl:variable name="v_336" select="'ORG'"/>
			<xsl:variable name="v_340" select="$main.Custodian_in/oms:custId"/>
			<xsl:variable name="main.CustId_in" select="$v_340/self::node()"/>
			<xsl:variable name="v_343" select="$main.Custodian_in/oms:custOrg"/>
			<xsl:variable name="main.CustOrg_in" select="$v_343/self::node()"/>
			<xsl:if test="string($v_336)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_336"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_337" select="'INSTANCE'"/>
			<xsl:if test="string($v_337)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_337"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_44"/>
			<xsl:apply-templates mode="main_m102" select="$main.CustId_in"/>
			<xsl:apply-templates mode="main_m103" select="$main.CustOrg_in"/>
		</representedCustodianOrganization>
	</xsl:template>
	<xsl:template name="templateId_44">
		<templateId>
			<xsl:variable name="v_338" select="'COCD_TP145018UK03#representedCustodianOrganization'"/>
			<xsl:if test="string($v_338)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_338"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_339" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_339)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_339"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:custId" mode="main_m102">
		<xsl:variable name="main.CustId_in" select="."/>
		<id>
			<xsl:variable name="root_341" select="$main.CustId_in/@root"/>
			<xsl:variable name="extension_342" select="$main.CustId_in/@extension"/>
			<xsl:if test="string($root_341)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_341"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_342)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_342"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:custOrg" mode="main_m103">
		<xsl:variable name="main.CustOrg_in" select="."/>
		<name>
			<xsl:variable name="textConten_344" select="$main.CustOrg_in/self::node()"/>
			<xsl:value-of select="$textConten_344"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:informationRecipientPerson" mode="main_m104">
		<xsl:variable name="main.InformationRecipientPerson_in" select="."/>
		<informationRecipient_IntendedRecipient_Person>
			<xsl:variable name="v_346" select="'PRCP'"/>
			<xsl:if test="string($v_346)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_346"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145202GB01.IntendedRecipient_Person_45">
				<xsl:with-param name="main.InformationRecipientPerson_in" select="$main.InformationRecipientPerson_in"/>
			</xsl:call-template>
		</informationRecipient_IntendedRecipient_Person>
	</xsl:template>
	<xsl:template name="COCD_TP145202GB01.IntendedRecipient_Person_45">
		<xsl:param name="main.InformationRecipientPerson_in"/>
		<COCD_TP145202GB01.IntendedRecipient_Person>
			<xsl:variable name="v_347" select="'ASSIGNED'"/>
			<xsl:variable name="v_350" select="$main.InformationRecipientPerson_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s8_in_s8" select="$v_350/self::node()"/>
			<xsl:variable name="v_354" select="$main.InformationRecipientPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s5_in_s5" select="$v_354/self::node()"/>
			<xsl:if test="string($v_347)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_347"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_46"/>
			<xsl:apply-templates mode="main_m105" select="$main.Id_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m106" select="$main.Name_subset_s5_in_s5"/>
			<xsl:call-template name="representedOrganization_48">
				<xsl:with-param name="main.InformationRecipientPerson_in" select="$main.InformationRecipientPerson_in"/>
			</xsl:call-template>
		</COCD_TP145202GB01.IntendedRecipient_Person>
	</xsl:template>
	<xsl:template name="templateId_46">
		<templateId>
			<xsl:variable name="v_348" select="'COCD_TP145202GB01#IntendedRecipient'"/>
			<xsl:if test="string($v_348)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_348"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_349" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_349)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_349"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m105">
		<xsl:variable name="main.Id_subset_s8_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_351" select="$main.Id_subset_s8_in/@nullFlavor"/>
			<xsl:variable name="root_352" select="$main.Id_subset_s8_in/@root"/>
			<xsl:variable name="extension_353" select="$main.Id_subset_s8_in/@extension"/>
			<xsl:if test="string($nullFlavor_351)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_351"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_352)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_352"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_353)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_353"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m106">
		<xsl:variable name="main.Name_subset_s5_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_355" select="'PSN'"/>
			<xsl:variable name="v_359" select="$main.Name_subset_s5_in/self::node()"/>
			<xsl:variable name="v_360" select="$v_359/ancestor::oms:informationRecipientPerson"/>
			<xsl:variable name="v_361" select="$v_360/self::node()"/>
			<xsl:variable name="v_362" select="($v_361/ancestor::oms:informationRecipient)[1]"/>
			<xsl:variable name="v_363" select="$v_362/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_363/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.InformationRecipient_in" select="$v_362/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="main.InformationRecipientPerson_in" select="$v_360/self::node()[($main.InformationRecipient_in)]"/>
			<xsl:if test="string($v_355)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_355"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_356" select="'INSTANCE'"/>
			<xsl:if test="string($v_356)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_356"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_47"/>
			<xsl:apply-templates mode="main_m107" select="$main.InformationRecipientPerson_in">
				<xsl:with-param name="main.Name_subset_s5_in" select="$main.Name_subset_s5_in"/>
			</xsl:apply-templates>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_47">
		<templateId>
			<xsl:variable name="v_357" select="'COCD_TP145202GB01#assignedPerson'"/>
			<xsl:if test="string($v_357)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_357"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_358" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_358)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_358"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:informationRecipientPerson" mode="main_m107">
		<xsl:param name="main.Name_subset_s5_in"/>
		<xsl:variable name="main.InformationRecipientPerson_in" select="."/>
		<name>
			<xsl:variable name="v_364" select="$main.Name_subset_s5_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s5_in_s5" select="$v_364/self::node()"/>
			<xsl:variable name="v_366" select="$main.Name_subset_s5_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s5_in_s5" select="$v_366/self::node()"/>
			<xsl:variable name="v_368" select="$main.Name_subset_s5_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s5_in_s5" select="$v_368/self::node()"/>
			<xsl:apply-templates mode="main_m108" select="$main.Prefix_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m109" select="$main.Given_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m110" select="$main.Family_subset_s5_in_s5"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m108">
		<xsl:variable name="main.Prefix_subset_s5_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_365" select="$main.Prefix_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_365"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m109">
		<xsl:variable name="main.Given_subset_s5_in" select="."/>
		<given>
			<xsl:variable name="textConten_367" select="$main.Given_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_367"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m110">
		<xsl:variable name="main.Family_subset_s5_in" select="."/>
		<family>
			<xsl:variable name="textConten_369" select="$main.Family_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_369"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_48">
		<xsl:param name="main.InformationRecipientPerson_in"/>
		<representedOrganization>
			<xsl:variable name="v_370" select="'ORG'"/>
			<xsl:variable name="v_374" select="$main.InformationRecipientPerson_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s5_in_s5" select="$v_374/self::node()"/>
			<xsl:variable name="v_378" select="$main.InformationRecipientPerson_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s5_in_s5" select="$v_378/self::node()"/>
			<xsl:if test="string($v_370)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_370"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_371" select="'INSTANCE'"/>
			<xsl:if test="string($v_371)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_371"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_49"/>
			<xsl:apply-templates mode="main_m111" select="$main.OrgId_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m112" select="$main.OrgName_subset_s5_in_s5"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_49">
		<templateId>
			<xsl:variable name="v_372" select="'COCD_TP145202GB01#representedOrganization'"/>
			<xsl:if test="string($v_372)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_372"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_373" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_373)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_373"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m111">
		<xsl:variable name="main.OrgId_subset_s5_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_375" select="$main.OrgId_subset_s5_in/@nullFlavor"/>
			<xsl:variable name="root_376" select="$main.OrgId_subset_s5_in/@root"/>
			<xsl:variable name="extension_377" select="$main.OrgId_subset_s5_in/@extension"/>
			<xsl:if test="string($nullFlavor_375)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_375"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_376)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_376"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_377)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_377"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m112">
		<xsl:variable name="main.OrgName_subset_s5_in" select="."/>
		<name>
			<xsl:variable name="textConten_379" select="$main.OrgName_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_379"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:informationRecipientOrg" mode="main_m113">
		<xsl:variable name="main.InformationRecipientOrg_in" select="."/>
		<informationRecipient_IntendedRecipient_Org>
			<xsl:variable name="v_381" select="'PRCP'"/>
			<xsl:if test="string($v_381)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_381"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145203GB02.IntendedRecipient_Org_50">
				<xsl:with-param name="main.InformationRecipientOrg_in" select="$main.InformationRecipientOrg_in"/>
			</xsl:call-template>
		</informationRecipient_IntendedRecipient_Org>
	</xsl:template>
	<xsl:template name="COCD_TP145203GB02.IntendedRecipient_Org_50">
		<xsl:param name="main.InformationRecipientOrg_in"/>
		<COCD_TP145203GB02.IntendedRecipient_Org>
			<xsl:variable name="v_382" select="'ASSIGNED'"/>
			<xsl:if test="string($v_382)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_382"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_51"/>
			<xsl:call-template name="representedOrganization_52">
				<xsl:with-param name="main.InformationRecipientOrg_in" select="$main.InformationRecipientOrg_in"/>
			</xsl:call-template>
		</COCD_TP145203GB02.IntendedRecipient_Org>
	</xsl:template>
	<xsl:template name="templateId_51">
		<templateId>
			<xsl:variable name="v_383" select="'COCD_TP145203GB02#IntendedRecipient'"/>
			<xsl:if test="string($v_383)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_383"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_384" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_384)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_384"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="representedOrganization_52">
		<xsl:param name="main.InformationRecipientOrg_in"/>
		<representedOrganization>
			<xsl:variable name="v_385" select="'ORG'"/>
			<xsl:variable name="v_389" select="$main.InformationRecipientOrg_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s6_in_s6" select="$v_389/self::node()"/>
			<xsl:variable name="v_393" select="$main.InformationRecipientOrg_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s6_in_s6" select="$v_393/self::node()"/>
			<xsl:if test="string($v_385)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_385"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_386" select="'INSTANCE'"/>
			<xsl:if test="string($v_386)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_386"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_53"/>
			<xsl:apply-templates mode="main_m114" select="$main.OrgId_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m115" select="$main.OrgName_subset_s6_in_s6"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_53">
		<templateId>
			<xsl:variable name="v_387" select="'COCD_TP145203GB02#representedOrganization'"/>
			<xsl:if test="string($v_387)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_387"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_388" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_388)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_388"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m114">
		<xsl:variable name="main.OrgId_subset_s6_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_390" select="$main.OrgId_subset_s6_in/@nullFlavor"/>
			<xsl:variable name="root_391" select="$main.OrgId_subset_s6_in/@root"/>
			<xsl:variable name="extension_392" select="$main.OrgId_subset_s6_in/@extension"/>
			<xsl:if test="string($nullFlavor_390)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_390"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_391)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_391"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_392)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_392"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m115">
		<xsl:variable name="main.OrgName_subset_s6_in" select="."/>
		<name>
			<xsl:variable name="textConten_394" select="$main.OrgName_subset_s6_in/self::node()"/>
			<xsl:value-of select="$textConten_394"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:informationRecipientworkgroup" mode="main_m116">
		<xsl:variable name="main.InformationRecipientworkgroup_in" select="."/>
		<informationRecipient_IntendedRecipient_WorkGp>
			<xsl:variable name="v_396" select="'PRCP'"/>
			<xsl:if test="string($v_396)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_396"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145204GB02.IntendedRecipient_WorkGp_54">
				<xsl:with-param name="main.InformationRecipientworkgroup_in" select="$main.InformationRecipientworkgroup_in"/>
			</xsl:call-template>
		</informationRecipient_IntendedRecipient_WorkGp>
	</xsl:template>
	<xsl:template name="COCD_TP145204GB02.IntendedRecipient_WorkGp_54">
		<xsl:param name="main.InformationRecipientworkgroup_in"/>
		<COCD_TP145204GB02.IntendedRecipient_WorkGp>
			<xsl:variable name="v_397" select="'ASSIGNED'"/>
			<xsl:variable name="v_400" select="$main.InformationRecipientworkgroup_in/oms:recipientRoleCode"/>
			<xsl:variable name="main.RecipientRoleCode_in" select="$v_400/self::node()"/>
			<xsl:variable name="v_404" select="$main.InformationRecipientworkgroup_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s9_in_s9" select="$v_404/self::node()"/>
			<xsl:variable name="v_408" select="$main.InformationRecipientworkgroup_in/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s0_in_s0" select="$v_408/self::node()"/>
			<xsl:if test="string($v_397)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_397"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_55"/>
			<xsl:apply-templates mode="main_m117" select="$main.RecipientRoleCode_in"/>
			<xsl:apply-templates mode="main_m118" select="$main.Id_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m119" select="$main.AssignedPerson_subset_s0_in_s0"/>
			<xsl:call-template name="representedOrganization_57">
				<xsl:with-param name="main.InformationRecipientworkgroup_in" select="$main.InformationRecipientworkgroup_in"/>
			</xsl:call-template>
		</COCD_TP145204GB02.IntendedRecipient_WorkGp>
	</xsl:template>
	<xsl:template name="templateId_55">
		<templateId>
			<xsl:variable name="v_398" select="'COCD_TP145204GB02#RecipientWorkgroup'"/>
			<xsl:if test="string($v_398)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_398"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_399" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_399)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_399"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:recipientRoleCode" mode="main_m117">
		<xsl:variable name="main.RecipientRoleCode_in" select="."/>
		<npfitlc:recipientRoleCode>
			<xsl:variable name="code_401" select="$main.RecipientRoleCode_in/@code"/>
			<xsl:variable name="codeSystem_402" select="$main.RecipientRoleCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_403" select="$main.RecipientRoleCode_in/@displayName"/>
			<xsl:if test="string($code_401)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_401"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_402)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_402"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_403)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_403"/>
				</xsl:attribute>
			</xsl:if>
		</npfitlc:recipientRoleCode>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m118">
		<xsl:variable name="main.Id_subset_s9_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_405" select="$main.Id_subset_s9_in/@nullFlavor"/>
			<xsl:variable name="root_406" select="$main.Id_subset_s9_in/@root"/>
			<xsl:variable name="extension_407" select="$main.Id_subset_s9_in/@extension"/>
			<xsl:if test="string($nullFlavor_405)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_405"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_406)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_406"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_407)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_407"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m119">
		<xsl:variable name="main.AssignedPerson_subset_s0_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_409" select="'PSN'"/>
			<xsl:variable name="v_413" select="$main.AssignedPerson_subset_s0_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s6_in_s6" select="$v_413/self::node()"/>
			<xsl:if test="string($v_409)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_409"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_410" select="'INSTANCE'"/>
			<xsl:if test="string($v_410)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_410"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_56"/>
			<xsl:apply-templates mode="main_m120" select="$main.Name_subset_s6_in_s6"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_56">
		<templateId>
			<xsl:variable name="v_411" select="'COCD_TP145204GB02#assignedPerson'"/>
			<xsl:if test="string($v_411)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_411"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_412" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_412)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_412"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m120">
		<xsl:variable name="main.Name_subset_s6_in" select="."/>
		<name>
			<xsl:variable name="v_414" select="$main.Name_subset_s6_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s6_in_s6" select="$v_414/self::node()"/>
			<xsl:variable name="v_416" select="$main.Name_subset_s6_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s6_in_s6" select="$v_416/self::node()"/>
			<xsl:variable name="v_418" select="$main.Name_subset_s6_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s6_in_s6" select="$v_418/self::node()"/>
			<xsl:apply-templates mode="main_m121" select="$main.Prefix_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m122" select="$main.Given_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m123" select="$main.Family_subset_s6_in_s6"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m121">
		<xsl:variable name="main.Prefix_subset_s6_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_415" select="$main.Prefix_subset_s6_in/self::node()"/>
			<xsl:value-of select="$textConten_415"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m122">
		<xsl:variable name="main.Given_subset_s6_in" select="."/>
		<given>
			<xsl:variable name="textConten_417" select="$main.Given_subset_s6_in/self::node()"/>
			<xsl:value-of select="$textConten_417"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m123">
		<xsl:variable name="main.Family_subset_s6_in" select="."/>
		<family>
			<xsl:variable name="textConten_419" select="$main.Family_subset_s6_in/self::node()"/>
			<xsl:value-of select="$textConten_419"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_57">
		<xsl:param name="main.InformationRecipientworkgroup_in"/>
		<representedOrganization>
			<xsl:variable name="v_420" select="'ORG'"/>
			<xsl:variable name="v_424" select="$main.InformationRecipientworkgroup_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s7_in_s7" select="$v_424/self::node()"/>
			<xsl:variable name="v_428" select="$main.InformationRecipientworkgroup_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s7_in_s7" select="$v_428/self::node()"/>
			<xsl:if test="string($v_420)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_420"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_421" select="'INSTANCE'"/>
			<xsl:if test="string($v_421)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_421"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_58"/>
			<xsl:apply-templates mode="main_m124" select="$main.OrgId_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m125" select="$main.OrgName_subset_s7_in_s7"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_58">
		<templateId>
			<xsl:variable name="v_422" select="'COCD_TP145204GB02#representedOrganization'"/>
			<xsl:if test="string($v_422)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_422"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_423" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_423)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_423"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m124">
		<xsl:variable name="main.OrgId_subset_s7_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_425" select="$main.OrgId_subset_s7_in/@nullFlavor"/>
			<xsl:variable name="root_426" select="$main.OrgId_subset_s7_in/@root"/>
			<xsl:variable name="extension_427" select="$main.OrgId_subset_s7_in/@extension"/>
			<xsl:if test="string($nullFlavor_425)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_425"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_426)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_426"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_427)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_427"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m125">
		<xsl:variable name="main.OrgName_subset_s7_in" select="."/>
		<name>
			<xsl:variable name="textConten_429" select="$main.OrgName_subset_s7_in/self::node()"/>
			<xsl:value-of select="$textConten_429"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:trackerPerson" mode="main_m126">
		<xsl:variable name="main.TrackerPerson_in" select="."/>
		<tracker_IntendedRecipient_Person>
			<xsl:variable name="v_431" select="'TRC'"/>
			<xsl:if test="string($v_431)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_431"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145202GB01.IntendedRecipient_Person_59">
				<xsl:with-param name="main.TrackerPerson_in" select="$main.TrackerPerson_in"/>
			</xsl:call-template>
		</tracker_IntendedRecipient_Person>
	</xsl:template>
	<xsl:template name="COCD_TP145202GB01.IntendedRecipient_Person_59">
		<xsl:param name="main.TrackerPerson_in"/>
		<COCD_TP145202GB01.IntendedRecipient_Person>
			<xsl:variable name="v_432" select="'ASSIGNED'"/>
			<xsl:variable name="v_435" select="$main.TrackerPerson_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s32_in_s32" select="$v_435/self::node()"/>
			<xsl:variable name="v_439" select="$main.TrackerPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s17_in_s17" select="$v_439/self::node()"/>
			<xsl:if test="string($v_432)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_432"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_60"/>
			<xsl:apply-templates mode="main_m127" select="$main.Id_subset_s32_in_s32"/>
			<xsl:apply-templates mode="main_m128" select="$main.Name_subset_s17_in_s17"/>
			<xsl:call-template name="representedOrganization_62">
				<xsl:with-param name="main.TrackerPerson_in" select="$main.TrackerPerson_in"/>
			</xsl:call-template>
		</COCD_TP145202GB01.IntendedRecipient_Person>
	</xsl:template>
	<xsl:template name="templateId_60">
		<templateId>
			<xsl:variable name="v_433" select="'COCD_TP145202GB01#IntendedRecipient'"/>
			<xsl:if test="string($v_433)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_433"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_434" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_434)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_434"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m127">
		<xsl:variable name="main.Id_subset_s32_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_436" select="$main.Id_subset_s32_in/@nullFlavor"/>
			<xsl:variable name="root_437" select="$main.Id_subset_s32_in/@root"/>
			<xsl:variable name="extension_438" select="$main.Id_subset_s32_in/@extension"/>
			<xsl:if test="string($nullFlavor_436)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_436"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_437)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_437"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_438)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_438"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m128">
		<xsl:variable name="main.Name_subset_s17_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_440" select="'PSN'"/>
			<xsl:variable name="v_444" select="$main.Name_subset_s17_in/self::node()"/>
			<xsl:variable name="v_445" select="$v_444/ancestor::oms:trackerPerson"/>
			<xsl:variable name="v_446" select="$v_445/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_446/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.TrackerPerson_in" select="$v_445/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:if test="string($v_440)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_440"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_441" select="'INSTANCE'"/>
			<xsl:if test="string($v_441)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_441"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_61"/>
			<xsl:apply-templates mode="main_m129" select="$main.TrackerPerson_in">
				<xsl:with-param name="main.Name_subset_s17_in" select="$main.Name_subset_s17_in"/>
			</xsl:apply-templates>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_61">
		<templateId>
			<xsl:variable name="v_442" select="'COCD_TP145202GB01#assignedPerson'"/>
			<xsl:if test="string($v_442)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_442"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_443" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_443)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_443"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:trackerPerson" mode="main_m129">
		<xsl:param name="main.Name_subset_s17_in"/>
		<xsl:variable name="main.TrackerPerson_in" select="."/>
		<name>
			<xsl:variable name="v_447" select="$main.Name_subset_s17_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s17_in_s17" select="$v_447/self::node()"/>
			<xsl:variable name="v_449" select="$main.Name_subset_s17_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s17_in_s17" select="$v_449/self::node()"/>
			<xsl:variable name="v_451" select="$main.Name_subset_s17_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s17_in_s17" select="$v_451/self::node()"/>
			<xsl:apply-templates mode="main_m130" select="$main.Prefix_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m131" select="$main.Given_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m132" select="$main.Family_subset_s17_in_s17"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m130">
		<xsl:variable name="main.Prefix_subset_s17_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_448" select="$main.Prefix_subset_s17_in/self::node()"/>
			<xsl:value-of select="$textConten_448"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m131">
		<xsl:variable name="main.Given_subset_s17_in" select="."/>
		<given>
			<xsl:variable name="textConten_450" select="$main.Given_subset_s17_in/self::node()"/>
			<xsl:value-of select="$textConten_450"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m132">
		<xsl:variable name="main.Family_subset_s17_in" select="."/>
		<family>
			<xsl:variable name="textConten_452" select="$main.Family_subset_s17_in/self::node()"/>
			<xsl:value-of select="$textConten_452"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_62">
		<xsl:param name="main.TrackerPerson_in"/>
		<representedOrganization>
			<xsl:variable name="v_453" select="'ORG'"/>
			<xsl:variable name="v_457" select="$main.TrackerPerson_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s19_in_s19" select="$v_457/self::node()"/>
			<xsl:variable name="v_461" select="$main.TrackerPerson_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s19_in_s19" select="$v_461/self::node()"/>
			<xsl:if test="string($v_453)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_453"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_454" select="'INSTANCE'"/>
			<xsl:if test="string($v_454)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_454"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_63"/>
			<xsl:apply-templates mode="main_m133" select="$main.OrgId_subset_s19_in_s19"/>
			<xsl:apply-templates mode="main_m134" select="$main.OrgName_subset_s19_in_s19"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_63">
		<templateId>
			<xsl:variable name="v_455" select="'COCD_TP145202GB01#representedOrganization'"/>
			<xsl:if test="string($v_455)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_455"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_456" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_456)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_456"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m133">
		<xsl:variable name="main.OrgId_subset_s19_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_458" select="$main.OrgId_subset_s19_in/@nullFlavor"/>
			<xsl:variable name="root_459" select="$main.OrgId_subset_s19_in/@root"/>
			<xsl:variable name="extension_460" select="$main.OrgId_subset_s19_in/@extension"/>
			<xsl:if test="string($nullFlavor_458)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_458"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_459)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_459"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_460)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_460"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m134">
		<xsl:variable name="main.OrgName_subset_s19_in" select="."/>
		<name>
			<xsl:variable name="textConten_462" select="$main.OrgName_subset_s19_in/self::node()"/>
			<xsl:value-of select="$textConten_462"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:trackerOrganization" mode="main_m135">
		<xsl:variable name="main.TrackerOrganization_in" select="."/>
		<tracker_IntendedRecipient_Org>
			<xsl:variable name="v_464" select="'TRC'"/>
			<xsl:if test="string($v_464)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_464"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145203GB02.IntendedRecipient_Org_64">
				<xsl:with-param name="main.TrackerOrganization_in" select="$main.TrackerOrganization_in"/>
			</xsl:call-template>
		</tracker_IntendedRecipient_Org>
	</xsl:template>
	<xsl:template name="COCD_TP145203GB02.IntendedRecipient_Org_64">
		<xsl:param name="main.TrackerOrganization_in"/>
		<COCD_TP145203GB02.IntendedRecipient_Org>
			<xsl:variable name="v_465" select="'ASSIGNED'"/>
			<xsl:if test="string($v_465)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_465"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_65"/>
			<xsl:call-template name="representedOrganization_66">
				<xsl:with-param name="main.TrackerOrganization_in" select="$main.TrackerOrganization_in"/>
			</xsl:call-template>
		</COCD_TP145203GB02.IntendedRecipient_Org>
	</xsl:template>
	<xsl:template name="templateId_65">
		<templateId>
			<xsl:variable name="v_466" select="'COCD_TP145203GB02#IntendedRecipient'"/>
			<xsl:if test="string($v_466)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_466"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_467" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_467)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_467"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="representedOrganization_66">
		<xsl:param name="main.TrackerOrganization_in"/>
		<representedOrganization>
			<xsl:variable name="v_468" select="'ORG'"/>
			<xsl:variable name="v_472" select="$main.TrackerOrganization_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s20_in_s20" select="$v_472/self::node()"/>
			<xsl:variable name="v_476" select="$main.TrackerOrganization_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s20_in_s20" select="$v_476/self::node()"/>
			<xsl:if test="string($v_468)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_468"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_469" select="'INSTANCE'"/>
			<xsl:if test="string($v_469)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_469"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_67"/>
			<xsl:apply-templates mode="main_m136" select="$main.OrgId_subset_s20_in_s20"/>
			<xsl:apply-templates mode="main_m137" select="$main.OrgName_subset_s20_in_s20"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_67">
		<templateId>
			<xsl:variable name="v_470" select="'COCD_TP145203GB02#representedOrganization'"/>
			<xsl:if test="string($v_470)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_470"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_471" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_471)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_471"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m136">
		<xsl:variable name="main.OrgId_subset_s20_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_473" select="$main.OrgId_subset_s20_in/@nullFlavor"/>
			<xsl:variable name="root_474" select="$main.OrgId_subset_s20_in/@root"/>
			<xsl:variable name="extension_475" select="$main.OrgId_subset_s20_in/@extension"/>
			<xsl:if test="string($nullFlavor_473)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_473"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_474)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_474"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_475)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_475"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m137">
		<xsl:variable name="main.OrgName_subset_s20_in" select="."/>
		<name>
			<xsl:variable name="textConten_477" select="$main.OrgName_subset_s20_in/self::node()"/>
			<xsl:value-of select="$textConten_477"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:trackerWorkgroup" mode="main_m138">
		<xsl:variable name="main.TrackerWorkgroup_in" select="."/>
		<tracker_IntendedRecipient_WorkGp>
			<xsl:variable name="v_479" select="'TRC'"/>
			<xsl:if test="string($v_479)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_479"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145204GB02.IntendedRecipient_WorkGp_68">
				<xsl:with-param name="main.TrackerWorkgroup_in" select="$main.TrackerWorkgroup_in"/>
			</xsl:call-template>
		</tracker_IntendedRecipient_WorkGp>
	</xsl:template>
	<xsl:template name="COCD_TP145204GB02.IntendedRecipient_WorkGp_68">
		<xsl:param name="main.TrackerWorkgroup_in"/>
		<COCD_TP145204GB02.IntendedRecipient_WorkGp>
			<xsl:variable name="v_480" select="'ASSIGNED'"/>
			<xsl:variable name="v_483" select="$main.TrackerWorkgroup_in/oms:recipientRoleCode"/>
			<xsl:variable name="main.RecipientRoleCode_subset_s0_in_s0" select="$v_483/self::node()"/>
			<xsl:variable name="v_487" select="$main.TrackerWorkgroup_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s33_in_s33" select="$v_487/self::node()"/>
			<xsl:variable name="v_491" select="$main.TrackerWorkgroup_in/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s5_in_s5" select="$v_491/self::node()"/>
			<xsl:if test="string($v_480)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_480"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_69"/>
			<xsl:apply-templates mode="main_m139" select="$main.RecipientRoleCode_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m140" select="$main.Id_subset_s33_in_s33"/>
			<xsl:apply-templates mode="main_m141" select="$main.AssignedPerson_subset_s5_in_s5"/>
			<xsl:call-template name="representedOrganization_71">
				<xsl:with-param name="main.TrackerWorkgroup_in" select="$main.TrackerWorkgroup_in"/>
			</xsl:call-template>
		</COCD_TP145204GB02.IntendedRecipient_WorkGp>
	</xsl:template>
	<xsl:template name="templateId_69">
		<templateId>
			<xsl:variable name="v_481" select="'COCD_TP145204GB02#RecipientWorkgroup'"/>
			<xsl:if test="string($v_481)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_481"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_482" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_482)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_482"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:recipientRoleCode" mode="main_m139">
		<xsl:variable name="main.RecipientRoleCode_subset_s0_in" select="."/>
		<npfitlc:recipientRoleCode>
			<xsl:variable name="code_484" select="$main.RecipientRoleCode_subset_s0_in/@code"/>
			<xsl:variable name="codeSystem_485" select="$main.RecipientRoleCode_subset_s0_in/@codeSystem"/>
			<xsl:variable name="displayNam_486" select="$main.RecipientRoleCode_subset_s0_in/@displayName"/>
			<xsl:if test="string($code_484)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_484"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_485)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_485"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_486)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_486"/>
				</xsl:attribute>
			</xsl:if>
		</npfitlc:recipientRoleCode>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m140">
		<xsl:variable name="main.Id_subset_s33_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_488" select="$main.Id_subset_s33_in/@nullFlavor"/>
			<xsl:variable name="root_489" select="$main.Id_subset_s33_in/@root"/>
			<xsl:variable name="extension_490" select="$main.Id_subset_s33_in/@extension"/>
			<xsl:if test="string($nullFlavor_488)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_488"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_489)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_489"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_490)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_490"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m141">
		<xsl:variable name="main.AssignedPerson_subset_s5_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_492" select="'PSN'"/>
			<xsl:variable name="v_496" select="$main.AssignedPerson_subset_s5_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s18_in_s18" select="$v_496/self::node()"/>
			<xsl:if test="string($v_492)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_492"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_493" select="'INSTANCE'"/>
			<xsl:if test="string($v_493)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_493"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_70"/>
			<xsl:apply-templates mode="main_m142" select="$main.Name_subset_s18_in_s18"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_70">
		<templateId>
			<xsl:variable name="v_494" select="'COCD_TP145204GB02#assignedPerson'"/>
			<xsl:if test="string($v_494)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_494"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_495" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_495)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_495"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m142">
		<xsl:variable name="main.Name_subset_s18_in" select="."/>
		<name>
			<xsl:variable name="v_497" select="$main.Name_subset_s18_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s18_in_s18" select="$v_497/self::node()"/>
			<xsl:variable name="v_499" select="$main.Name_subset_s18_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s18_in_s18" select="$v_499/self::node()"/>
			<xsl:variable name="v_501" select="$main.Name_subset_s18_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s18_in_s18" select="$v_501/self::node()"/>
			<xsl:apply-templates mode="main_m143" select="$main.Prefix_subset_s18_in_s18"/>
			<xsl:apply-templates mode="main_m144" select="$main.Given_subset_s18_in_s18"/>
			<xsl:apply-templates mode="main_m145" select="$main.Family_subset_s18_in_s18"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m143">
		<xsl:variable name="main.Prefix_subset_s18_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_498" select="$main.Prefix_subset_s18_in/self::node()"/>
			<xsl:value-of select="$textConten_498"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m144">
		<xsl:variable name="main.Given_subset_s18_in" select="."/>
		<given>
			<xsl:variable name="textConten_500" select="$main.Given_subset_s18_in/self::node()"/>
			<xsl:value-of select="$textConten_500"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m145">
		<xsl:variable name="main.Family_subset_s18_in" select="."/>
		<family>
			<xsl:variable name="textConten_502" select="$main.Family_subset_s18_in/self::node()"/>
			<xsl:value-of select="$textConten_502"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_71">
		<xsl:param name="main.TrackerWorkgroup_in"/>
		<representedOrganization>
			<xsl:variable name="v_503" select="'ORG'"/>
			<xsl:variable name="v_507" select="$main.TrackerWorkgroup_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s21_in_s21" select="$v_507/self::node()"/>
			<xsl:variable name="v_511" select="$main.TrackerWorkgroup_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s21_in_s21" select="$v_511/self::node()"/>
			<xsl:if test="string($v_503)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_503"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_504" select="'INSTANCE'"/>
			<xsl:if test="string($v_504)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_504"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_72"/>
			<xsl:apply-templates mode="main_m146" select="$main.OrgId_subset_s21_in_s21"/>
			<xsl:apply-templates mode="main_m147" select="$main.OrgName_subset_s21_in_s21"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_72">
		<templateId>
			<xsl:variable name="v_505" select="'COCD_TP145204GB02#representedOrganization'"/>
			<xsl:if test="string($v_505)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_505"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_506" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_506)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_506"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m146">
		<xsl:variable name="main.OrgId_subset_s21_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_508" select="$main.OrgId_subset_s21_in/@nullFlavor"/>
			<xsl:variable name="root_509" select="$main.OrgId_subset_s21_in/@root"/>
			<xsl:variable name="extension_510" select="$main.OrgId_subset_s21_in/@extension"/>
			<xsl:if test="string($nullFlavor_508)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_508"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_509)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_509"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_510)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_510"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m147">
		<xsl:variable name="main.OrgName_subset_s21_in" select="."/>
		<name>
			<xsl:variable name="textConten_512" select="$main.OrgName_subset_s21_in/self::node()"/>
			<xsl:value-of select="$textConten_512"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:authenticator" mode="main_m148">
		<xsl:variable name="main.Authenticator_in" select="."/>
		<authenticator_AssignedEntity>
			<xsl:variable name="v_514" select="'AUTHEN'"/>
			<xsl:variable name="v_515" select="$main.Authenticator_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s3_in_s3" select="$v_515/self::node()"/>
			<xsl:variable name="v_517" select="$main.Authenticator_in/oms:signatureCode"/>
			<xsl:variable name="main.SignatureCode_in" select="$v_517/self::node()"/>
			<xsl:variable name="v_520" select="$main.Authenticator_in/oms:authenName"/>
			<xsl:variable name="main.AuthenName_in" select="$v_520/self::node()"/>
			<xsl:if test="string($v_514)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_514"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m149" select="$main.Time_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m150" select="$main.SignatureCode_in"/>
			<xsl:apply-templates mode="main_m151" select="$main.AuthenName_in">
				<xsl:with-param name="main.Authenticator_in" select="$main.Authenticator_in"/>
			</xsl:apply-templates>
		</authenticator_AssignedEntity>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m149">
		<xsl:variable name="main.Time_subset_s3_in" select="."/>
		<time>
			<xsl:variable name="value_516" select="$main.Time_subset_s3_in/@value"/>
			<xsl:if test="string($value_516)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_516"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:signatureCode" mode="main_m150">
		<xsl:variable name="main.SignatureCode_in" select="."/>
		<signatureCode>
			<xsl:variable name="nullFlavor_518" select="$main.SignatureCode_in/@nullFlavor"/>
			<xsl:variable name="code_519" select="$main.SignatureCode_in/@code"/>
			<xsl:if test="string($nullFlavor_518)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_518"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($code_519)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_519"/>
				</xsl:attribute>
			</xsl:if>
		</signatureCode>
	</xsl:template>
	<xsl:template match="oms:authenName" mode="main_m151">
		<xsl:param name="main.Authenticator_in"/>
		<xsl:variable name="main.AuthenName_in" select="."/>
		<COCD_TP145205GB01.AssignedEntity>
			<xsl:variable name="v_521" select="'ASSIGNED'"/>
			<xsl:variable name="v_524" select="$main.Authenticator_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s10_in_s10" select="$v_524/self::node()"/>
			<xsl:variable name="v_528" select="$main.AuthenName_in/self::node()"/>
			<xsl:variable name="v_529" select="$v_528/ancestor::oms:authenticator"/>
			<xsl:variable name="v_530" select="$v_529/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_530/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.Authenticator_in" select="$v_529/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="v_542" select="$main.Authenticator_in/oms:representedOrganization"/>
			<xsl:variable name="main.RepresentedOrganization_subset_s0_in_s0" select="$v_542/self::node()"/>
			<xsl:if test="string($v_521)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_521"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_73"/>
			<xsl:apply-templates mode="main_m152" select="$main.Id_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m153" select="$main.Authenticator_in"/>
			<xsl:apply-templates mode="main_m158" select="$main.RepresentedOrganization_subset_s0_in_s0"/>
		</COCD_TP145205GB01.AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_73">
		<templateId>
			<xsl:variable name="v_522" select="'COCD_TP145205GB01#AssignedEntity'"/>
			<xsl:if test="string($v_522)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_522"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_523" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_523)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_523"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m152">
		<xsl:variable name="main.Id_subset_s10_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_525" select="$main.Id_subset_s10_in/@nullFlavor"/>
			<xsl:variable name="root_526" select="$main.Id_subset_s10_in/@root"/>
			<xsl:variable name="extension_527" select="$main.Id_subset_s10_in/@extension"/>
			<xsl:if test="string($nullFlavor_525)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_525"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_526)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_526"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_527)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_527"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:authenticator" mode="main_m153">
		<xsl:variable name="main.Authenticator_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_531" select="'PSN'"/>
			<xsl:variable name="v_535" select="$main.Authenticator_in/oms:authenName"/>
			<xsl:variable name="main.AuthenName_in" select="$v_535/self::node()"/>
			<xsl:if test="string($v_531)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_531"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_532" select="'INSTANCE'"/>
			<xsl:if test="string($v_532)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_532"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_74"/>
			<xsl:apply-templates mode="main_m154" select="$main.AuthenName_in"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_74">
		<templateId>
			<xsl:variable name="v_533" select="'COCD_TP145205GB01#assignedPerson'"/>
			<xsl:if test="string($v_533)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_533"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_534" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_534)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_534"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:authenName" mode="main_m154">
		<xsl:variable name="main.AuthenName_in" select="."/>
		<name>
			<xsl:variable name="v_536" select="$main.AuthenName_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s7_in_s7" select="$v_536/self::node()"/>
			<xsl:variable name="v_538" select="$main.AuthenName_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s7_in_s7" select="$v_538/self::node()"/>
			<xsl:variable name="v_540" select="$main.AuthenName_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s7_in_s7" select="$v_540/self::node()"/>
			<xsl:apply-templates mode="main_m155" select="$main.Prefix_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m156" select="$main.Given_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m157" select="$main.Family_subset_s7_in_s7"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m155">
		<xsl:variable name="main.Prefix_subset_s7_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_537" select="$main.Prefix_subset_s7_in/self::node()"/>
			<xsl:value-of select="$textConten_537"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m156">
		<xsl:variable name="main.Given_subset_s7_in" select="."/>
		<given>
			<xsl:variable name="textConten_539" select="$main.Given_subset_s7_in/self::node()"/>
			<xsl:value-of select="$textConten_539"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m157">
		<xsl:variable name="main.Family_subset_s7_in" select="."/>
		<family>
			<xsl:variable name="textConten_541" select="$main.Family_subset_s7_in/self::node()"/>
			<xsl:value-of select="$textConten_541"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:representedOrganization" mode="main_m158">
		<xsl:variable name="main.RepresentedOrganization_subset_s0_in" select="."/>
		<representedOrganization>
			<xsl:variable name="v_543" select="'ORG'"/>
			<xsl:variable name="v_547" select="$main.RepresentedOrganization_subset_s0_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s8_in_s8" select="$v_547/self::node()"/>
			<xsl:variable name="v_551" select="$main.RepresentedOrganization_subset_s0_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s8_in_s8" select="$v_551/self::node()"/>
			<xsl:if test="string($v_543)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_543"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_544" select="'INSTANCE'"/>
			<xsl:if test="string($v_544)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_544"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_75"/>
			<xsl:apply-templates mode="main_m159" select="$main.OrgId_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m160" select="$main.OrgName_subset_s8_in_s8"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_75">
		<templateId>
			<xsl:variable name="v_545" select="'COCD_TP145205GB01#representedOrganization'"/>
			<xsl:if test="string($v_545)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_545"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_546" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_546)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_546"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m159">
		<xsl:variable name="main.OrgId_subset_s8_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_548" select="$main.OrgId_subset_s8_in/@nullFlavor"/>
			<xsl:variable name="root_549" select="$main.OrgId_subset_s8_in/@root"/>
			<xsl:variable name="extension_550" select="$main.OrgId_subset_s8_in/@extension"/>
			<xsl:if test="string($nullFlavor_548)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_548"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_549)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_549"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_550)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_550"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m160">
		<xsl:variable name="main.OrgName_subset_s8_in" select="."/>
		<name>
			<xsl:variable name="textConten_552" select="$main.OrgName_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_552"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:participant" mode="main_m161">
		<xsl:variable name="main.Participant_in" select="."/>
		<participant_AssociatedEntity>
			<xsl:variable name="typeCode_554" select="$main.Participant_in/@typeCode"/>
			<xsl:if test="string($typeCode_554)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_554"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_555" select="'OP'"/>
			<xsl:if test="string($v_555)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_555"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP145214GB01.AssociatedEntity_76">
				<xsl:with-param name="main.Participant_in" select="$main.Participant_in"/>
			</xsl:call-template>
		</participant_AssociatedEntity>
	</xsl:template>
	<xsl:template name="COCD_TP145214GB01.AssociatedEntity_76">
		<xsl:param name="main.Participant_in"/>
		<COCD_TP145214GB01.AssociatedEntity>
			<xsl:variable name="classCode_556" select="$main.Participant_in/@classCode"/>
			<xsl:variable name="v_559" select="$main.Participant_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s11_in_s11" select="$v_559/self::node()"/>
			<xsl:variable name="v_563" select="$main.Participant_in/oms:associatedPerson"/>
			<xsl:variable name="main.AssociatedPerson_in" select="$v_563/self::node()"/>
			<xsl:variable name="v_575" select="$main.Participant_in/oms:scopingOrganization"/>
			<xsl:variable name="main.ScopingOrganization_in" select="$v_575/self::node()"/>
			<xsl:if test="string($classCode_556)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$classCode_556"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_77"/>
			<xsl:apply-templates mode="main_m162" select="$main.Id_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m163" select="$main.AssociatedPerson_in"/>
			<xsl:apply-templates mode="main_m168" select="$main.ScopingOrganization_in"/>
		</COCD_TP145214GB01.AssociatedEntity>
	</xsl:template>
	<xsl:template name="templateId_77">
		<templateId>
			<xsl:variable name="v_557" select="'COCD_TP145214GB01#AssociatedEntity'"/>
			<xsl:if test="string($v_557)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_557"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_558" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_558)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_558"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m162">
		<xsl:variable name="main.Id_subset_s11_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_560" select="$main.Id_subset_s11_in/@nullFlavor"/>
			<xsl:variable name="root_561" select="$main.Id_subset_s11_in/@root"/>
			<xsl:variable name="extension_562" select="$main.Id_subset_s11_in/@extension"/>
			<xsl:if test="string($nullFlavor_560)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_560"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_561)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_561"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_562)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_562"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:associatedPerson" mode="main_m163">
		<xsl:variable name="main.AssociatedPerson_in" select="."/>
		<associatedPerson>
			<xsl:variable name="v_564" select="'PSN'"/>
			<xsl:variable name="v_568" select="$main.AssociatedPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s7_in_s7" select="$v_568/self::node()"/>
			<xsl:if test="string($v_564)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_564"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_565" select="'INSTANCE'"/>
			<xsl:if test="string($v_565)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_565"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_78"/>
			<xsl:apply-templates mode="main_m164" select="$main.Name_subset_s7_in_s7"/>
		</associatedPerson>
	</xsl:template>
	<xsl:template name="templateId_78">
		<templateId>
			<xsl:variable name="v_566" select="'COCD_TP145214GB01#associatedPerson'"/>
			<xsl:if test="string($v_566)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_566"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_567" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_567)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_567"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m164">
		<xsl:variable name="main.Name_subset_s7_in" select="."/>
		<name>
			<xsl:variable name="v_569" select="$main.Name_subset_s7_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s8_in_s8" select="$v_569/self::node()"/>
			<xsl:variable name="v_571" select="$main.Name_subset_s7_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s8_in_s8" select="$v_571/self::node()"/>
			<xsl:variable name="v_573" select="$main.Name_subset_s7_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s8_in_s8" select="$v_573/self::node()"/>
			<xsl:apply-templates mode="main_m165" select="$main.Prefix_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m166" select="$main.Given_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m167" select="$main.Family_subset_s8_in_s8"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m165">
		<xsl:variable name="main.Prefix_subset_s8_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_570" select="$main.Prefix_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_570"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m166">
		<xsl:variable name="main.Given_subset_s8_in" select="."/>
		<given>
			<xsl:variable name="textConten_572" select="$main.Given_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_572"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m167">
		<xsl:variable name="main.Family_subset_s8_in" select="."/>
		<family>
			<xsl:variable name="textConten_574" select="$main.Family_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_574"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:scopingOrganization" mode="main_m168">
		<xsl:variable name="main.ScopingOrganization_in" select="."/>
		<scopingOrganization>
			<xsl:variable name="v_576" select="'ORG'"/>
			<xsl:variable name="v_580" select="$main.ScopingOrganization_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s12_in_s12" select="$v_580/self::node()"/>
			<xsl:variable name="v_583" select="$main.ScopingOrganization_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s8_in_s8" select="$v_583/self::node()"/>
			<xsl:if test="string($v_576)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_576"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_577" select="'INSTANCE'"/>
			<xsl:if test="string($v_577)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_577"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_79"/>
			<xsl:apply-templates mode="main_m169" select="$main.Id_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m170" select="$main.Name_subset_s8_in_s8"/>
		</scopingOrganization>
	</xsl:template>
	<xsl:template name="templateId_79">
		<templateId>
			<xsl:variable name="v_578" select="'COCD_TP145214GB01#scopingOrganization'"/>
			<xsl:if test="string($v_578)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_578"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_579" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_579)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_579"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m169">
		<xsl:variable name="main.Id_subset_s12_in" select="."/>
		<id>
			<xsl:variable name="root_581" select="$main.Id_subset_s12_in/@root"/>
			<xsl:variable name="extension_582" select="$main.Id_subset_s12_in/@extension"/>
			<xsl:if test="string($root_581)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_581"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_582)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_582"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m170">
		<xsl:variable name="main.Name_subset_s8_in" select="."/>
		<name>
			<xsl:variable name="textConten_584" select="$main.Name_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_584"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:documentOf" mode="main_m171">
		<xsl:variable name="main.DocumentOf_in" select="."/>
		<documentationOf_ServiceEvent>
			<xsl:variable name="v_586" select="'DOC'"/>
			<xsl:if test="string($v_586)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_586"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP146227GB01.ServiceEvent_80">
				<xsl:with-param name="main.DocumentOf_in" select="$main.DocumentOf_in"/>
			</xsl:call-template>
		</documentationOf_ServiceEvent>
	</xsl:template>
	<xsl:template name="COCD_TP146227GB01.ServiceEvent_80">
		<xsl:param name="main.DocumentOf_in"/>
		<COCD_TP146227GB01.ServiceEvent>
			<xsl:variable name="classCode_587" select="$main.DocumentOf_in/@classCode"/>
			<xsl:variable name="moodCode_588" select="$main.DocumentOf_in/@moodCode"/>
			<xsl:variable name="v_591" select="$main.DocumentOf_in/oms:performer_AssignedEntity"/>
			<xsl:variable name="main.Performer_AssignedEntity_in" select="$v_591/self::node()"/>
			<xsl:variable name="v_632" select="$main.DocumentOf_in/oms:performer_Workgroup"/>
			<xsl:variable name="main.Performer_Workgroup_in" select="$v_632/self::node()"/>
			<xsl:if test="string($classCode_587)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$classCode_587"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($moodCode_588)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$moodCode_588"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_81"/>
			<xsl:apply-templates mode="main_m172" select="$main.Performer_AssignedEntity_in"/>
			<xsl:apply-templates mode="main_m183" select="$main.Performer_Workgroup_in"/>
		</COCD_TP146227GB01.ServiceEvent>
	</xsl:template>
	<xsl:template name="templateId_81">
		<templateId>
			<xsl:variable name="v_589" select="'COCD_TP146227GB01#ServiceEvent'"/>
			<xsl:if test="string($v_589)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_589"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_590" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_590)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_590"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:performer_AssignedEntity" mode="main_m172">
		<xsl:variable name="main.Performer_AssignedEntity_in" select="."/>
		<performer_AssignedEntity>
			<xsl:variable name="typeCode_592" select="$main.Performer_AssignedEntity_in/@typeCode"/>
			<xsl:variable name="v_595" select="$main.Performer_AssignedEntity_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s4_in_s4" select="$v_595/self::node()"/>
			<xsl:if test="string($typeCode_592)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_592"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_82"/>
			<xsl:apply-templates mode="main_m173" select="$main.Time_subset_s4_in_s4"/>
			<xsl:call-template name="COCD_TP145210GB01.AssignedEntity_83">
				<xsl:with-param name="main.Performer_AssignedEntity_in" select="$main.Performer_AssignedEntity_in"/>
			</xsl:call-template>
		</performer_AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_82">
		<templateId>
			<xsl:variable name="v_593" select="'COCD_TP146227GB01#performer'"/>
			<xsl:if test="string($v_593)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_593"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_594" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_594)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_594"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m173">
		<xsl:variable name="main.Time_subset_s4_in" select="."/>
		<time>
			<xsl:variable name="value_1_596" select="$main.Time_subset_s4_in/@value_1"/>
			<xsl:if test="string($value_1_596)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_1_596"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145210GB01.AssignedEntity_83">
		<xsl:param name="main.Performer_AssignedEntity_in"/>
		<COCD_TP145210GB01.AssignedEntity>
			<xsl:variable name="v_597" select="'ASSIGNED'"/>
			<xsl:variable name="v_600" select="$main.Performer_AssignedEntity_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s13_in_s13" select="$v_600/self::node()"/>
			<xsl:variable name="v_604" select="$main.Performer_AssignedEntity_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s6_in_s6" select="$v_604/self::node()"/>
			<xsl:variable name="v_606" select="$main.Performer_AssignedEntity_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s9_in_s9" select="$v_606/self::node()"/>
			<xsl:if test="string($v_597)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_597"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_84"/>
			<xsl:apply-templates mode="main_m174" select="$main.Id_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m175" select="$main.Code_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m176" select="$main.Name_subset_s9_in_s9"/>
			<xsl:call-template name="representedOrganization_86">
				<xsl:with-param name="main.Performer_AssignedEntity_in" select="$main.Performer_AssignedEntity_in"/>
			</xsl:call-template>
		</COCD_TP145210GB01.AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_84">
		<templateId>
			<xsl:variable name="v_598" select="'COCD_TP145210GB01#AssignedEntity'"/>
			<xsl:if test="string($v_598)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_598"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_599" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_599)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_599"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m174">
		<xsl:variable name="main.Id_subset_s13_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_601" select="$main.Id_subset_s13_in/@nullFlavor"/>
			<xsl:variable name="root_602" select="$main.Id_subset_s13_in/@root"/>
			<xsl:variable name="extension_603" select="$main.Id_subset_s13_in/@extension"/>
			<xsl:if test="string($nullFlavor_601)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_601"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_602)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_602"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_603)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_603"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m175">
		<xsl:variable name="main.Code_subset_s6_in" select="."/>
		<code>
			<xsl:variable name="code_605" select="$main.Code_subset_s6_in/@code"/>
			<xsl:if test="string($code_605)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_605"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m176">
		<xsl:variable name="main.Name_subset_s9_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_607" select="'PSN'"/>
			<xsl:variable name="v_611" select="$main.Name_subset_s9_in/self::node()"/>
			<xsl:variable name="v_612" select="$v_611/ancestor::oms:performer_AssignedEntity"/>
			<xsl:variable name="v_613" select="$v_612/self::node()"/>
			<xsl:variable name="v_614" select="($v_613/ancestor::oms:documentOf)[1]"/>
			<xsl:variable name="v_615" select="$v_614/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_615/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.DocumentOf_in" select="$v_614/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="main.Performer_AssignedEntity_in" select="$v_612/self::node()[($main.DocumentOf_in)]"/>
			<xsl:if test="string($v_607)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_607"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_608" select="'INSTANCE'"/>
			<xsl:if test="string($v_608)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_608"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_85"/>
			<xsl:apply-templates mode="main_m177" select="$main.Performer_AssignedEntity_in">
				<xsl:with-param name="main.Name_subset_s9_in" select="$main.Name_subset_s9_in"/>
			</xsl:apply-templates>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_85">
		<templateId>
			<xsl:variable name="v_609" select="'COCD_TP145210GB01#assignedPerson'"/>
			<xsl:if test="string($v_609)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_609"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_610" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_610)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_610"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:performer_AssignedEntity" mode="main_m177">
		<xsl:param name="main.Name_subset_s9_in"/>
		<xsl:variable name="main.Performer_AssignedEntity_in" select="."/>
		<name>
			<xsl:variable name="v_616" select="$main.Name_subset_s9_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s9_in_s9" select="$v_616/self::node()"/>
			<xsl:variable name="v_618" select="$main.Name_subset_s9_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s9_in_s9" select="$v_618/self::node()"/>
			<xsl:variable name="v_620" select="$main.Name_subset_s9_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s9_in_s9" select="$v_620/self::node()"/>
			<xsl:apply-templates mode="main_m178" select="$main.Prefix_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m179" select="$main.Given_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m180" select="$main.Family_subset_s9_in_s9"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m178">
		<xsl:variable name="main.Prefix_subset_s9_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_617" select="$main.Prefix_subset_s9_in/self::node()"/>
			<xsl:value-of select="$textConten_617"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m179">
		<xsl:variable name="main.Given_subset_s9_in" select="."/>
		<given>
			<xsl:variable name="textConten_619" select="$main.Given_subset_s9_in/self::node()"/>
			<xsl:value-of select="$textConten_619"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m180">
		<xsl:variable name="main.Family_subset_s9_in" select="."/>
		<family>
			<xsl:variable name="textConten_621" select="$main.Family_subset_s9_in/self::node()"/>
			<xsl:value-of select="$textConten_621"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_86">
		<xsl:param name="main.Performer_AssignedEntity_in"/>
		<representedOrganization>
			<xsl:variable name="v_622" select="'ORG'"/>
			<xsl:variable name="v_626" select="$main.Performer_AssignedEntity_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s9_in_s9" select="$v_626/self::node()"/>
			<xsl:variable name="v_630" select="$main.Performer_AssignedEntity_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s9_in_s9" select="$v_630/self::node()"/>
			<xsl:if test="string($v_622)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_622"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_623" select="'INSTANCE'"/>
			<xsl:if test="string($v_623)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_623"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_87"/>
			<xsl:apply-templates mode="main_m181" select="$main.OrgId_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m182" select="$main.OrgName_subset_s9_in_s9"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_87">
		<templateId>
			<xsl:variable name="v_624" select="'COCD_TP145210GB01#representedOrganization'"/>
			<xsl:if test="string($v_624)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_624"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_625" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_625)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_625"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m181">
		<xsl:variable name="main.OrgId_subset_s9_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_627" select="$main.OrgId_subset_s9_in/@nullFlavor"/>
			<xsl:variable name="root_628" select="$main.OrgId_subset_s9_in/@root"/>
			<xsl:variable name="extension_629" select="$main.OrgId_subset_s9_in/@extension"/>
			<xsl:if test="string($nullFlavor_627)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_627"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_628)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_628"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_629)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_629"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m182">
		<xsl:variable name="main.OrgName_subset_s9_in" select="."/>
		<name>
			<xsl:variable name="textConten_631" select="$main.OrgName_subset_s9_in/self::node()"/>
			<xsl:value-of select="$textConten_631"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:performer_Workgroup" mode="main_m183">
		<xsl:variable name="main.Performer_Workgroup_in" select="."/>
		<performer_Workgroup>
			<xsl:variable name="typeCode_633" select="$main.Performer_Workgroup_in/@typeCode"/>
			<xsl:variable name="v_636" select="$main.Performer_Workgroup_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s5_in_s5" select="$v_636/self::node()"/>
			<xsl:if test="string($typeCode_633)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_633"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_88"/>
			<xsl:apply-templates mode="main_m184" select="$main.Time_subset_s5_in_s5"/>
			<xsl:call-template name="COCD_TP145212GB02.Workgroup_89">
				<xsl:with-param name="main.Performer_Workgroup_in" select="$main.Performer_Workgroup_in"/>
			</xsl:call-template>
		</performer_Workgroup>
	</xsl:template>
	<xsl:template name="templateId_88">
		<templateId>
			<xsl:variable name="v_634" select="'COCD_TP146227GB01#performer'"/>
			<xsl:if test="string($v_634)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_634"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_635" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_635)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_635"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m184">
		<xsl:variable name="main.Time_subset_s5_in" select="."/>
		<time>
			<xsl:variable name="value_2_637" select="$main.Time_subset_s5_in/@value_2"/>
			<xsl:if test="string($value_2_637)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_2_637"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145212GB02.Workgroup_89">
		<xsl:param name="main.Performer_Workgroup_in"/>
		<COCD_TP145212GB02.Workgroup>
			<xsl:variable name="v_638" select="'ASSIGNED'"/>
			<xsl:variable name="v_641" select="$main.Performer_Workgroup_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s14_in_s14" select="$v_641/self::node()"/>
			<xsl:variable name="v_645" select="$main.Performer_Workgroup_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s7_in_s7" select="$v_645/self::node()"/>
			<xsl:variable name="v_647" select="$main.Performer_Workgroup_in/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s1_in_s1" select="$v_647/self::node()"/>
			<xsl:if test="string($v_638)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_638"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_90"/>
			<xsl:apply-templates mode="main_m185" select="$main.Id_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m186" select="$main.Code_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m187" select="$main.AssignedPerson_subset_s1_in_s1"/>
			<xsl:call-template name="representedOrganization_92">
				<xsl:with-param name="main.Performer_Workgroup_in" select="$main.Performer_Workgroup_in"/>
			</xsl:call-template>
		</COCD_TP145212GB02.Workgroup>
	</xsl:template>
	<xsl:template name="templateId_90">
		<templateId>
			<xsl:variable name="v_639" select="'COCD_TP145212GB02#Workgroup'"/>
			<xsl:if test="string($v_639)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_639"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_640" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_640)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_640"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m185">
		<xsl:variable name="main.Id_subset_s14_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_642" select="$main.Id_subset_s14_in/@nullFlavor"/>
			<xsl:variable name="root_643" select="$main.Id_subset_s14_in/@root"/>
			<xsl:variable name="extension_644" select="$main.Id_subset_s14_in/@extension"/>
			<xsl:if test="string($nullFlavor_642)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_642"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_643)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_643"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_644)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_644"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m186">
		<xsl:variable name="main.Code_subset_s7_in" select="."/>
		<code>
			<xsl:variable name="code_646" select="$main.Code_subset_s7_in/@code"/>
			<xsl:if test="string($code_646)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_646"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m187">
		<xsl:variable name="main.AssignedPerson_subset_s1_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_648" select="'PSN'"/>
			<xsl:variable name="v_652" select="$main.AssignedPerson_subset_s1_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s10_in_s10" select="$v_652/self::node()"/>
			<xsl:if test="string($v_648)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_648"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_649" select="'INSTANCE'"/>
			<xsl:if test="string($v_649)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_649"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_91"/>
			<xsl:apply-templates mode="main_m188" select="$main.Name_subset_s10_in_s10"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_91">
		<templateId>
			<xsl:variable name="v_650" select="'COCD_TP145212GB02#assignedPerson'"/>
			<xsl:if test="string($v_650)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_650"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_651" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_651)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_651"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m188">
		<xsl:variable name="main.Name_subset_s10_in" select="."/>
		<name>
			<xsl:variable name="v_653" select="$main.Name_subset_s10_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s10_in_s10" select="$v_653/self::node()"/>
			<xsl:variable name="v_655" select="$main.Name_subset_s10_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s10_in_s10" select="$v_655/self::node()"/>
			<xsl:variable name="v_657" select="$main.Name_subset_s10_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s10_in_s10" select="$v_657/self::node()"/>
			<xsl:apply-templates mode="main_m189" select="$main.Prefix_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m190" select="$main.Given_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m191" select="$main.Family_subset_s10_in_s10"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m189">
		<xsl:variable name="main.Prefix_subset_s10_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_654" select="$main.Prefix_subset_s10_in/self::node()"/>
			<xsl:value-of select="$textConten_654"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m190">
		<xsl:variable name="main.Given_subset_s10_in" select="."/>
		<given>
			<xsl:variable name="textConten_656" select="$main.Given_subset_s10_in/self::node()"/>
			<xsl:value-of select="$textConten_656"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m191">
		<xsl:variable name="main.Family_subset_s10_in" select="."/>
		<family>
			<xsl:variable name="textConten_658" select="$main.Family_subset_s10_in/self::node()"/>
			<xsl:value-of select="$textConten_658"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_92">
		<xsl:param name="main.Performer_Workgroup_in"/>
		<representedOrganization>
			<xsl:variable name="v_659" select="'ORG'"/>
			<xsl:variable name="v_663" select="$main.Performer_Workgroup_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s10_in_s10" select="$v_663/self::node()"/>
			<xsl:variable name="v_667" select="$main.Performer_Workgroup_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s10_in_s10" select="$v_667/self::node()"/>
			<xsl:if test="string($v_659)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_659"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_660" select="'INSTANCE'"/>
			<xsl:if test="string($v_660)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_660"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_93"/>
			<xsl:apply-templates mode="main_m192" select="$main.OrgId_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m193" select="$main.OrgName_subset_s10_in_s10"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_93">
		<templateId>
			<xsl:variable name="v_661" select="'COCD_TP145212GB02#representedOrganization'"/>
			<xsl:if test="string($v_661)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_661"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_662" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_662)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_662"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m192">
		<xsl:variable name="main.OrgId_subset_s10_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_664" select="$main.OrgId_subset_s10_in/@nullFlavor"/>
			<xsl:variable name="root_665" select="$main.OrgId_subset_s10_in/@root"/>
			<xsl:variable name="extension_666" select="$main.OrgId_subset_s10_in/@extension"/>
			<xsl:if test="string($nullFlavor_664)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_664"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_665)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_665"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_666)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_666"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m193">
		<xsl:variable name="main.OrgName_subset_s10_in" select="."/>
		<name>
			<xsl:variable name="textConten_668" select="$main.OrgName_subset_s10_in/self::node()"/>
			<xsl:value-of select="$textConten_668"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:relatedDocument" mode="main_m194">
		<xsl:variable name="main.RelatedDocument_in" select="."/>
		<relatedDocument>
			<xsl:variable name="typeCode_670" select="$main.RelatedDocument_in/@typeCode"/>
			<xsl:if test="string($typeCode_670)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_670"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="parentDocument_94">
				<xsl:with-param name="main.RelatedDocument_in" select="$main.RelatedDocument_in"/>
			</xsl:call-template>
		</relatedDocument>
	</xsl:template>
	<xsl:template name="parentDocument_94">
		<xsl:param name="main.RelatedDocument_in"/>
		<parentDocument>
			<xsl:variable name="v_671" select="'DOCCLIN'"/>
			<xsl:variable name="v_673" select="$main.RelatedDocument_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s15_in_s15" select="$v_673/self::node()"/>
			<xsl:variable name="v_677" select="$main.RelatedDocument_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s8_in_s8" select="$v_677/self::node()"/>
			<xsl:variable name="v_681" select="$main.RelatedDocument_in/oms:text"/>
			<xsl:variable name="main.Text_in" select="$v_681/self::node()"/>
			<xsl:variable name="v_683" select="$main.RelatedDocument_in/oms:setId"/>
			<xsl:variable name="main.SetId_subset_s0_in_s0" select="$v_683/self::node()"/>
			<xsl:variable name="v_686" select="$main.RelatedDocument_in/oms:versionNumber"/>
			<xsl:variable name="main.VersionNumber_subset_s0_in_s0" select="$v_686/self::node()"/>
			<xsl:if test="string($v_671)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_671"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_672" select="'EVN'"/>
			<xsl:if test="string($v_672)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_672"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m195" select="$main.Id_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m196" select="$main.Code_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m197" select="$main.Text_in"/>
			<xsl:apply-templates mode="main_m198" select="$main.SetId_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m199" select="$main.VersionNumber_subset_s0_in_s0"/>
		</parentDocument>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m195">
		<xsl:variable name="main.Id_subset_s15_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_674" select="$main.Id_subset_s15_in/@nullFlavor"/>
			<xsl:variable name="root_675" select="$main.Id_subset_s15_in/@root"/>
			<xsl:variable name="extension_676" select="$main.Id_subset_s15_in/@extension"/>
			<xsl:if test="string($nullFlavor_674)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_674"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_675)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_675"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_676)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_676"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m196">
		<xsl:variable name="main.Code_subset_s8_in" select="."/>
		<code>
			<xsl:variable name="code_678" select="$main.Code_subset_s8_in/@code"/>
			<xsl:variable name="codeSystem_679" select="$main.Code_subset_s8_in/@codeSystem"/>
			<xsl:variable name="displayNam_680" select="$main.Code_subset_s8_in/@displayName"/>
			<xsl:if test="string($code_678)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_678"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_679)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_679"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_680)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_680"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m197">
		<xsl:variable name="main.Text_in" select="."/>
		<text>
			<xsl:variable name="textConten_682" select="$main.Text_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:setId" mode="main_m198">
		<xsl:variable name="main.SetId_subset_s0_in" select="."/>
		<setId>
			<xsl:variable name="root_684" select="$main.SetId_subset_s0_in/@root"/>
			<xsl:variable name="extension_685" select="$main.SetId_subset_s0_in/@extension"/>
			<xsl:if test="string($root_684)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_684"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_685)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_685"/>
				</xsl:attribute>
			</xsl:if>
		</setId>
	</xsl:template>
	<xsl:template match="oms:versionNumber" mode="main_m199">
		<xsl:variable name="main.VersionNumber_subset_s0_in" select="."/>
		<versionNumber>
			<xsl:variable name="value_687" select="$main.VersionNumber_subset_s0_in/@value"/>
			<xsl:if test="string($value_687)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_687"/>
				</xsl:attribute>
			</xsl:if>
		</versionNumber>
	</xsl:template>
	<xsl:template match="oms:authorization" mode="main_m200">
		<xsl:variable name="main.Authorization_in" select="."/>
		<authorization_Consent>
			<xsl:variable name="v_689" select="'AUTH'"/>
			<xsl:if test="string($v_689)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_689"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="COCD_TP146226GB01.Consent_95">
				<xsl:with-param name="main.Authorization_in" select="$main.Authorization_in"/>
			</xsl:call-template>
		</authorization_Consent>
	</xsl:template>
	<xsl:template name="COCD_TP146226GB01.Consent_95">
		<xsl:param name="main.Authorization_in"/>
		<COCD_TP146226GB01.Consent>
			<xsl:variable name="v_690" select="'CONS'"/>
			<xsl:variable name="v_694" select="$main.Authorization_in/oms:consentCode"/>
			<xsl:variable name="main.ConsentCode_in" select="$v_694/self::node()"/>
			<xsl:if test="string($v_690)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_690"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_691" select="'EVN'"/>
			<xsl:if test="string($v_691)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_691"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_96"/>
			<xsl:apply-templates mode="main_m201" select="$main.ConsentCode_in"/>
			<xsl:call-template name="statusCode_97"/>
		</COCD_TP146226GB01.Consent>
	</xsl:template>
	<xsl:template name="templateId_96">
		<templateId>
			<xsl:variable name="v_692" select="'COCD_TP146226GB01#Consent'"/>
			<xsl:if test="string($v_692)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_692"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_693" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_693)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_693"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:consentCode" mode="main_m201">
		<xsl:variable name="main.ConsentCode_in" select="."/>
		<code>
			<xsl:variable name="code_695" select="$main.ConsentCode_in/@code"/>
			<xsl:variable name="codeSystem_696" select="$main.ConsentCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_697" select="$main.ConsentCode_in/@displayName"/>
			<xsl:if test="string($code_695)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_695"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_696)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_696"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_697)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_697"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template name="statusCode_97">
		<statusCode>
			<xsl:variable name="v_698" select="'completed'"/>
			<xsl:if test="string($v_698)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_698"/>
				</xsl:attribute>
			</xsl:if>
		</statusCode>
	</xsl:template>
	<xsl:template match="oms:encompassingEncounter" mode="main_m202">
		<xsl:variable name="main.EncompassingEncounter_in" select="."/>
		<componentOf_EncompassingEncounter>
			<xsl:variable name="v_700" select="'COMP'"/>
			<xsl:variable name="v_701" select="$main.EncompassingEncounter_in/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="$v_701/ancestor::oms:ClinicalDocument"/>
			<xsl:if test="string($v_700)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_700"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m203" select="$main.ClinicalDocument_in">
				<xsl:with-param name="main.EncompassingEncounter_in" select="$main.EncompassingEncounter_in"/>
			</xsl:apply-templates>
		</componentOf_EncompassingEncounter>
	</xsl:template>
	<xsl:template match="oms:ClinicalDocument" mode="main_m203">
		<xsl:param name="main.EncompassingEncounter_in"/>
		<xsl:variable name="main.ClinicalDocument_in" select="."/>
		<COCD_TP146228GB01.EncompassingEncounter>
			<xsl:variable name="v_702" select="'ENC'"/>
			<xsl:variable name="v_706" select="$main.EncompassingEncounter_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s16_in_s16" select="$v_706/self::node()"/>
			<xsl:variable name="v_708" select="$main.EncompassingEncounter_in/oms:encounterCode"/>
			<xsl:variable name="main.EncounterCode_in" select="$v_708/self::node()"/>
			<xsl:variable name="v_712" select="$main.EncompassingEncounter_in/oms:effectiveTime"/>
			<xsl:variable name="main.EffectiveTime_subset_s0_in_s0" select="$v_712/self::node()"/>
			<xsl:variable name="v_717" select="$main.EncompassingEncounter_in/oms:dischargeDispositionCode"/>
			<xsl:variable name="main.DischargeDispositionCode_in" select="$v_717/self::node()"/>
			<xsl:variable name="v_720" select="$main.EncompassingEncounter_in/oms:responsiblePartyEntity"/>
			<xsl:variable name="main.ResponsiblePartyEntity_in" select="$v_720/self::node()"/>
			<xsl:variable name="v_759" select="$main.EncompassingEncounter_in/oms:responsiblePartyWorkgroup"/>
			<xsl:variable name="main.ResponsiblePartyWorkgroup_in" select="$v_759/self::node()"/>
			<xsl:variable name="v_794" select="$main.EncompassingEncounter_in/oms:encounterParticipantEntity"/>
			<xsl:variable name="main.EncounterParticipantEntity_in" select="$v_794/self::node()"/>
			<xsl:variable name="v_836" select="$main.EncompassingEncounter_in/oms:encounterParticipantWorkgroup"/>
			<xsl:variable name="main.EncounterParticipantWorkgroup_in" select="$v_836/self::node()"/>
			<xsl:variable name="v_871" select="$main.EncompassingEncounter_in/oms:locationUniversal"/>
			<xsl:variable name="main.LocationUniversal_in" select="$v_871/self::node()"/>
			<xsl:if test="string($v_702)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_702"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_703" select="'EVN'"/>
			<xsl:if test="string($v_703)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_703"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_98"/>
			<xsl:apply-templates mode="main_m204" select="$main.Id_subset_s16_in_s16"/>
			<xsl:apply-templates mode="main_m205" select="$main.EncounterCode_in"/>
			<xsl:apply-templates mode="main_m206" select="$main.EffectiveTime_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m209" select="$main.DischargeDispositionCode_in"/>
			<xsl:apply-templates mode="main_m210" select="$main.ResponsiblePartyEntity_in"/>
			<xsl:apply-templates mode="main_m220" select="$main.ResponsiblePartyWorkgroup_in"/>
			<xsl:apply-templates mode="main_m230" select="$main.EncounterParticipantEntity_in"/>
			<xsl:apply-templates mode="main_m241" select="$main.EncounterParticipantWorkgroup_in"/>
			<xsl:apply-templates mode="main_m251" select="$main.LocationUniversal_in"/>
		</COCD_TP146228GB01.EncompassingEncounter>
	</xsl:template>
	<xsl:template name="templateId_98">
		<templateId>
			<xsl:variable name="v_704" select="'COCD_TP146228GB01#EncompassingEncounter'"/>
			<xsl:if test="string($v_704)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_704"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_705" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_705)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_705"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m204">
		<xsl:variable name="main.Id_subset_s16_in" select="."/>
		<id>
			<xsl:variable name="root_707" select="$main.Id_subset_s16_in/@root"/>
			<xsl:if test="string($root_707)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_707"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:encounterCode" mode="main_m205">
		<xsl:variable name="main.EncounterCode_in" select="."/>
		<code>
			<xsl:variable name="code_709" select="$main.EncounterCode_in/@code"/>
			<xsl:variable name="codeSystem_710" select="$main.EncounterCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_711" select="$main.EncounterCode_in/@displayName"/>
			<xsl:if test="string($code_709)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_709"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_710)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_710"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_711)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_711"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:effectiveTime" mode="main_m206">
		<xsl:variable name="main.EffectiveTime_subset_s0_in" select="."/>
		<effectiveTime>
			<xsl:variable name="v_713" select="$main.EffectiveTime_subset_s0_in/oms:low"/>
			<xsl:variable name="main.Low_in" select="$v_713/self::node()"/>
			<xsl:variable name="v_715" select="$main.EffectiveTime_subset_s0_in/oms:high"/>
			<xsl:variable name="main.High_in" select="$v_715/self::node()"/>
			<xsl:apply-templates mode="main_m207" select="$main.Low_in"/>
			<xsl:apply-templates mode="main_m208" select="$main.High_in"/>
		</effectiveTime>
	</xsl:template>
	<xsl:template match="oms:low" mode="main_m207">
		<xsl:variable name="main.Low_in" select="."/>
		<low>
			<xsl:variable name="value_714" select="$main.Low_in/@value"/>
			<xsl:if test="string($value_714)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_714"/>
				</xsl:attribute>
			</xsl:if>
		</low>
	</xsl:template>
	<xsl:template match="oms:high" mode="main_m208">
		<xsl:variable name="main.High_in" select="."/>
		<high>
			<xsl:variable name="value_716" select="$main.High_in/@value"/>
			<xsl:if test="string($value_716)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_716"/>
				</xsl:attribute>
			</xsl:if>
		</high>
	</xsl:template>
	<xsl:template match="oms:dischargeDispositionCode" mode="main_m209">
		<xsl:variable name="main.DischargeDispositionCode_in" select="."/>
		<dischargeDispositionCode>
			<xsl:variable name="nullFlavor_718" select="$main.DischargeDispositionCode_in/@nullFlavor"/>
			<xsl:variable name="code_719" select="$main.DischargeDispositionCode_in/@code"/>
			<xsl:if test="string($nullFlavor_718)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_718"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($code_719)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_719"/>
				</xsl:attribute>
			</xsl:if>
		</dischargeDispositionCode>
	</xsl:template>
	<xsl:template match="oms:responsiblePartyEntity" mode="main_m210">
		<xsl:variable name="main.ResponsiblePartyEntity_in" select="."/>
		<responsibleParty_AssignedEntity>
			<xsl:variable name="v_721" select="'RESP'"/>
			<xsl:if test="string($v_721)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_721"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_99"/>
			<xsl:call-template name="COCD_TP145210GB01.AssignedEntity_100">
				<xsl:with-param name="main.ResponsiblePartyEntity_in" select="$main.ResponsiblePartyEntity_in"/>
			</xsl:call-template>
		</responsibleParty_AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_99">
		<templateId>
			<xsl:variable name="v_722" select="'COCD_TP146228GB01#responsibleParty'"/>
			<xsl:if test="string($v_722)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_722"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_723" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_723)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_723"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="COCD_TP145210GB01.AssignedEntity_100">
		<xsl:param name="main.ResponsiblePartyEntity_in"/>
		<COCD_TP145210GB01.AssignedEntity>
			<xsl:variable name="v_724" select="'ASSIGNED'"/>
			<xsl:variable name="v_727" select="$main.ResponsiblePartyEntity_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s19_in_s19" select="$v_727/self::node()"/>
			<xsl:variable name="v_731" select="$main.ResponsiblePartyEntity_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s11_in_s11" select="$v_731/self::node()"/>
			<xsl:variable name="v_733" select="$main.ResponsiblePartyEntity_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s13_in_s13" select="$v_733/self::node()"/>
			<xsl:if test="string($v_724)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_724"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_101"/>
			<xsl:apply-templates mode="main_m211" select="$main.Id_subset_s19_in_s19"/>
			<xsl:apply-templates mode="main_m212" select="$main.Code_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m213" select="$main.Name_subset_s13_in_s13"/>
			<xsl:call-template name="representedOrganization_103">
				<xsl:with-param name="main.ResponsiblePartyEntity_in" select="$main.ResponsiblePartyEntity_in"/>
			</xsl:call-template>
		</COCD_TP145210GB01.AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_101">
		<templateId>
			<xsl:variable name="v_725" select="'COCD_TP145210GB01#AssignedEntity'"/>
			<xsl:if test="string($v_725)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_725"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_726" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_726)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_726"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m211">
		<xsl:variable name="main.Id_subset_s19_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_728" select="$main.Id_subset_s19_in/@nullFlavor"/>
			<xsl:variable name="root_729" select="$main.Id_subset_s19_in/@root"/>
			<xsl:variable name="extension_730" select="$main.Id_subset_s19_in/@extension"/>
			<xsl:if test="string($nullFlavor_728)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_728"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_729)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_729"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_730)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_730"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m212">
		<xsl:variable name="main.Code_subset_s11_in" select="."/>
		<code>
			<xsl:variable name="code_732" select="$main.Code_subset_s11_in/@code"/>
			<xsl:if test="string($code_732)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_732"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m213">
		<xsl:variable name="main.Name_subset_s13_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_734" select="'PSN'"/>
			<xsl:variable name="v_738" select="$main.Name_subset_s13_in/self::node()"/>
			<xsl:variable name="v_739" select="$v_738/ancestor::oms:responsiblePartyEntity"/>
			<xsl:variable name="v_740" select="$v_739/self::node()"/>
			<xsl:variable name="v_741" select="($v_740/ancestor::oms:encompassingEncounter)[1]"/>
			<xsl:variable name="v_742" select="$v_741/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_742/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.EncompassingEncounter_in" select="$v_741/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="main.ResponsiblePartyEntity_in" select="$v_739/self::node()[($main.EncompassingEncounter_in)]"/>
			<xsl:if test="string($v_734)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_734"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_735" select="'INSTANCE'"/>
			<xsl:if test="string($v_735)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_735"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_102"/>
			<xsl:apply-templates mode="main_m214" select="$main.ResponsiblePartyEntity_in">
				<xsl:with-param name="main.Name_subset_s13_in" select="$main.Name_subset_s13_in"/>
			</xsl:apply-templates>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_102">
		<templateId>
			<xsl:variable name="v_736" select="'COCD_TP145210GB01#assignedPerson'"/>
			<xsl:if test="string($v_736)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_736"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_737" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_737)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_737"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:responsiblePartyEntity" mode="main_m214">
		<xsl:param name="main.Name_subset_s13_in"/>
		<xsl:variable name="main.ResponsiblePartyEntity_in" select="."/>
		<name>
			<xsl:variable name="v_743" select="$main.Name_subset_s13_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s13_in_s13" select="$v_743/self::node()"/>
			<xsl:variable name="v_745" select="$main.Name_subset_s13_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s13_in_s13" select="$v_745/self::node()"/>
			<xsl:variable name="v_747" select="$main.Name_subset_s13_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s13_in_s13" select="$v_747/self::node()"/>
			<xsl:apply-templates mode="main_m215" select="$main.Prefix_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m216" select="$main.Given_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m217" select="$main.Family_subset_s13_in_s13"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m215">
		<xsl:variable name="main.Prefix_subset_s13_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_744" select="$main.Prefix_subset_s13_in/self::node()"/>
			<xsl:value-of select="$textConten_744"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m216">
		<xsl:variable name="main.Given_subset_s13_in" select="."/>
		<given>
			<xsl:variable name="textConten_746" select="$main.Given_subset_s13_in/self::node()"/>
			<xsl:value-of select="$textConten_746"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m217">
		<xsl:variable name="main.Family_subset_s13_in" select="."/>
		<family>
			<xsl:variable name="textConten_748" select="$main.Family_subset_s13_in/self::node()"/>
			<xsl:value-of select="$textConten_748"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_103">
		<xsl:param name="main.ResponsiblePartyEntity_in"/>
		<representedOrganization>
			<xsl:variable name="v_749" select="'ORG'"/>
			<xsl:variable name="v_753" select="$main.ResponsiblePartyEntity_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s13_in_s13" select="$v_753/self::node()"/>
			<xsl:variable name="v_757" select="$main.ResponsiblePartyEntity_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s13_in_s13" select="$v_757/self::node()"/>
			<xsl:if test="string($v_749)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_749"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_750" select="'INSTANCE'"/>
			<xsl:if test="string($v_750)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_750"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_104"/>
			<xsl:apply-templates mode="main_m218" select="$main.OrgId_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m219" select="$main.OrgName_subset_s13_in_s13"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_104">
		<templateId>
			<xsl:variable name="v_751" select="'COCD_TP145210GB01#representedOrganization'"/>
			<xsl:if test="string($v_751)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_751"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_752" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_752)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_752"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m218">
		<xsl:variable name="main.OrgId_subset_s13_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_754" select="$main.OrgId_subset_s13_in/@nullFlavor"/>
			<xsl:variable name="root_755" select="$main.OrgId_subset_s13_in/@root"/>
			<xsl:variable name="extension_756" select="$main.OrgId_subset_s13_in/@extension"/>
			<xsl:if test="string($nullFlavor_754)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_754"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_755)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_755"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_756)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_756"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m219">
		<xsl:variable name="main.OrgName_subset_s13_in" select="."/>
		<name>
			<xsl:variable name="textConten_758" select="$main.OrgName_subset_s13_in/self::node()"/>
			<xsl:value-of select="$textConten_758"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:responsiblePartyWorkgroup" mode="main_m220">
		<xsl:variable name="main.ResponsiblePartyWorkgroup_in" select="."/>
		<responsibleParty_Workgroup>
			<xsl:variable name="v_760" select="'RESP'"/>
			<xsl:if test="string($v_760)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_760"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_105"/>
			<xsl:call-template name="COCD_TP145212GB02.Workgroup_106">
				<xsl:with-param name="main.ResponsiblePartyWorkgroup_in" select="$main.ResponsiblePartyWorkgroup_in"/>
			</xsl:call-template>
		</responsibleParty_Workgroup>
	</xsl:template>
	<xsl:template name="templateId_105">
		<templateId>
			<xsl:variable name="v_761" select="'COCD_TP146228GB01#responsibleParty'"/>
			<xsl:if test="string($v_761)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_761"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_762" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_762)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_762"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="COCD_TP145212GB02.Workgroup_106">
		<xsl:param name="main.ResponsiblePartyWorkgroup_in"/>
		<COCD_TP145212GB02.Workgroup>
			<xsl:variable name="v_763" select="'ASSIGNED'"/>
			<xsl:variable name="v_766" select="$main.ResponsiblePartyWorkgroup_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s20_in_s20" select="$v_766/self::node()"/>
			<xsl:variable name="v_770" select="$main.ResponsiblePartyWorkgroup_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s12_in_s12" select="$v_770/self::node()"/>
			<xsl:variable name="v_772" select="$main.ResponsiblePartyWorkgroup_in/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s3_in_s3" select="$v_772/self::node()"/>
			<xsl:if test="string($v_763)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_763"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_107"/>
			<xsl:apply-templates mode="main_m221" select="$main.Id_subset_s20_in_s20"/>
			<xsl:apply-templates mode="main_m222" select="$main.Code_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m223" select="$main.AssignedPerson_subset_s3_in_s3"/>
			<xsl:call-template name="representedOrganization_109">
				<xsl:with-param name="main.ResponsiblePartyWorkgroup_in" select="$main.ResponsiblePartyWorkgroup_in"/>
			</xsl:call-template>
		</COCD_TP145212GB02.Workgroup>
	</xsl:template>
	<xsl:template name="templateId_107">
		<templateId>
			<xsl:variable name="v_764" select="'COCD_TP145212GB02#Workgroup'"/>
			<xsl:if test="string($v_764)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_764"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_765" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_765)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_765"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m221">
		<xsl:variable name="main.Id_subset_s20_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_767" select="$main.Id_subset_s20_in/@nullFlavor"/>
			<xsl:variable name="root_768" select="$main.Id_subset_s20_in/@root"/>
			<xsl:variable name="extension_769" select="$main.Id_subset_s20_in/@extension"/>
			<xsl:if test="string($nullFlavor_767)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_767"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_768)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_768"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_769)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_769"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m222">
		<xsl:variable name="main.Code_subset_s12_in" select="."/>
		<code>
			<xsl:variable name="code_771" select="$main.Code_subset_s12_in/@code"/>
			<xsl:if test="string($code_771)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_771"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m223">
		<xsl:variable name="main.AssignedPerson_subset_s3_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_773" select="'PSN'"/>
			<xsl:variable name="v_777" select="$main.AssignedPerson_subset_s3_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s14_in_s14" select="$v_777/self::node()"/>
			<xsl:if test="string($v_773)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_773"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_774" select="'INSTANCE'"/>
			<xsl:if test="string($v_774)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_774"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_108"/>
			<xsl:apply-templates mode="main_m224" select="$main.Name_subset_s14_in_s14"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_108">
		<templateId>
			<xsl:variable name="v_775" select="'COCD_TP145212GB02#assignedPerson'"/>
			<xsl:if test="string($v_775)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_775"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_776" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_776)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_776"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m224">
		<xsl:variable name="main.Name_subset_s14_in" select="."/>
		<name>
			<xsl:variable name="v_778" select="$main.Name_subset_s14_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s14_in_s14" select="$v_778/self::node()"/>
			<xsl:variable name="v_780" select="$main.Name_subset_s14_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s14_in_s14" select="$v_780/self::node()"/>
			<xsl:variable name="v_782" select="$main.Name_subset_s14_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s14_in_s14" select="$v_782/self::node()"/>
			<xsl:apply-templates mode="main_m225" select="$main.Prefix_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m226" select="$main.Given_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m227" select="$main.Family_subset_s14_in_s14"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m225">
		<xsl:variable name="main.Prefix_subset_s14_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_779" select="$main.Prefix_subset_s14_in/self::node()"/>
			<xsl:value-of select="$textConten_779"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m226">
		<xsl:variable name="main.Given_subset_s14_in" select="."/>
		<given>
			<xsl:variable name="textConten_781" select="$main.Given_subset_s14_in/self::node()"/>
			<xsl:value-of select="$textConten_781"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m227">
		<xsl:variable name="main.Family_subset_s14_in" select="."/>
		<family>
			<xsl:variable name="textConten_783" select="$main.Family_subset_s14_in/self::node()"/>
			<xsl:value-of select="$textConten_783"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_109">
		<xsl:param name="main.ResponsiblePartyWorkgroup_in"/>
		<representedOrganization>
			<xsl:variable name="v_784" select="'ORG'"/>
			<xsl:variable name="v_788" select="$main.ResponsiblePartyWorkgroup_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s14_in_s14" select="$v_788/self::node()"/>
			<xsl:variable name="v_792" select="$main.ResponsiblePartyWorkgroup_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s14_in_s14" select="$v_792/self::node()"/>
			<xsl:if test="string($v_784)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_784"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_785" select="'INSTANCE'"/>
			<xsl:if test="string($v_785)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_785"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_110"/>
			<xsl:apply-templates mode="main_m228" select="$main.OrgId_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m229" select="$main.OrgName_subset_s14_in_s14"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_110">
		<templateId>
			<xsl:variable name="v_786" select="'COCD_TP145212GB02#representedOrganization'"/>
			<xsl:if test="string($v_786)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_786"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_787" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_787)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_787"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m228">
		<xsl:variable name="main.OrgId_subset_s14_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_789" select="$main.OrgId_subset_s14_in/@nullFlavor"/>
			<xsl:variable name="root_790" select="$main.OrgId_subset_s14_in/@root"/>
			<xsl:variable name="extension_791" select="$main.OrgId_subset_s14_in/@extension"/>
			<xsl:if test="string($nullFlavor_789)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_789"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_790)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_790"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_791)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_791"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m229">
		<xsl:variable name="main.OrgName_subset_s14_in" select="."/>
		<name>
			<xsl:variable name="textConten_793" select="$main.OrgName_subset_s14_in/self::node()"/>
			<xsl:value-of select="$textConten_793"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:encounterParticipantEntity" mode="main_m230">
		<xsl:variable name="main.EncounterParticipantEntity_in" select="."/>
		<encounterParticipant_AssignedEntity>
			<xsl:variable name="typeCode_795" select="$main.EncounterParticipantEntity_in/@typeCode"/>
			<xsl:variable name="v_798" select="$main.EncounterParticipantEntity_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s6_in_s6" select="$v_798/self::node()"/>
			<xsl:if test="string($typeCode_795)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_795"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_111"/>
			<xsl:apply-templates mode="main_m231" select="$main.Time_subset_s6_in_s6"/>
			<xsl:call-template name="COCD_TP145210GB01.AssignedEntity_112">
				<xsl:with-param name="main.EncounterParticipantEntity_in" select="$main.EncounterParticipantEntity_in"/>
			</xsl:call-template>
		</encounterParticipant_AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_111">
		<templateId>
			<xsl:variable name="v_796" select="'COCD_TP146228GB01#encounterParticipant'"/>
			<xsl:if test="string($v_796)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_796"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_797" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_797)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_797"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m231">
		<xsl:variable name="main.Time_subset_s6_in" select="."/>
		<time>
			<xsl:variable name="nullFlavor_799" select="$main.Time_subset_s6_in/@nullFlavor"/>
			<xsl:variable name="value_3_800" select="$main.Time_subset_s6_in/@value_3"/>
			<xsl:if test="string($nullFlavor_799)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_799"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($value_3_800)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_3_800"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145210GB01.AssignedEntity_112">
		<xsl:param name="main.EncounterParticipantEntity_in"/>
		<COCD_TP145210GB01.AssignedEntity>
			<xsl:variable name="v_801" select="'ASSIGNED'"/>
			<xsl:variable name="v_804" select="$main.EncounterParticipantEntity_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s17_in_s17" select="$v_804/self::node()"/>
			<xsl:variable name="v_808" select="$main.EncounterParticipantEntity_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s9_in_s9" select="$v_808/self::node()"/>
			<xsl:variable name="v_810" select="$main.EncounterParticipantEntity_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s11_in_s11" select="$v_810/self::node()"/>
			<xsl:if test="string($v_801)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_801"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_113"/>
			<xsl:apply-templates mode="main_m232" select="$main.Id_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m233" select="$main.Code_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m234" select="$main.Name_subset_s11_in_s11"/>
			<xsl:call-template name="representedOrganization_115">
				<xsl:with-param name="main.EncounterParticipantEntity_in" select="$main.EncounterParticipantEntity_in"/>
			</xsl:call-template>
		</COCD_TP145210GB01.AssignedEntity>
	</xsl:template>
	<xsl:template name="templateId_113">
		<templateId>
			<xsl:variable name="v_802" select="'COCD_TP145210GB01#AssignedEntity'"/>
			<xsl:if test="string($v_802)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_802"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_803" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_803)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_803"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m232">
		<xsl:variable name="main.Id_subset_s17_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_805" select="$main.Id_subset_s17_in/@nullFlavor"/>
			<xsl:variable name="root_806" select="$main.Id_subset_s17_in/@root"/>
			<xsl:variable name="extension_807" select="$main.Id_subset_s17_in/@extension"/>
			<xsl:if test="string($nullFlavor_805)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_805"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_806)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_806"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_807)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_807"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m233">
		<xsl:variable name="main.Code_subset_s9_in" select="."/>
		<code>
			<xsl:variable name="code_809" select="$main.Code_subset_s9_in/@code"/>
			<xsl:if test="string($code_809)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_809"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m234">
		<xsl:variable name="main.Name_subset_s11_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_811" select="'PSN'"/>
			<xsl:variable name="v_815" select="$main.Name_subset_s11_in/self::node()"/>
			<xsl:variable name="v_816" select="$v_815/ancestor::oms:encounterParticipantEntity"/>
			<xsl:variable name="v_817" select="$v_816/self::node()"/>
			<xsl:variable name="v_818" select="($v_817/ancestor::oms:encompassingEncounter)[1]"/>
			<xsl:variable name="v_819" select="$v_818/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_819/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.EncompassingEncounter_in" select="$v_818/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="main.EncounterParticipantEntity_in" select="$v_816/self::node()[($main.EncompassingEncounter_in)]"/>
			<xsl:if test="string($v_811)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_811"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_812" select="'INSTANCE'"/>
			<xsl:if test="string($v_812)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_812"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_114"/>
			<xsl:apply-templates mode="main_m235" select="$main.EncounterParticipantEntity_in">
				<xsl:with-param name="main.Name_subset_s11_in" select="$main.Name_subset_s11_in"/>
			</xsl:apply-templates>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_114">
		<templateId>
			<xsl:variable name="v_813" select="'COCD_TP145210GB01#assignedPerson'"/>
			<xsl:if test="string($v_813)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_813"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_814" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_814)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_814"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:encounterParticipantEntity" mode="main_m235">
		<xsl:param name="main.Name_subset_s11_in"/>
		<xsl:variable name="main.EncounterParticipantEntity_in" select="."/>
		<name>
			<xsl:variable name="v_820" select="$main.Name_subset_s11_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s11_in_s11" select="$v_820/self::node()"/>
			<xsl:variable name="v_822" select="$main.Name_subset_s11_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s11_in_s11" select="$v_822/self::node()"/>
			<xsl:variable name="v_824" select="$main.Name_subset_s11_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s11_in_s11" select="$v_824/self::node()"/>
			<xsl:apply-templates mode="main_m236" select="$main.Prefix_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m237" select="$main.Given_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m238" select="$main.Family_subset_s11_in_s11"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m236">
		<xsl:variable name="main.Prefix_subset_s11_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_821" select="$main.Prefix_subset_s11_in/self::node()"/>
			<xsl:value-of select="$textConten_821"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m237">
		<xsl:variable name="main.Given_subset_s11_in" select="."/>
		<given>
			<xsl:variable name="textConten_823" select="$main.Given_subset_s11_in/self::node()"/>
			<xsl:value-of select="$textConten_823"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m238">
		<xsl:variable name="main.Family_subset_s11_in" select="."/>
		<family>
			<xsl:variable name="textConten_825" select="$main.Family_subset_s11_in/self::node()"/>
			<xsl:value-of select="$textConten_825"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_115">
		<xsl:param name="main.EncounterParticipantEntity_in"/>
		<representedOrganization>
			<xsl:variable name="v_826" select="'ORG'"/>
			<xsl:variable name="v_830" select="$main.EncounterParticipantEntity_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s11_in_s11" select="$v_830/self::node()"/>
			<xsl:variable name="v_834" select="$main.EncounterParticipantEntity_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s11_in_s11" select="$v_834/self::node()"/>
			<xsl:if test="string($v_826)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_826"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_827" select="'INSTANCE'"/>
			<xsl:if test="string($v_827)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_827"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_116"/>
			<xsl:apply-templates mode="main_m239" select="$main.OrgId_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m240" select="$main.OrgName_subset_s11_in_s11"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_116">
		<templateId>
			<xsl:variable name="v_828" select="'COCD_TP145210GB01#representedOrganization'"/>
			<xsl:if test="string($v_828)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_828"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_829" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_829)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_829"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m239">
		<xsl:variable name="main.OrgId_subset_s11_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_831" select="$main.OrgId_subset_s11_in/@nullFlavor"/>
			<xsl:variable name="root_832" select="$main.OrgId_subset_s11_in/@root"/>
			<xsl:variable name="extension_833" select="$main.OrgId_subset_s11_in/@extension"/>
			<xsl:if test="string($nullFlavor_831)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_831"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_832)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_832"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_833)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_833"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m240">
		<xsl:variable name="main.OrgName_subset_s11_in" select="."/>
		<name>
			<xsl:variable name="textConten_835" select="$main.OrgName_subset_s11_in/self::node()"/>
			<xsl:value-of select="$textConten_835"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:encounterParticipantWorkgroup" mode="main_m241">
		<xsl:variable name="main.EncounterParticipantWorkgroup_in" select="."/>
		<encounterParticipant_Workgroup>
			<xsl:variable name="typeCode_837" select="$main.EncounterParticipantWorkgroup_in/@typeCode"/>
			<xsl:if test="string($typeCode_837)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_837"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_117"/>
			<xsl:call-template name="COCD_TP145212GB02.Workgroup_118">
				<xsl:with-param name="main.EncounterParticipantWorkgroup_in" select="$main.EncounterParticipantWorkgroup_in"/>
			</xsl:call-template>
		</encounterParticipant_Workgroup>
	</xsl:template>
	<xsl:template name="templateId_117">
		<templateId>
			<xsl:variable name="v_838" select="'COCD_TP146228GB01#encounterParticipant'"/>
			<xsl:if test="string($v_838)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_838"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_839" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_839)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_839"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="COCD_TP145212GB02.Workgroup_118">
		<xsl:param name="main.EncounterParticipantWorkgroup_in"/>
		<COCD_TP145212GB02.Workgroup>
			<xsl:variable name="v_840" select="'ASSIGNED'"/>
			<xsl:variable name="v_843" select="$main.EncounterParticipantWorkgroup_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s18_in_s18" select="$v_843/self::node()"/>
			<xsl:variable name="v_847" select="$main.EncounterParticipantWorkgroup_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s10_in_s10" select="$v_847/self::node()"/>
			<xsl:variable name="v_849" select="$main.EncounterParticipantWorkgroup_in/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s2_in_s2" select="$v_849/self::node()"/>
			<xsl:if test="string($v_840)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_840"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_119"/>
			<xsl:apply-templates mode="main_m242" select="$main.Id_subset_s18_in_s18"/>
			<xsl:apply-templates mode="main_m243" select="$main.Code_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m244" select="$main.AssignedPerson_subset_s2_in_s2"/>
			<xsl:call-template name="representedOrganization_121">
				<xsl:with-param name="main.EncounterParticipantWorkgroup_in" select="$main.EncounterParticipantWorkgroup_in"/>
			</xsl:call-template>
		</COCD_TP145212GB02.Workgroup>
	</xsl:template>
	<xsl:template name="templateId_119">
		<templateId>
			<xsl:variable name="v_841" select="'COCD_TP145212GB02#Workgroup'"/>
			<xsl:if test="string($v_841)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_841"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_842" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_842)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_842"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m242">
		<xsl:variable name="main.Id_subset_s18_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_844" select="$main.Id_subset_s18_in/@nullFlavor"/>
			<xsl:variable name="root_845" select="$main.Id_subset_s18_in/@root"/>
			<xsl:variable name="extension_846" select="$main.Id_subset_s18_in/@extension"/>
			<xsl:if test="string($nullFlavor_844)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_844"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_845)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_845"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_846)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_846"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m243">
		<xsl:variable name="main.Code_subset_s10_in" select="."/>
		<code>
			<xsl:variable name="code_848" select="$main.Code_subset_s10_in/@code"/>
			<xsl:if test="string($code_848)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_848"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m244">
		<xsl:variable name="main.AssignedPerson_subset_s2_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_850" select="'PSN'"/>
			<xsl:variable name="v_854" select="$main.AssignedPerson_subset_s2_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s12_in_s12" select="$v_854/self::node()"/>
			<xsl:if test="string($v_850)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_850"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_851" select="'INSTANCE'"/>
			<xsl:if test="string($v_851)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_851"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_120"/>
			<xsl:apply-templates mode="main_m245" select="$main.Name_subset_s12_in_s12"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_120">
		<templateId>
			<xsl:variable name="v_852" select="'COCD_TP145212GB02#assignedPerson'"/>
			<xsl:if test="string($v_852)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_852"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_853" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_853)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_853"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m245">
		<xsl:variable name="main.Name_subset_s12_in" select="."/>
		<name>
			<xsl:variable name="v_855" select="$main.Name_subset_s12_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s12_in_s12" select="$v_855/self::node()"/>
			<xsl:variable name="v_857" select="$main.Name_subset_s12_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s12_in_s12" select="$v_857/self::node()"/>
			<xsl:variable name="v_859" select="$main.Name_subset_s12_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s12_in_s12" select="$v_859/self::node()"/>
			<xsl:apply-templates mode="main_m246" select="$main.Prefix_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m247" select="$main.Given_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m248" select="$main.Family_subset_s12_in_s12"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m246">
		<xsl:variable name="main.Prefix_subset_s12_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_856" select="$main.Prefix_subset_s12_in/self::node()"/>
			<xsl:value-of select="$textConten_856"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m247">
		<xsl:variable name="main.Given_subset_s12_in" select="."/>
		<given>
			<xsl:variable name="textConten_858" select="$main.Given_subset_s12_in/self::node()"/>
			<xsl:value-of select="$textConten_858"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m248">
		<xsl:variable name="main.Family_subset_s12_in" select="."/>
		<family>
			<xsl:variable name="textConten_860" select="$main.Family_subset_s12_in/self::node()"/>
			<xsl:value-of select="$textConten_860"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_121">
		<xsl:param name="main.EncounterParticipantWorkgroup_in"/>
		<representedOrganization>
			<xsl:variable name="v_861" select="'ORG'"/>
			<xsl:variable name="v_865" select="$main.EncounterParticipantWorkgroup_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s12_in_s12" select="$v_865/self::node()"/>
			<xsl:variable name="v_869" select="$main.EncounterParticipantWorkgroup_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s12_in_s12" select="$v_869/self::node()"/>
			<xsl:if test="string($v_861)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_861"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_862" select="'INSTANCE'"/>
			<xsl:if test="string($v_862)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_862"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_122"/>
			<xsl:apply-templates mode="main_m249" select="$main.OrgId_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m250" select="$main.OrgName_subset_s12_in_s12"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_122">
		<templateId>
			<xsl:variable name="v_863" select="'COCD_TP145212GB02#representedOrganization'"/>
			<xsl:if test="string($v_863)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_863"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_864" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_864)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_864"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m249">
		<xsl:variable name="main.OrgId_subset_s12_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_866" select="$main.OrgId_subset_s12_in/@nullFlavor"/>
			<xsl:variable name="root_867" select="$main.OrgId_subset_s12_in/@root"/>
			<xsl:variable name="extension_868" select="$main.OrgId_subset_s12_in/@extension"/>
			<xsl:if test="string($nullFlavor_866)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_866"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_867)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_867"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_868)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_868"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m250">
		<xsl:variable name="main.OrgName_subset_s12_in" select="."/>
		<name>
			<xsl:variable name="textConten_870" select="$main.OrgName_subset_s12_in/self::node()"/>
			<xsl:value-of select="$textConten_870"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:locationUniversal" mode="main_m251">
		<xsl:variable name="main.LocationUniversal_in" select="."/>
		<location_HealthCareFacility_Univ>
			<xsl:variable name="v_872" select="'LOC'"/>
			<xsl:variable name="v_875" select="$main.LocationUniversal_in/oms:locCode"/>
			<xsl:variable name="main.LocCode_in" select="$v_875/self::node()"/>
			<xsl:if test="string($v_872)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_872"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_123"/>
			<xsl:apply-templates mode="main_m252" select="$main.LocCode_in"/>
		</location_HealthCareFacility_Univ>
	</xsl:template>
	<xsl:template name="templateId_123">
		<templateId>
			<xsl:variable name="v_873" select="'COCD_TP146228GB01#location'"/>
			<xsl:if test="string($v_873)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_873"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_874" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_874)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_874"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:locCode" mode="main_m252">
		<xsl:variable name="main.LocCode_in" select="."/>
		<COCD_TP145211GB01.HealthCareFacility_Univ>
			<xsl:variable name="v_876" select="'SDLOC'"/>
			<xsl:variable name="v_879" select="$main.LocCode_in/self::node()"/>
			<xsl:variable name="v_880" select="$v_879/ancestor::oms:locationUniversal"/>
			<xsl:variable name="v_881" select="$v_880/self::node()"/>
			<xsl:variable name="v_882" select="($v_881/ancestor::oms:encompassingEncounter)[1]"/>
			<xsl:variable name="v_883" select="$v_882/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_883/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.EncompassingEncounter_in" select="$v_882/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="main.LocationUniversal_in" select="$v_880/self::node()[($main.EncompassingEncounter_in)]"/>
			<xsl:if test="string($v_876)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_876"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_124"/>
			<xsl:apply-templates mode="main_m253" select="$main.LocationUniversal_in">
				<xsl:with-param name="main.LocCode_in" select="$main.LocCode_in"/>
			</xsl:apply-templates>
		</COCD_TP145211GB01.HealthCareFacility_Univ>
	</xsl:template>
	<xsl:template name="templateId_124">
		<templateId>
			<xsl:variable name="v_877" select="'COCD_TP145211GB01#HealthCareFacility'"/>
			<xsl:if test="string($v_877)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_877"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_878" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_878)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_878"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:locationUniversal" mode="main_m253">
		<xsl:param name="main.LocCode_in"/>
		<xsl:variable name="main.LocationUniversal_in" select="."/>
		<code>
			<xsl:variable name="code_884" select="$main.LocCode_in/@code"/>
			<xsl:variable name="codeSystem_885" select="$main.LocCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_886" select="$main.LocCode_in/@displayName"/>
			<xsl:if test="string($code_884)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_884"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_885)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_885"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_886)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_886"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template name="component_125">
		<xsl:param name="main.ClinicalDocument_in"/>
		<component>
			<xsl:variable name="v_887" select="'COMP'"/>
			<xsl:variable name="v_889" select="$main.ClinicalDocument_in/oms:structuredBody"/>
			<xsl:variable name="main.StructuredBody_in" select="$v_889/self::node()"/>
			<xsl:variable name="v_1156" select="$main.ClinicalDocument_in/oms:nonXMLBody"/>
			<xsl:variable name="main.NonXMLBody_in" select="$v_1156/self::node()"/>
			<xsl:if test="string($v_887)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_887"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_888" select="'true'"/>
			<xsl:if test="string($v_888)">
				<xsl:attribute name="contextConductionInd">
					<xsl:value-of select="$v_888"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m254" select="$main.StructuredBody_in"/>
			<xsl:apply-templates mode="main_m323" select="$main.NonXMLBody_in"/>
		</component>
	</xsl:template>
	<xsl:template match="oms:structuredBody" mode="main_m254">
		<xsl:variable name="main.StructuredBody_in" select="."/>
		<bodyChoiceStructuredBody>
			<xsl:variable name="v_890" select="'DOCBODY'"/>
			<xsl:variable name="v_892" select="$main.StructuredBody_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s21_in_s21" select="$v_892/self::node()"/>
			<xsl:if test="string($v_890)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_890"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_891" select="'EVN'"/>
			<xsl:if test="string($v_891)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_891"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m255" select="$main.Id_subset_s21_in_s21"/>
		</bodyChoiceStructuredBody>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m255">
		<xsl:variable name="main.Id_subset_s21_in" select="."/>
		<component>
			<xsl:variable name="v_893" select="'COMP'"/>
			<xsl:variable name="v_895" select="$main.Id_subset_s21_in/self::node()"/>
			<xsl:variable name="v_896" select="$v_895/ancestor::oms:structuredBody"/>
			<xsl:variable name="v_897" select="$v_896/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_897/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.StructuredBody_in" select="$v_896/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:if test="string($v_893)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_893"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_894" select="'true'"/>
			<xsl:if test="string($v_894)">
				<xsl:attribute name="contextConductionInd">
					<xsl:value-of select="$v_894"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m256" select="$main.StructuredBody_in"/>
		</component>
	</xsl:template>
	<xsl:template match="oms:structuredBody" mode="main_m256">
		<xsl:variable name="main.StructuredBody_in" select="."/>
		<classificationSection>
			<xsl:variable name="v_898" select="'DOCSECT'"/>
			<xsl:variable name="v_900" select="$main.StructuredBody_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s21_in_s21" select="$v_900/self::node()"/>
			<xsl:variable name="v_902" select="$main.StructuredBody_in/oms:componentSection"/>
			<xsl:variable name="main.ComponentSection_in" select="$v_902/self::node()"/>
			<xsl:if test="string($v_898)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_898"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_899" select="'EVN'"/>
			<xsl:if test="string($v_899)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_899"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m257" select="$main.Id_subset_s21_in_s21"/>
			<xsl:apply-templates mode="main_m258" select="$main.ComponentSection_in"/>
		</classificationSection>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m257">
		<xsl:variable name="main.Id_subset_s21_in" select="."/>
		<id>
			<xsl:variable name="root_901" select="$main.Id_subset_s21_in/@root"/>
			<xsl:if test="string($root_901)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_901"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:componentSection" mode="main_m258">
		<xsl:variable name="main.ComponentSection_in" select="."/>
		<component_Section1>
			<xsl:variable name="v_903" select="'COMP'"/>
			<xsl:variable name="v_905" select="$main.ComponentSection_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s22_in_s22" select="$v_905/self::node()"/>
			<xsl:if test="string($v_903)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_903"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_904" select="'true'"/>
			<xsl:if test="string($v_904)">
				<xsl:attribute name="contextConductionInd">
					<xsl:value-of select="$v_904"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m259" select="$main.Id_subset_s22_in_s22">
				<xsl:with-param name="main.ComponentSection_in" select="$main.ComponentSection_in"/>
			</xsl:apply-templates>
		</component_Section1>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m259">
		<xsl:param name="main.ComponentSection_in"/>
		<xsl:variable name="main.Id_subset_s22_in" select="."/>
		<COCD_TP146229GB01.Section1>
			<xsl:variable name="v_906" select="'DOCSECT'"/>
			<xsl:variable name="v_910" select="$main.Id_subset_s22_in/self::node()"/>
			<xsl:variable name="v_911" select="$v_910/ancestor::oms:componentSection"/>
			<xsl:variable name="v_912" select="$v_911/self::node()"/>
			<xsl:variable name="v_913" select="($v_912/ancestor::oms:structuredBody)[1]"/>
			<xsl:variable name="v_914" select="$v_913/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_914/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.StructuredBody_in" select="$v_913/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="main.ComponentSection_in" select="$v_911/self::node()[($main.StructuredBody_in)]"/>
			<xsl:variable name="v_918" select="$main.ComponentSection_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s0_in_s0" select="$v_918/self::node()"/>
			<xsl:variable name="v_920" select="$main.ComponentSection_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s0_in_s0" select="$v_920/self::node()"/>
			<xsl:variable name="v_922" select="$main.ComponentSection_in/oms:authorTextSectionPerson"/>
			<xsl:variable name="main.AuthorTextSectionPerson_in" select="$v_922/self::node()"/>
			<xsl:variable name="v_967" select="$main.ComponentSection_in/oms:authorTextSectionAnonymous"/>
			<xsl:variable name="main.AuthorTextSectionAnonymous_in" select="$v_967/self::node()"/>
			<xsl:variable name="v_994" select="$main.ComponentSection_in/oms:authorTextSectionWorkgroup"/>
			<xsl:variable name="main.AuthorTextSectionWorkgroup_in" select="$v_994/self::node()"/>
			<xsl:variable name="v_1033" select="$main.ComponentSection_in/oms:authorTextSectionDevice"/>
			<xsl:variable name="main.AuthorTextSectionDevice_in" select="$v_1033/self::node()"/>
			<xsl:variable name="v_1066" select="$main.ComponentSection_in/oms:component1"/>
			<xsl:variable name="main.Component1_in" select="$v_1066/self::node()"/>
			<xsl:if test="string($v_906)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_906"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_907" select="'EVN'"/>
			<xsl:if test="string($v_907)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_907"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_126"/>
			<xsl:apply-templates mode="main_m260" select="$main.ComponentSection_in">
				<xsl:with-param name="main.Id_subset_s22_in" select="$main.Id_subset_s22_in"/>
			</xsl:apply-templates>
			<xsl:apply-templates mode="main_m261" select="$main.Title_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m262" select="$main.Text_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m263" select="$main.AuthorTextSectionPerson_in"/>
			<xsl:apply-templates mode="main_m274" select="$main.AuthorTextSectionAnonymous_in"/>
			<xsl:apply-templates mode="main_m280" select="$main.AuthorTextSectionWorkgroup_in"/>
			<xsl:apply-templates mode="main_m291" select="$main.AuthorTextSectionDevice_in"/>
			<xsl:apply-templates mode="main_m298" select="$main.Component1_in"/>
		</COCD_TP146229GB01.Section1>
	</xsl:template>
	<xsl:template name="templateId_126">
		<templateId>
			<xsl:variable name="v_908" select="'COCD_TP146229GB01#Section1'"/>
			<xsl:if test="string($v_908)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_908"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_909" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_909)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_909"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:componentSection" mode="main_m260">
		<xsl:param name="main.Id_subset_s22_in"/>
		<xsl:variable name="main.ComponentSection_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_915" select="$main.Id_subset_s22_in/@nullFlavor"/>
			<xsl:variable name="root_916" select="$main.Id_subset_s22_in/@root"/>
			<xsl:variable name="extension_917" select="$main.Id_subset_s22_in/@extension"/>
			<xsl:if test="string($nullFlavor_915)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_915"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_916)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_916"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_917)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_917"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m261">
		<xsl:variable name="main.Title_subset_s0_in" select="."/>
		<title>
			<xsl:variable name="textConten_919" select="$main.Title_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_919"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m262">
		<xsl:variable name="main.Text_subset_s0_in" select="."/>
		<text>
			<xsl:variable name="textConten_921" select="$main.Text_subset_s0_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:authorTextSectionPerson" mode="main_m263">
		<xsl:variable name="main.AuthorTextSectionPerson_in" select="."/>
		<authorTextSection_AssignedAuthor_Person>
			<xsl:variable name="v_923" select="'AUT'"/>
			<xsl:variable name="v_928" select="$main.AuthorTextSectionPerson_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s7_in_s7" select="$v_928/self::node()"/>
			<xsl:if test="string($v_923)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_923"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_924" select="'OP'"/>
			<xsl:if test="string($v_924)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_924"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_127"/>
			<xsl:call-template name="functionCode_128"/>
			<xsl:apply-templates mode="main_m264" select="$main.Time_subset_s7_in_s7"/>
			<xsl:call-template name="COCD_TP145200GB01.AssignedAuthor_Person_129">
				<xsl:with-param name="main.AuthorTextSectionPerson_in" select="$main.AuthorTextSectionPerson_in"/>
			</xsl:call-template>
		</authorTextSection_AssignedAuthor_Person>
	</xsl:template>
	<xsl:template name="templateId_127">
		<templateId>
			<xsl:variable name="v_925" select="'COCD_TP146229GB01#author'"/>
			<xsl:if test="string($v_925)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_925"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_926" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_926)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_926"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="functionCode_128">
		<functionCode>
			<xsl:variable name="v_927" select="'OA'"/>
			<xsl:if test="string($v_927)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_927"/>
				</xsl:attribute>
			</xsl:if>
		</functionCode>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m264">
		<xsl:variable name="main.Time_subset_s7_in" select="."/>
		<time>
			<xsl:variable name="value_929" select="$main.Time_subset_s7_in/@value"/>
			<xsl:if test="string($value_929)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_929"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145200GB01.AssignedAuthor_Person_129">
		<xsl:param name="main.AuthorTextSectionPerson_in"/>
		<COCD_TP145200GB01.AssignedAuthor_Person>
			<xsl:variable name="v_930" select="'ASSIGNED'"/>
			<xsl:variable name="v_933" select="$main.AuthorTextSectionPerson_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s28_in_s28" select="$v_933/self::node()"/>
			<xsl:variable name="v_937" select="$main.AuthorTextSectionPerson_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s13_in_s13" select="$v_937/self::node()"/>
			<xsl:variable name="v_939" select="$main.AuthorTextSectionPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s15_in_s15" select="$v_939/self::node()"/>
			<xsl:if test="string($v_930)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_930"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_130"/>
			<xsl:apply-templates mode="main_m265" select="$main.Id_subset_s28_in_s28"/>
			<xsl:apply-templates mode="main_m266" select="$main.Code_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m267" select="$main.Name_subset_s15_in_s15"/>
			<xsl:call-template name="representedOrganization_132">
				<xsl:with-param name="main.AuthorTextSectionPerson_in" select="$main.AuthorTextSectionPerson_in"/>
			</xsl:call-template>
		</COCD_TP145200GB01.AssignedAuthor_Person>
	</xsl:template>
	<xsl:template name="templateId_130">
		<templateId>
			<xsl:variable name="v_931" select="'COCD_TP145200GB01#AssignedAuthor'"/>
			<xsl:if test="string($v_931)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_931"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_932" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_932)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_932"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m265">
		<xsl:variable name="main.Id_subset_s28_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_934" select="$main.Id_subset_s28_in/@nullFlavor"/>
			<xsl:variable name="root_935" select="$main.Id_subset_s28_in/@root"/>
			<xsl:variable name="extension_936" select="$main.Id_subset_s28_in/@extension"/>
			<xsl:if test="string($nullFlavor_934)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_934"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_935)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_935"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_936)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_936"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m266">
		<xsl:variable name="main.Code_subset_s13_in" select="."/>
		<code>
			<xsl:variable name="code_938" select="$main.Code_subset_s13_in/@code"/>
			<xsl:if test="string($code_938)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_938"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m267">
		<xsl:variable name="main.Name_subset_s15_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_940" select="'PSN'"/>
			<xsl:variable name="v_944" select="$main.Name_subset_s15_in/self::node()"/>
			<xsl:variable name="v_945" select="$v_944/ancestor::oms:authorTextSectionPerson"/>
			<xsl:variable name="v_946" select="$v_945/self::node()"/>
			<xsl:variable name="v_947" select="($v_946/ancestor::oms:componentSection)[1]"/>
			<xsl:variable name="v_948" select="$v_947/self::node()"/>
			<xsl:variable name="v_949" select="($v_948/ancestor::oms:structuredBody)[1]"/>
			<xsl:variable name="v_950" select="$v_949/self::node()"/>
			<xsl:variable name="main.ClinicalDocument_in" select="($v_950/ancestor::oms:ClinicalDocument)[1]"/>
			<xsl:variable name="main.StructuredBody_in" select="$v_949/self::node()[($main.ClinicalDocument_in)]"/>
			<xsl:variable name="main.ComponentSection_in" select="$v_947/self::node()[($main.StructuredBody_in)]"/>
			<xsl:variable name="main.AuthorTextSectionPerson_in" select="$v_945/self::node()[($main.ComponentSection_in)]"/>
			<xsl:if test="string($v_940)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_940"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_941" select="'INSTANCE'"/>
			<xsl:if test="string($v_941)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_941"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_131"/>
			<xsl:apply-templates mode="main_m268" select="$main.AuthorTextSectionPerson_in">
				<xsl:with-param name="main.Name_subset_s15_in" select="$main.Name_subset_s15_in"/>
			</xsl:apply-templates>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_131">
		<templateId>
			<xsl:variable name="v_942" select="'COCD_TP145200GB01#assignedPerson'"/>
			<xsl:if test="string($v_942)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_942"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_943" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_943)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_943"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:authorTextSectionPerson" mode="main_m268">
		<xsl:param name="main.Name_subset_s15_in"/>
		<xsl:variable name="main.AuthorTextSectionPerson_in" select="."/>
		<name>
			<xsl:variable name="v_951" select="$main.Name_subset_s15_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s15_in_s15" select="$v_951/self::node()"/>
			<xsl:variable name="v_953" select="$main.Name_subset_s15_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s15_in_s15" select="$v_953/self::node()"/>
			<xsl:variable name="v_955" select="$main.Name_subset_s15_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s15_in_s15" select="$v_955/self::node()"/>
			<xsl:apply-templates mode="main_m269" select="$main.Prefix_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m270" select="$main.Given_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m271" select="$main.Family_subset_s15_in_s15"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m269">
		<xsl:variable name="main.Prefix_subset_s15_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_952" select="$main.Prefix_subset_s15_in/self::node()"/>
			<xsl:value-of select="$textConten_952"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m270">
		<xsl:variable name="main.Given_subset_s15_in" select="."/>
		<given>
			<xsl:variable name="textConten_954" select="$main.Given_subset_s15_in/self::node()"/>
			<xsl:value-of select="$textConten_954"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m271">
		<xsl:variable name="main.Family_subset_s15_in" select="."/>
		<family>
			<xsl:variable name="textConten_956" select="$main.Family_subset_s15_in/self::node()"/>
			<xsl:value-of select="$textConten_956"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_132">
		<xsl:param name="main.AuthorTextSectionPerson_in"/>
		<representedOrganization>
			<xsl:variable name="v_957" select="'ORG'"/>
			<xsl:variable name="v_961" select="$main.AuthorTextSectionPerson_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s15_in_s15" select="$v_961/self::node()"/>
			<xsl:variable name="v_965" select="$main.AuthorTextSectionPerson_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s15_in_s15" select="$v_965/self::node()"/>
			<xsl:if test="string($v_957)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_957"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_958" select="'INSTANCE'"/>
			<xsl:if test="string($v_958)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_958"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_133"/>
			<xsl:apply-templates mode="main_m272" select="$main.OrgId_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m273" select="$main.OrgName_subset_s15_in_s15"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_133">
		<templateId>
			<xsl:variable name="v_959" select="'COCD_TP145200GB01#representedOrganization'"/>
			<xsl:if test="string($v_959)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_959"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_960" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_960)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_960"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m272">
		<xsl:variable name="main.OrgId_subset_s15_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_962" select="$main.OrgId_subset_s15_in/@nullFlavor"/>
			<xsl:variable name="root_963" select="$main.OrgId_subset_s15_in/@root"/>
			<xsl:variable name="extension_964" select="$main.OrgId_subset_s15_in/@extension"/>
			<xsl:if test="string($nullFlavor_962)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_962"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_963)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_963"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_964)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_964"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m273">
		<xsl:variable name="main.OrgName_subset_s15_in" select="."/>
		<name>
			<xsl:variable name="textConten_966" select="$main.OrgName_subset_s15_in/self::node()"/>
			<xsl:value-of select="$textConten_966"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:authorTextSectionAnonymous" mode="main_m274">
		<xsl:variable name="main.AuthorTextSectionAnonymous_in" select="."/>
		<authorTextSection_AssignedAuthor_Anon>
			<xsl:variable name="v_968" select="'AUT'"/>
			<xsl:variable name="v_973" select="$main.AuthorTextSectionAnonymous_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s8_in_s8" select="$v_973/self::node()"/>
			<xsl:if test="string($v_968)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_968"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_969" select="'OP'"/>
			<xsl:if test="string($v_969)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_969"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_134"/>
			<xsl:call-template name="functionCode_135"/>
			<xsl:apply-templates mode="main_m275" select="$main.Time_subset_s8_in_s8"/>
			<xsl:call-template name="COCD_TP145208GB01.AssignedAuthor_Anon_136">
				<xsl:with-param name="main.AuthorTextSectionAnonymous_in" select="$main.AuthorTextSectionAnonymous_in"/>
			</xsl:call-template>
		</authorTextSection_AssignedAuthor_Anon>
	</xsl:template>
	<xsl:template name="templateId_134">
		<templateId>
			<xsl:variable name="v_970" select="'COCD_TP146229GB01#author'"/>
			<xsl:if test="string($v_970)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_970"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_971" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_971)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_971"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="functionCode_135">
		<functionCode>
			<xsl:variable name="v_972" select="'OA'"/>
			<xsl:if test="string($v_972)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_972"/>
				</xsl:attribute>
			</xsl:if>
		</functionCode>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m275">
		<xsl:variable name="main.Time_subset_s8_in" select="."/>
		<time>
			<xsl:variable name="value_974" select="$main.Time_subset_s8_in/@value"/>
			<xsl:if test="string($value_974)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_974"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145208GB01.AssignedAuthor_Anon_136">
		<xsl:param name="main.AuthorTextSectionAnonymous_in"/>
		<COCD_TP145208GB01.AssignedAuthor_Anon>
			<xsl:variable name="v_975" select="'ASSIGNED'"/>
			<xsl:variable name="v_978" select="$main.AuthorTextSectionAnonymous_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s29_in_s29" select="$v_978/self::node()"/>
			<xsl:variable name="v_982" select="$main.AuthorTextSectionAnonymous_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s14_in_s14" select="$v_982/self::node()"/>
			<xsl:if test="string($v_975)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_975"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_137"/>
			<xsl:apply-templates mode="main_m276" select="$main.Id_subset_s29_in_s29"/>
			<xsl:apply-templates mode="main_m277" select="$main.Code_subset_s14_in_s14"/>
			<xsl:call-template name="representedOrganization_138">
				<xsl:with-param name="main.AuthorTextSectionAnonymous_in" select="$main.AuthorTextSectionAnonymous_in"/>
			</xsl:call-template>
		</COCD_TP145208GB01.AssignedAuthor_Anon>
	</xsl:template>
	<xsl:template name="templateId_137">
		<templateId>
			<xsl:variable name="v_976" select="'COCD_TP145208GB01#AssignedAuthor'"/>
			<xsl:if test="string($v_976)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_976"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_977" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_977)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_977"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m276">
		<xsl:variable name="main.Id_subset_s29_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_979" select="$main.Id_subset_s29_in/@nullFlavor"/>
			<xsl:variable name="root_980" select="$main.Id_subset_s29_in/@root"/>
			<xsl:variable name="extension_981" select="$main.Id_subset_s29_in/@extension"/>
			<xsl:if test="string($nullFlavor_979)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_979"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_980)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_980"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_981)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_981"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m277">
		<xsl:variable name="main.Code_subset_s14_in" select="."/>
		<code>
			<xsl:variable name="code_983" select="$main.Code_subset_s14_in/@code"/>
			<xsl:if test="string($code_983)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_983"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template name="representedOrganization_138">
		<xsl:param name="main.AuthorTextSectionAnonymous_in"/>
		<representedOrganization>
			<xsl:variable name="v_984" select="'ORG'"/>
			<xsl:variable name="v_988" select="$main.AuthorTextSectionAnonymous_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s16_in_s16" select="$v_988/self::node()"/>
			<xsl:variable name="v_992" select="$main.AuthorTextSectionAnonymous_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s16_in_s16" select="$v_992/self::node()"/>
			<xsl:if test="string($v_984)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_984"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_985" select="'INSTANCE'"/>
			<xsl:if test="string($v_985)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_985"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_139"/>
			<xsl:apply-templates mode="main_m278" select="$main.OrgId_subset_s16_in_s16"/>
			<xsl:apply-templates mode="main_m279" select="$main.OrgName_subset_s16_in_s16"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_139">
		<templateId>
			<xsl:variable name="v_986" select="'COCD_TP145208GB01#representedOrganization'"/>
			<xsl:if test="string($v_986)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_986"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_987" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_987)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_987"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m278">
		<xsl:variable name="main.OrgId_subset_s16_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_989" select="$main.OrgId_subset_s16_in/@nullFlavor"/>
			<xsl:variable name="root_990" select="$main.OrgId_subset_s16_in/@root"/>
			<xsl:variable name="extension_991" select="$main.OrgId_subset_s16_in/@extension"/>
			<xsl:if test="string($nullFlavor_989)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_989"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_990)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_990"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_991)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_991"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m279">
		<xsl:variable name="main.OrgName_subset_s16_in" select="."/>
		<name>
			<xsl:variable name="textConten_993" select="$main.OrgName_subset_s16_in/self::node()"/>
			<xsl:value-of select="$textConten_993"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:authorTextSectionWorkgroup" mode="main_m280">
		<xsl:variable name="main.AuthorTextSectionWorkgroup_in" select="."/>
		<authorTextSection_Workgroup>
			<xsl:variable name="v_995" select="'AUT'"/>
			<xsl:variable name="v_1000" select="$main.AuthorTextSectionWorkgroup_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s9_in_s9" select="$v_1000/self::node()"/>
			<xsl:if test="string($v_995)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_995"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_996" select="'OP'"/>
			<xsl:if test="string($v_996)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_996"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_140"/>
			<xsl:call-template name="functionCode_141"/>
			<xsl:apply-templates mode="main_m281" select="$main.Time_subset_s9_in_s9"/>
			<xsl:call-template name="COCD_TP145212GB02.Workgroup_142">
				<xsl:with-param name="main.AuthorTextSectionWorkgroup_in" select="$main.AuthorTextSectionWorkgroup_in"/>
			</xsl:call-template>
		</authorTextSection_Workgroup>
	</xsl:template>
	<xsl:template name="templateId_140">
		<templateId>
			<xsl:variable name="v_997" select="'COCD_TP146229GB01#author'"/>
			<xsl:if test="string($v_997)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_997"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_998" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_998)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_998"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="functionCode_141">
		<functionCode>
			<xsl:variable name="v_999" select="'OA'"/>
			<xsl:if test="string($v_999)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_999"/>
				</xsl:attribute>
			</xsl:if>
		</functionCode>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m281">
		<xsl:variable name="main.Time_subset_s9_in" select="."/>
		<time>
			<xsl:variable name="value_1001" select="$main.Time_subset_s9_in/@value"/>
			<xsl:if test="string($value_1001)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_1001"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145212GB02.Workgroup_142">
		<xsl:param name="main.AuthorTextSectionWorkgroup_in"/>
		<COCD_TP145212GB02.Workgroup>
			<xsl:variable name="v_1002" select="'ASSIGNED'"/>
			<xsl:variable name="v_1005" select="$main.AuthorTextSectionWorkgroup_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s30_in_s30" select="$v_1005/self::node()"/>
			<xsl:variable name="v_1009" select="$main.AuthorTextSectionWorkgroup_in/oms:code"/>
			<xsl:variable name="main.Code_subset_s15_in_s15" select="$v_1009/self::node()"/>
			<xsl:variable name="v_1011" select="$main.AuthorTextSectionWorkgroup_in/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s4_in_s4" select="$v_1011/self::node()"/>
			<xsl:if test="string($v_1002)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1002"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_143"/>
			<xsl:apply-templates mode="main_m282" select="$main.Id_subset_s30_in_s30"/>
			<xsl:apply-templates mode="main_m283" select="$main.Code_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m284" select="$main.AssignedPerson_subset_s4_in_s4"/>
			<xsl:call-template name="representedOrganization_145">
				<xsl:with-param name="main.AuthorTextSectionWorkgroup_in" select="$main.AuthorTextSectionWorkgroup_in"/>
			</xsl:call-template>
		</COCD_TP145212GB02.Workgroup>
	</xsl:template>
	<xsl:template name="templateId_143">
		<templateId>
			<xsl:variable name="v_1003" select="'COCD_TP145212GB02#Workgroup'"/>
			<xsl:if test="string($v_1003)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1003"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1004" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1004)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1004"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m282">
		<xsl:variable name="main.Id_subset_s30_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1006" select="$main.Id_subset_s30_in/@nullFlavor"/>
			<xsl:variable name="root_1007" select="$main.Id_subset_s30_in/@root"/>
			<xsl:variable name="extension_1008" select="$main.Id_subset_s30_in/@extension"/>
			<xsl:if test="string($nullFlavor_1006)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1006"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1007)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1007"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1008)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1008"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m283">
		<xsl:variable name="main.Code_subset_s15_in" select="."/>
		<code>
			<xsl:variable name="code_1010" select="$main.Code_subset_s15_in/@code"/>
			<xsl:if test="string($code_1010)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_1010"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m284">
		<xsl:variable name="main.AssignedPerson_subset_s4_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_1012" select="'PSN'"/>
			<xsl:variable name="v_1016" select="$main.AssignedPerson_subset_s4_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s16_in_s16" select="$v_1016/self::node()"/>
			<xsl:if test="string($v_1012)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1012"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1013" select="'INSTANCE'"/>
			<xsl:if test="string($v_1013)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_1013"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_144"/>
			<xsl:apply-templates mode="main_m285" select="$main.Name_subset_s16_in_s16"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template name="templateId_144">
		<templateId>
			<xsl:variable name="v_1014" select="'COCD_TP145212GB02#assignedPerson'"/>
			<xsl:if test="string($v_1014)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1014"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1015" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1015)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1015"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m285">
		<xsl:variable name="main.Name_subset_s16_in" select="."/>
		<name>
			<xsl:variable name="v_1017" select="$main.Name_subset_s16_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s16_in_s16" select="$v_1017/self::node()"/>
			<xsl:variable name="v_1019" select="$main.Name_subset_s16_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s16_in_s16" select="$v_1019/self::node()"/>
			<xsl:variable name="v_1021" select="$main.Name_subset_s16_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s16_in_s16" select="$v_1021/self::node()"/>
			<xsl:apply-templates mode="main_m286" select="$main.Prefix_subset_s16_in_s16"/>
			<xsl:apply-templates mode="main_m287" select="$main.Given_subset_s16_in_s16"/>
			<xsl:apply-templates mode="main_m288" select="$main.Family_subset_s16_in_s16"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m286">
		<xsl:variable name="main.Prefix_subset_s16_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_1018" select="$main.Prefix_subset_s16_in/self::node()"/>
			<xsl:value-of select="$textConten_1018"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m287">
		<xsl:variable name="main.Given_subset_s16_in" select="."/>
		<given>
			<xsl:variable name="textConten_1020" select="$main.Given_subset_s16_in/self::node()"/>
			<xsl:value-of select="$textConten_1020"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m288">
		<xsl:variable name="main.Family_subset_s16_in" select="."/>
		<family>
			<xsl:variable name="textConten_1022" select="$main.Family_subset_s16_in/self::node()"/>
			<xsl:value-of select="$textConten_1022"/>
		</family>
	</xsl:template>
	<xsl:template name="representedOrganization_145">
		<xsl:param name="main.AuthorTextSectionWorkgroup_in"/>
		<representedOrganization>
			<xsl:variable name="v_1023" select="'ORG'"/>
			<xsl:variable name="v_1027" select="$main.AuthorTextSectionWorkgroup_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s17_in_s17" select="$v_1027/self::node()"/>
			<xsl:variable name="v_1031" select="$main.AuthorTextSectionWorkgroup_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s17_in_s17" select="$v_1031/self::node()"/>
			<xsl:if test="string($v_1023)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1023"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1024" select="'INSTANCE'"/>
			<xsl:if test="string($v_1024)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_1024"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_146"/>
			<xsl:apply-templates mode="main_m289" select="$main.OrgId_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m290" select="$main.OrgName_subset_s17_in_s17"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_146">
		<templateId>
			<xsl:variable name="v_1025" select="'COCD_TP145212GB02#representedOrganization'"/>
			<xsl:if test="string($v_1025)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1025"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1026" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1026)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1026"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m289">
		<xsl:variable name="main.OrgId_subset_s17_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1028" select="$main.OrgId_subset_s17_in/@nullFlavor"/>
			<xsl:variable name="root_1029" select="$main.OrgId_subset_s17_in/@root"/>
			<xsl:variable name="extension_1030" select="$main.OrgId_subset_s17_in/@extension"/>
			<xsl:if test="string($nullFlavor_1028)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1028"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1029)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1029"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1030)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1030"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m290">
		<xsl:variable name="main.OrgName_subset_s17_in" select="."/>
		<name>
			<xsl:variable name="textConten_1032" select="$main.OrgName_subset_s17_in/self::node()"/>
			<xsl:value-of select="$textConten_1032"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:authorTextSectionDevice" mode="main_m291">
		<xsl:variable name="main.AuthorTextSectionDevice_in" select="."/>
		<authorTextSection_AssignedAuthorDevice>
			<xsl:variable name="v_1034" select="'AUT'"/>
			<xsl:variable name="v_1039" select="$main.AuthorTextSectionDevice_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s10_in_s10" select="$v_1039/self::node()"/>
			<xsl:if test="string($v_1034)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_1034"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1035" select="'OP'"/>
			<xsl:if test="string($v_1035)">
				<xsl:attribute name="contextControlCode">
					<xsl:value-of select="$v_1035"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_147"/>
			<xsl:call-template name="functionCode_148"/>
			<xsl:apply-templates mode="main_m292" select="$main.Time_subset_s10_in_s10"/>
			<xsl:call-template name="COCD_TP145207GB01.AssignedAuthorDevice_149">
				<xsl:with-param name="main.AuthorTextSectionDevice_in" select="$main.AuthorTextSectionDevice_in"/>
			</xsl:call-template>
		</authorTextSection_AssignedAuthorDevice>
	</xsl:template>
	<xsl:template name="templateId_147">
		<templateId>
			<xsl:variable name="v_1036" select="'COCD_TP146229GB01#author'"/>
			<xsl:if test="string($v_1036)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1036"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1037" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1037)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1037"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template name="functionCode_148">
		<functionCode>
			<xsl:variable name="v_1038" select="'OA'"/>
			<xsl:if test="string($v_1038)">
				<xsl:attribute name="code">
					<xsl:value-of select="$v_1038"/>
				</xsl:attribute>
			</xsl:if>
		</functionCode>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m292">
		<xsl:variable name="main.Time_subset_s10_in" select="."/>
		<time>
			<xsl:variable name="value_1040" select="$main.Time_subset_s10_in/@value"/>
			<xsl:if test="string($value_1040)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_1040"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template name="COCD_TP145207GB01.AssignedAuthorDevice_149">
		<xsl:param name="main.AuthorTextSectionDevice_in"/>
		<COCD_TP145207GB01.AssignedAuthorDevice>
			<xsl:variable name="v_1041" select="'ASSIGNED'"/>
			<xsl:variable name="v_1044" select="$main.AuthorTextSectionDevice_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s31_in_s31" select="$v_1044/self::node()"/>
			<xsl:if test="string($v_1041)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1041"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_150"/>
			<xsl:apply-templates mode="main_m293" select="$main.Id_subset_s31_in_s31"/>
			<xsl:call-template name="assignedAuthoringDevice_151">
				<xsl:with-param name="main.AuthorTextSectionDevice_in" select="$main.AuthorTextSectionDevice_in"/>
			</xsl:call-template>
			<xsl:call-template name="representedOrganization_153">
				<xsl:with-param name="main.AuthorTextSectionDevice_in" select="$main.AuthorTextSectionDevice_in"/>
			</xsl:call-template>
		</COCD_TP145207GB01.AssignedAuthorDevice>
	</xsl:template>
	<xsl:template name="templateId_150">
		<templateId>
			<xsl:variable name="v_1042" select="'COCD_TP145207GB01#AssignedAuthorDevice'"/>
			<xsl:if test="string($v_1042)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1042"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1043" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1043)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1043"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m293">
		<xsl:variable name="main.Id_subset_s31_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1045" select="$main.Id_subset_s31_in/@nullFlavor"/>
			<xsl:variable name="root_1046" select="$main.Id_subset_s31_in/@root"/>
			<xsl:variable name="extension_1047" select="$main.Id_subset_s31_in/@extension"/>
			<xsl:if test="string($nullFlavor_1045)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1045"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1046)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1046"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1047)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1047"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template name="assignedAuthoringDevice_151">
		<xsl:param name="main.AuthorTextSectionDevice_in"/>
		<assignedAuthoringDevice>
			<xsl:variable name="v_1048" select="'DEV'"/>
			<xsl:variable name="v_1052" select="$main.AuthorTextSectionDevice_in/oms:devName"/>
			<xsl:variable name="main.DevName_subset_s0_in_s0" select="$v_1052/self::node()"/>
			<xsl:variable name="v_1054" select="$main.AuthorTextSectionDevice_in/oms:softName"/>
			<xsl:variable name="main.SoftName_subset_s0_in_s0" select="$v_1054/self::node()"/>
			<xsl:if test="string($v_1048)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1048"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1049" select="'INSTANCE'"/>
			<xsl:if test="string($v_1049)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_1049"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_152"/>
			<xsl:apply-templates mode="main_m294" select="$main.DevName_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m295" select="$main.SoftName_subset_s0_in_s0"/>
		</assignedAuthoringDevice>
	</xsl:template>
	<xsl:template name="templateId_152">
		<templateId>
			<xsl:variable name="v_1050" select="'COCD_TP145207GB01#assignedAuthoringDevice'"/>
			<xsl:if test="string($v_1050)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1050"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1051" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1051)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1051"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:devName" mode="main_m294">
		<xsl:variable name="main.DevName_subset_s0_in" select="."/>
		<manufacturerModelName>
			<xsl:variable name="textConten_1053" select="$main.DevName_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_1053"/>
		</manufacturerModelName>
	</xsl:template>
	<xsl:template match="oms:softName" mode="main_m295">
		<xsl:variable name="main.SoftName_subset_s0_in" select="."/>
		<softwareName>
			<xsl:variable name="textConten_1055" select="$main.SoftName_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_1055"/>
		</softwareName>
	</xsl:template>
	<xsl:template name="representedOrganization_153">
		<xsl:param name="main.AuthorTextSectionDevice_in"/>
		<representedOrganization>
			<xsl:variable name="v_1056" select="'ORG'"/>
			<xsl:variable name="v_1060" select="$main.AuthorTextSectionDevice_in/oms:orgId"/>
			<xsl:variable name="main.OrgId_subset_s18_in_s18" select="$v_1060/self::node()"/>
			<xsl:variable name="v_1064" select="$main.AuthorTextSectionDevice_in/oms:orgName"/>
			<xsl:variable name="main.OrgName_subset_s18_in_s18" select="$v_1064/self::node()"/>
			<xsl:if test="string($v_1056)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1056"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1057" select="'INSTANCE'"/>
			<xsl:if test="string($v_1057)">
				<xsl:attribute name="determinerCode">
					<xsl:value-of select="$v_1057"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_154"/>
			<xsl:apply-templates mode="main_m296" select="$main.OrgId_subset_s18_in_s18"/>
			<xsl:apply-templates mode="main_m297" select="$main.OrgName_subset_s18_in_s18"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template name="templateId_154">
		<templateId>
			<xsl:variable name="v_1058" select="'COCD_TP145207GB01#representedOrganization'"/>
			<xsl:if test="string($v_1058)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1058"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1059" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1059)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1059"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:orgId" mode="main_m296">
		<xsl:variable name="main.OrgId_subset_s18_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1061" select="$main.OrgId_subset_s18_in/@nullFlavor"/>
			<xsl:variable name="root_1062" select="$main.OrgId_subset_s18_in/@root"/>
			<xsl:variable name="extension_1063" select="$main.OrgId_subset_s18_in/@extension"/>
			<xsl:if test="string($nullFlavor_1061)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1061"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1062)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1062"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1063)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1063"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:orgName" mode="main_m297">
		<xsl:variable name="main.OrgName_subset_s18_in" select="."/>
		<name>
			<xsl:variable name="textConten_1065" select="$main.OrgName_subset_s18_in/self::node()"/>
			<xsl:value-of select="$textConten_1065"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:component1" mode="main_m298">
		<xsl:variable name="main.Component1_in" select="."/>
		<component1>
			<xsl:variable name="v_1067" select="'COMP'"/>
			<xsl:variable name="v_1071" select="$main.Component1_in/oms:section2"/>
			<xsl:variable name="main.Section2_in" select="$v_1071/self::node()"/>
			<xsl:if test="string($v_1067)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_1067"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1068" select="'true'"/>
			<xsl:if test="string($v_1068)">
				<xsl:attribute name="contextConductionInd">
					<xsl:value-of select="$v_1068"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_155"/>
			<xsl:apply-templates mode="main_m299" select="$main.Section2_in"/>
		</component1>
	</xsl:template>
	<xsl:template name="templateId_155">
		<templateId>
			<xsl:variable name="v_1069" select="'COCD_TP146229GB01#component1'"/>
			<xsl:if test="string($v_1069)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1069"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1070" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1070)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1070"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:section2" mode="main_m299">
		<xsl:variable name="main.Section2_in" select="."/>
		<section2>
			<xsl:variable name="v_1072" select="'DOCSECT'"/>
			<xsl:variable name="v_1076" select="$main.Section2_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s23_in_s23" select="$v_1076/self::node()"/>
			<xsl:variable name="v_1080" select="$main.Section2_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s1_in_s1" select="$v_1080/self::node()"/>
			<xsl:variable name="v_1082" select="$main.Section2_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s1_in_s1" select="$v_1082/self::node()"/>
			<xsl:variable name="v_1084" select="$main.Section2_in/oms:component2"/>
			<xsl:variable name="main.Component2_in" select="$v_1084/self::node()"/>
			<xsl:if test="string($v_1072)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1072"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1073" select="'EVN'"/>
			<xsl:if test="string($v_1073)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_1073"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_156"/>
			<xsl:apply-templates mode="main_m300" select="$main.Id_subset_s23_in_s23"/>
			<xsl:apply-templates mode="main_m301" select="$main.Title_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m302" select="$main.Text_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m303" select="$main.Component2_in"/>
		</section2>
	</xsl:template>
	<xsl:template name="templateId_156">
		<templateId>
			<xsl:variable name="v_1074" select="'COCD_TP146229GB01#section2'"/>
			<xsl:if test="string($v_1074)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1074"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1075" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1075)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1075"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m300">
		<xsl:variable name="main.Id_subset_s23_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1077" select="$main.Id_subset_s23_in/@nullFlavor"/>
			<xsl:variable name="root_1078" select="$main.Id_subset_s23_in/@root"/>
			<xsl:variable name="extension_1079" select="$main.Id_subset_s23_in/@extension"/>
			<xsl:if test="string($nullFlavor_1077)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1077"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1078)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1078"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1079)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1079"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m301">
		<xsl:variable name="main.Title_subset_s1_in" select="."/>
		<title>
			<xsl:variable name="textConten_1081" select="$main.Title_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_1081"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m302">
		<xsl:variable name="main.Text_subset_s1_in" select="."/>
		<text>
			<xsl:variable name="textConten_1083" select="$main.Text_subset_s1_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:component2" mode="main_m303">
		<xsl:variable name="main.Component2_in" select="."/>
		<component2>
			<xsl:variable name="v_1085" select="'COMP'"/>
			<xsl:variable name="v_1089" select="$main.Component2_in/oms:section3"/>
			<xsl:variable name="main.Section3_in" select="$v_1089/self::node()"/>
			<xsl:if test="string($v_1085)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_1085"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1086" select="'true'"/>
			<xsl:if test="string($v_1086)">
				<xsl:attribute name="contextConductionInd">
					<xsl:value-of select="$v_1086"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_157"/>
			<xsl:apply-templates mode="main_m304" select="$main.Section3_in"/>
		</component2>
	</xsl:template>
	<xsl:template name="templateId_157">
		<templateId>
			<xsl:variable name="v_1087" select="'COCD_TP146229GB01#component2'"/>
			<xsl:if test="string($v_1087)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1087"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1088" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1088)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1088"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:section3" mode="main_m304">
		<xsl:variable name="main.Section3_in" select="."/>
		<section3>
			<xsl:variable name="v_1090" select="'DOCSECT'"/>
			<xsl:variable name="v_1094" select="$main.Section3_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s24_in_s24" select="$v_1094/self::node()"/>
			<xsl:variable name="v_1098" select="$main.Section3_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s2_in_s2" select="$v_1098/self::node()"/>
			<xsl:variable name="v_1100" select="$main.Section3_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s2_in_s2" select="$v_1100/self::node()"/>
			<xsl:variable name="v_1102" select="$main.Section3_in/oms:component3"/>
			<xsl:variable name="main.Component3_in" select="$v_1102/self::node()"/>
			<xsl:if test="string($v_1090)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1090"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1091" select="'EVN'"/>
			<xsl:if test="string($v_1091)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_1091"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_158"/>
			<xsl:apply-templates mode="main_m305" select="$main.Id_subset_s24_in_s24"/>
			<xsl:apply-templates mode="main_m306" select="$main.Title_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m307" select="$main.Text_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m308" select="$main.Component3_in"/>
		</section3>
	</xsl:template>
	<xsl:template name="templateId_158">
		<templateId>
			<xsl:variable name="v_1092" select="'COCD_TP146229GB01#section3'"/>
			<xsl:if test="string($v_1092)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1092"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1093" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1093)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1093"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m305">
		<xsl:variable name="main.Id_subset_s24_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1095" select="$main.Id_subset_s24_in/@nullFlavor"/>
			<xsl:variable name="root_1096" select="$main.Id_subset_s24_in/@root"/>
			<xsl:variable name="extension_1097" select="$main.Id_subset_s24_in/@extension"/>
			<xsl:if test="string($nullFlavor_1095)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1095"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1096)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1096"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1097)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1097"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m306">
		<xsl:variable name="main.Title_subset_s2_in" select="."/>
		<title>
			<xsl:variable name="textConten_1099" select="$main.Title_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_1099"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m307">
		<xsl:variable name="main.Text_subset_s2_in" select="."/>
		<text>
			<xsl:variable name="textConten_1101" select="$main.Text_subset_s2_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:component3" mode="main_m308">
		<xsl:variable name="main.Component3_in" select="."/>
		<component3>
			<xsl:variable name="v_1103" select="'COMP'"/>
			<xsl:variable name="v_1107" select="$main.Component3_in/oms:section4"/>
			<xsl:variable name="main.Section4_in" select="$v_1107/self::node()"/>
			<xsl:if test="string($v_1103)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_1103"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1104" select="'true'"/>
			<xsl:if test="string($v_1104)">
				<xsl:attribute name="contextConductionInd">
					<xsl:value-of select="$v_1104"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_159"/>
			<xsl:apply-templates mode="main_m309" select="$main.Section4_in"/>
		</component3>
	</xsl:template>
	<xsl:template name="templateId_159">
		<templateId>
			<xsl:variable name="v_1105" select="'COCD_TP146229GB01#component3'"/>
			<xsl:if test="string($v_1105)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1105"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1106" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1106)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1106"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:section4" mode="main_m309">
		<xsl:variable name="main.Section4_in" select="."/>
		<section4>
			<xsl:variable name="v_1108" select="'DOCSECT'"/>
			<xsl:variable name="v_1112" select="$main.Section4_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s25_in_s25" select="$v_1112/self::node()"/>
			<xsl:variable name="v_1116" select="$main.Section4_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s3_in_s3" select="$v_1116/self::node()"/>
			<xsl:variable name="v_1118" select="$main.Section4_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s3_in_s3" select="$v_1118/self::node()"/>
			<xsl:variable name="v_1120" select="$main.Section4_in/oms:component4"/>
			<xsl:variable name="main.Component4_in" select="$v_1120/self::node()"/>
			<xsl:if test="string($v_1108)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1108"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1109" select="'EVN'"/>
			<xsl:if test="string($v_1109)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_1109"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_160"/>
			<xsl:apply-templates mode="main_m310" select="$main.Id_subset_s25_in_s25"/>
			<xsl:apply-templates mode="main_m311" select="$main.Title_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m312" select="$main.Text_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m313" select="$main.Component4_in"/>
		</section4>
	</xsl:template>
	<xsl:template name="templateId_160">
		<templateId>
			<xsl:variable name="v_1110" select="'COCD_TP146229GB01#section4'"/>
			<xsl:if test="string($v_1110)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1110"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1111" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1111)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1111"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m310">
		<xsl:variable name="main.Id_subset_s25_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1113" select="$main.Id_subset_s25_in/@nullFlavor"/>
			<xsl:variable name="root_1114" select="$main.Id_subset_s25_in/@root"/>
			<xsl:variable name="extension_1115" select="$main.Id_subset_s25_in/@extension"/>
			<xsl:if test="string($nullFlavor_1113)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1113"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1114)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1114"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1115)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1115"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m311">
		<xsl:variable name="main.Title_subset_s3_in" select="."/>
		<title>
			<xsl:variable name="textConten_1117" select="$main.Title_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_1117"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m312">
		<xsl:variable name="main.Text_subset_s3_in" select="."/>
		<text>
			<xsl:variable name="textConten_1119" select="$main.Text_subset_s3_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:component4" mode="main_m313">
		<xsl:variable name="main.Component4_in" select="."/>
		<component4>
			<xsl:variable name="v_1121" select="'COMP'"/>
			<xsl:variable name="v_1125" select="$main.Component4_in/oms:section5"/>
			<xsl:variable name="main.Section5_in" select="$v_1125/self::node()"/>
			<xsl:if test="string($v_1121)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_1121"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1122" select="'true'"/>
			<xsl:if test="string($v_1122)">
				<xsl:attribute name="contextConductionInd">
					<xsl:value-of select="$v_1122"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_161"/>
			<xsl:apply-templates mode="main_m314" select="$main.Section5_in"/>
		</component4>
	</xsl:template>
	<xsl:template name="templateId_161">
		<templateId>
			<xsl:variable name="v_1123" select="'COCD_TP146229GB01#component4'"/>
			<xsl:if test="string($v_1123)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1123"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1124" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1124)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1124"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:section5" mode="main_m314">
		<xsl:variable name="main.Section5_in" select="."/>
		<section5>
			<xsl:variable name="v_1126" select="'DOCSECT'"/>
			<xsl:variable name="v_1130" select="$main.Section5_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s26_in_s26" select="$v_1130/self::node()"/>
			<xsl:variable name="v_1134" select="$main.Section5_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s4_in_s4" select="$v_1134/self::node()"/>
			<xsl:variable name="v_1136" select="$main.Section5_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s4_in_s4" select="$v_1136/self::node()"/>
			<xsl:variable name="v_1138" select="$main.Section5_in/oms:component5"/>
			<xsl:variable name="main.Component5_in" select="$v_1138/self::node()"/>
			<xsl:if test="string($v_1126)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1126"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1127" select="'EVN'"/>
			<xsl:if test="string($v_1127)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_1127"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_162"/>
			<xsl:apply-templates mode="main_m315" select="$main.Id_subset_s26_in_s26"/>
			<xsl:apply-templates mode="main_m316" select="$main.Title_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m317" select="$main.Text_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m318" select="$main.Component5_in"/>
		</section5>
	</xsl:template>
	<xsl:template name="templateId_162">
		<templateId>
			<xsl:variable name="v_1128" select="'COCD_TP146229GB01#section5'"/>
			<xsl:if test="string($v_1128)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1128"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1129" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1129)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1129"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m315">
		<xsl:variable name="main.Id_subset_s26_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1131" select="$main.Id_subset_s26_in/@nullFlavor"/>
			<xsl:variable name="root_1132" select="$main.Id_subset_s26_in/@root"/>
			<xsl:variable name="extension_1133" select="$main.Id_subset_s26_in/@extension"/>
			<xsl:if test="string($nullFlavor_1131)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1131"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1132)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1132"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1133)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1133"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m316">
		<xsl:variable name="main.Title_subset_s4_in" select="."/>
		<title>
			<xsl:variable name="textConten_1135" select="$main.Title_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_1135"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m317">
		<xsl:variable name="main.Text_subset_s4_in" select="."/>
		<text>
			<xsl:variable name="textConten_1137" select="$main.Text_subset_s4_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:component5" mode="main_m318">
		<xsl:variable name="main.Component5_in" select="."/>
		<component5>
			<xsl:variable name="v_1139" select="'COMP'"/>
			<xsl:variable name="v_1143" select="$main.Component5_in/oms:section6"/>
			<xsl:variable name="main.Section6_in" select="$v_1143/self::node()"/>
			<xsl:if test="string($v_1139)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$v_1139"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1140" select="'true'"/>
			<xsl:if test="string($v_1140)">
				<xsl:attribute name="contextConductionInd">
					<xsl:value-of select="$v_1140"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_163"/>
			<xsl:apply-templates mode="main_m319" select="$main.Section6_in"/>
		</component5>
	</xsl:template>
	<xsl:template name="templateId_163">
		<templateId>
			<xsl:variable name="v_1141" select="'COCD_TP146229GB01#component5'"/>
			<xsl:if test="string($v_1141)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1141"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1142" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1142)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1142"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:section6" mode="main_m319">
		<xsl:variable name="main.Section6_in" select="."/>
		<section6>
			<xsl:variable name="v_1144" select="'DOCSECT'"/>
			<xsl:variable name="v_1148" select="$main.Section6_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s27_in_s27" select="$v_1148/self::node()"/>
			<xsl:variable name="v_1152" select="$main.Section6_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s5_in_s5" select="$v_1152/self::node()"/>
			<xsl:variable name="v_1154" select="$main.Section6_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s5_in_s5" select="$v_1154/self::node()"/>
			<xsl:if test="string($v_1144)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1144"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1145" select="'EVN'"/>
			<xsl:if test="string($v_1145)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_1145"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:call-template name="templateId_164"/>
			<xsl:apply-templates mode="main_m320" select="$main.Id_subset_s27_in_s27"/>
			<xsl:apply-templates mode="main_m321" select="$main.Title_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m322" select="$main.Text_subset_s5_in_s5"/>
		</section6>
	</xsl:template>
	<xsl:template name="templateId_164">
		<templateId>
			<xsl:variable name="v_1146" select="'COCD_TP146229GB01#section6'"/>
			<xsl:if test="string($v_1146)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$v_1146"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1147" select="'2.16.840.1.113883.2.1.3.2.4.18.2'"/>
			<xsl:if test="string($v_1147)">
				<xsl:attribute name="root">
					<xsl:value-of select="$v_1147"/>
				</xsl:attribute>
			</xsl:if>
		</templateId>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m320">
		<xsl:variable name="main.Id_subset_s27_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_1149" select="$main.Id_subset_s27_in/@nullFlavor"/>
			<xsl:variable name="root_1150" select="$main.Id_subset_s27_in/@root"/>
			<xsl:variable name="extension_1151" select="$main.Id_subset_s27_in/@extension"/>
			<xsl:if test="string($nullFlavor_1149)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_1149"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_1150)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_1150"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_1151)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_1151"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m321">
		<xsl:variable name="main.Title_subset_s5_in" select="."/>
		<title>
			<xsl:variable name="textConten_1153" select="$main.Title_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_1153"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m322">
		<xsl:variable name="main.Text_subset_s5_in" select="."/>
		<text>
			<xsl:variable name="textConten_1155" select="$main.Text_subset_s5_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:nonXMLBody" mode="main_m323">
		<xsl:variable name="main.NonXMLBody_in" select="."/>
		<bodyChoiceNonXMLBody>
			<xsl:variable name="v_1157" select="'DOCBODY'"/>
			<xsl:variable name="v_1159" select="$main.NonXMLBody_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s6_in_s6" select="$v_1159/self::node()"/>
			<xsl:if test="string($v_1157)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$v_1157"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:variable name="v_1158" select="'EVN'"/>
			<xsl:if test="string($v_1158)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$v_1158"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m324" select="$main.Text_subset_s6_in_s6"/>
		</bodyChoiceNonXMLBody>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m324">
		<xsl:variable name="main.Text_subset_s6_in" select="."/>
		<text>
			<xsl:variable name="representa_1160" select="$main.Text_subset_s6_in/@representation"/>
			<xsl:variable name="mediaType_1161" select="$main.Text_subset_s6_in/@mediaType"/>
			<xsl:variable name="textConten_1162" select="$main.Text_subset_s6_in/self::node()"/>
			<xsl:if test="string($representa_1160)">
				<xsl:attribute name="representation">
					<xsl:value-of select="$representa_1160"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($mediaType_1161)">
				<xsl:attribute name="mediaType">
					<xsl:value-of select="$mediaType_1161"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:variable name="inWrapper_result">
		<xsl:apply-templates mode="inWrapper"/>
	</xsl:variable>
	<xsl:template match="*" mode="inWrapper">
		<xsl:copy>
			<xsl:copy-of select="@*"/>
			<xsl:apply-templates mode="inWrapper"/>
		</xsl:copy>
	</xsl:template>
	<xsl:variable name="main_result">
		<xsl:apply-templates mode="main" select="$inWrapper_result"/>
	</xsl:variable>
	<xsl:template match="/">
		<xsl:apply-templates mode="outWrapper" select="$main_result"/>
	</xsl:template>
	<xsl:template match="@*|node()" mode="copy">
		<xsl:copy>
			<xsl:apply-templates mode="copy" select="@*|node()"/>
		</xsl:copy>
	</xsl:template>
	<xsl:template match="*" mode="outWrapper">
		<xsl:param name="path"/>
		<xsl:variable name="newPath" select="concat($path,'/',local-name(.))"/>
		<xsl:copy>
			<xsl:copy-of select="@*"/>
			<xsl:apply-templates mode="outWrapper">
				<xsl:with-param name="path" select="$newPath"/>
			</xsl:apply-templates>
		</xsl:copy>
	</xsl:template>
	<xsl:template match="v3:recordTarget_PatientRole_Univ" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','recordTarget_PatientRole_Univ')"/>
				<recordTarget>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145201GB01#PatientRole" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</recordTarget>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145201GB01.PatientRole_Univ" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/recordTarget_PatientRole_Univ'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145201GB01.PatientRole_Univ')"/>
				<patientRole>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</patientRole>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:patientPatient" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/recordTarget_PatientRole_Univ/COCD_TP145201GB01.PatientRole_Univ'">
				<xsl:variable name="newPath" select="concat($path,'/','patientPatient')"/>
				<patient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</patient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author_AssignedAuthor_Person" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','author_AssignedAuthor_Person')"/>
				<author>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145200GB01#AssignedAuthor" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145200GB01.AssignedAuthor_Person" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145200GB01.AssignedAuthor_Person')"/>
				<assignedAuthor>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedAuthor>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedPerson" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthor_Person/COCD_TP145200GB01.AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/author_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/dataEnterer_AssignedEntity/COCD_TP145205GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informant_AssignedEntity/COCD_TP145210GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Person/COCD_TP145202GB01.IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_WorkGp/COCD_TP145204GB02.IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Person/COCD_TP145202GB01.IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_WorkGp/COCD_TP145204GB02.IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/authenticator_AssignedEntity/COCD_TP145205GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_AssignedEntity/COCD_TP145210GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/responsibleParty_AssignedEntity/COCD_TP145210GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/responsibleParty_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_AssignedEntity/COCD_TP145210GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Person/COCD_TP145200GB01.AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:representedOrganization" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthor_Person/COCD_TP145200GB01.AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthor_Anon/COCD_TP145208GB01.AssignedAuthor_Anon'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/author_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthorDevice/COCD_TP145207GB01.AssignedAuthorDevice'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/dataEnterer_AssignedEntity/COCD_TP145205GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informant_AssignedEntity/COCD_TP145210GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Person/COCD_TP145202GB01.IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<receivedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</receivedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Org/COCD_TP145203GB02.IntendedRecipient_Org'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<receivedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</receivedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_WorkGp/COCD_TP145204GB02.IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<receivedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</receivedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Person/COCD_TP145202GB01.IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<receivedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</receivedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Org/COCD_TP145203GB02.IntendedRecipient_Org'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<receivedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</receivedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_WorkGp/COCD_TP145204GB02.IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<receivedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</receivedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/authenticator_AssignedEntity/COCD_TP145205GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_AssignedEntity/COCD_TP145210GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/responsibleParty_AssignedEntity/COCD_TP145210GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/responsibleParty_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_AssignedEntity/COCD_TP145210GB01.AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Person/COCD_TP145200GB01.AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Anon/COCD_TP145208GB01.AssignedAuthor_Anon'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_Workgroup/COCD_TP145212GB02.Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthorDevice/COCD_TP145207GB01.AssignedAuthorDevice'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author_AssignedAuthor_Anon" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','author_AssignedAuthor_Anon')"/>
				<author>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145208GB01#AssignedAuthor" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145208GB01.AssignedAuthor_Anon" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthor_Anon'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145208GB01.AssignedAuthor_Anon')"/>
				<assignedAuthor>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedAuthor>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author_Workgroup" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','author_Workgroup')"/>
				<author>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145212GB02#Workgroup" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145212GB02.Workgroup" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/author_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<assignedAuthor>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedAuthor>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author_AssignedAuthorDevice" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','author_AssignedAuthorDevice')"/>
				<author>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145207GB01#AssignedAuthorDevice" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145207GB01.AssignedAuthorDevice" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthorDevice'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145207GB01.AssignedAuthorDevice')"/>
				<assignedAuthor>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedAuthor>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:dataEnterer_AssignedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','dataEnterer_AssignedEntity')"/>
				<dataEnterer>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145205GB01#AssignedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</dataEnterer>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145205GB01.AssignedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/dataEnterer_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145205GB01.AssignedEntity')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/authenticator_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145205GB01.AssignedEntity')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informant_RelatedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informant_RelatedEntity')"/>
				<informant>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145007UK03#RelatedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informant>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145007UK03.RelatedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informant_RelatedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145007UK03.RelatedEntity')"/>
				<relatedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</relatedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:relationshipHolder" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informant_RelatedEntity/COCD_TP145007UK03.RelatedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','relationshipHolder')"/>
				<relatedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</relatedPerson>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informant_AssignedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informant_AssignedEntity')"/>
				<informant>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145210GB01#AssignedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informant>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145210GB01.AssignedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informant_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145210GB01.AssignedEntity')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:custodian_AssignedCustodian" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','custodian_AssignedCustodian')"/>
				<custodian>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145018UK03#AssignedCustodian" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</custodian>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145018UK03.AssignedCustodian" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/custodian_AssignedCustodian'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145018UK03.AssignedCustodian')"/>
				<assignedCustodian>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedCustodian>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient_IntendedRecipient_Person" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informationRecipient_IntendedRecipient_Person')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145202GB01#IntendedRecipient" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145202GB01.IntendedRecipient_Person" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145202GB01.IntendedRecipient_Person')"/>
				<intendedRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</intendedRecipient>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145202GB01.IntendedRecipient_Person')"/>
				<intendedRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</intendedRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient_IntendedRecipient_Org" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informationRecipient_IntendedRecipient_Org')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145203GB02#IntendedRecipient" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145203GB02.IntendedRecipient_Org" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Org'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145203GB02.IntendedRecipient_Org')"/>
				<intendedRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</intendedRecipient>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Org'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145203GB02.IntendedRecipient_Org')"/>
				<intendedRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</intendedRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient_IntendedRecipient_WorkGp" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informationRecipient_IntendedRecipient_WorkGp')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145204GB02#RecipientWorkgroup" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145204GB02.IntendedRecipient_WorkGp" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145204GB02.IntendedRecipient_WorkGp')"/>
				<intendedRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</intendedRecipient>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145204GB02.IntendedRecipient_WorkGp')"/>
				<intendedRecipient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</intendedRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:tracker_IntendedRecipient_Person" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','tracker_IntendedRecipient_Person')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145202GB01#IntendedRecipient" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:tracker_IntendedRecipient_Org" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','tracker_IntendedRecipient_Org')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145203GB02#IntendedRecipient" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:tracker_IntendedRecipient_WorkGp" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','tracker_IntendedRecipient_WorkGp')"/>
				<informationRecipient>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145204GB02#RecipientWorkgroup" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:authenticator_AssignedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','authenticator_AssignedEntity')"/>
				<authenticator>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145205GB01#AssignedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</authenticator>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:participant_AssociatedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','participant_AssociatedEntity')"/>
				<participant>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP145214GB01#AssociatedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</participant>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145214GB01.AssociatedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/participant_AssociatedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145214GB01.AssociatedEntity')"/>
				<associatedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</associatedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:documentationOf_ServiceEvent" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','documentationOf_ServiceEvent')"/>
				<documentationOf>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP146227GB01#ServiceEvent" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</documentationOf>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP146227GB01.ServiceEvent" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP146227GB01.ServiceEvent')"/>
				<serviceEvent>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</serviceEvent>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:performer_AssignedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent'">
				<xsl:variable name="newPath" select="concat($path,'/','performer_AssignedEntity')"/>
				<performer>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146227GB01#performer" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145210GB01#AssignedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</performer>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:time" mode="outWrapper_1" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','time')"/>
				<time>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</time>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','time')"/>
				<time>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</time>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','time')"/>
				<time>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</time>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','time')"/>
				<time>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</time>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Anon'">
				<xsl:variable name="newPath" select="concat($path,'/','time')"/>
				<time>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</time>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','time')"/>
				<time>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</time>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthorDevice'">
				<xsl:variable name="newPath" select="concat($path,'/','time')"/>
				<time>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</time>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145210GB01.AssignedEntity" mode="outWrapper_1" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145210GB01.AssignedEntity')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/responsibleParty_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145210GB01.AssignedEntity')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145210GB01.AssignedEntity')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:performer_Workgroup" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent'">
				<xsl:variable name="newPath" select="concat($path,'/','performer_Workgroup')"/>
				<performer>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146227GB01#performer" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145212GB02#Workgroup" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</performer>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145212GB02.Workgroup" mode="outWrapper_1" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/responsibleParty_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<assignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<assignedAuthor>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedAuthor>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:authorization_Consent" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','authorization_Consent')"/>
				<authorization>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP146226GB01#Consent" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</authorization>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP146226GB01.Consent" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/authorization_Consent'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP146226GB01.Consent')"/>
				<consent>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</consent>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:componentOf_EncompassingEncounter" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','componentOf_EncompassingEncounter')"/>
				<componentOf>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP146228GB01#EncompassingEncounter" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</componentOf>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP146228GB01.EncompassingEncounter" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP146228GB01.EncompassingEncounter')"/>
				<encompassingEncounter>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</encompassingEncounter>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:responsibleParty_AssignedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','responsibleParty_AssignedEntity')"/>
				<responsibleParty>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146228GB01#responsibleParty" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145210GB01#AssignedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</responsibleParty>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:responsibleParty_Workgroup" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','responsibleParty_Workgroup')"/>
				<responsibleParty>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146228GB01#responsibleParty" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145212GB02#Workgroup" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</responsibleParty>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:encounterParticipant_AssignedEntity" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','encounterParticipant_AssignedEntity')"/>
				<encounterParticipant>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146228GB01#encounterParticipant" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145210GB01#AssignedEntity" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</encounterParticipant>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:encounterParticipant_Workgroup" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','encounterParticipant_Workgroup')"/>
				<encounterParticipant>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146228GB01#encounterParticipant" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145212GB02#Workgroup" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</encounterParticipant>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:location_HealthCareFacility_Univ" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','location_HealthCareFacility_Univ')"/>
				<location>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146228GB01#location" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145211GB01#HealthCareFacility" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</location>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145211GB01.HealthCareFacility_Univ" mode="outWrapper_1" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/location_HealthCareFacility_Univ'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145211GB01.HealthCareFacility_Univ')"/>
				<healthCareFacility>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</healthCareFacility>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:bodyChoiceStructuredBody" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component'">
				<xsl:variable name="newPath" select="concat($path,'/','bodyChoiceStructuredBody')"/>
				<structuredBody>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</structuredBody>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:classificationSection" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component'">
				<xsl:variable name="newPath" select="concat($path,'/','classificationSection')"/>
				<section>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component_Section1" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection'">
				<xsl:variable name="newPath" select="concat($path,'/','component_Section1')"/>
				<component>
					<xsl:copy-of select="@*"/>
					<npfitlc:contentId extension="COCD_TP146229GB01#Section1" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP146229GB01.Section1" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP146229GB01.Section1')"/>
				<section>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:authorTextSection_AssignedAuthor_Person" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','authorTextSection_AssignedAuthor_Person')"/>
				<author>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146229GB01#author" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145200GB01#AssignedAuthor" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:functionCode" mode="outWrapper_1" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','functionCode')"/>
				<functionCode>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</functionCode>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Anon'">
				<xsl:variable name="newPath" select="concat($path,'/','functionCode')"/>
				<functionCode>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</functionCode>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','functionCode')"/>
				<functionCode>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</functionCode>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthorDevice'">
				<xsl:variable name="newPath" select="concat($path,'/','functionCode')"/>
				<functionCode>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</functionCode>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145200GB01.AssignedAuthor_Person" mode="outWrapper_1" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145200GB01.AssignedAuthor_Person')"/>
				<assignedAuthor>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedAuthor>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:authorTextSection_AssignedAuthor_Anon" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','authorTextSection_AssignedAuthor_Anon')"/>
				<author>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146229GB01#author" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145208GB01#AssignedAuthor" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145208GB01.AssignedAuthor_Anon" mode="outWrapper_1" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Anon'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145208GB01.AssignedAuthor_Anon')"/>
				<assignedAuthor>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedAuthor>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:authorTextSection_Workgroup" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','authorTextSection_Workgroup')"/>
				<author>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146229GB01#author" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145212GB02#Workgroup" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:authorTextSection_AssignedAuthorDevice" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','authorTextSection_AssignedAuthorDevice')"/>
				<author>
					<xsl:copy-of select="@*"/>
					<templateId extension="COCD_TP146229GB01#author" root="2.16.840.1.113883.2.1.3.2.4.18.2"/>
					<npfitlc:contentId extension="COCD_TP145207GB01#AssignedAuthorDevice" root="2.16.840.1.113883.2.1.3.2.4.18.16"/>
					<xsl:apply-templates mode="outWrapper_1">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:COCD_TP145207GB01.AssignedAuthorDevice" mode="outWrapper_1" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthorDevice'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145207GB01.AssignedAuthorDevice')"/>
				<assignedAuthor>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedAuthor>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component1" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','component1')"/>
				<component>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:section2" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1'">
				<xsl:variable name="newPath" select="concat($path,'/','section2')"/>
				<section>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component2" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2'">
				<xsl:variable name="newPath" select="concat($path,'/','component2')"/>
				<component>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:section3" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2'">
				<xsl:variable name="newPath" select="concat($path,'/','section3')"/>
				<section>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component3" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3'">
				<xsl:variable name="newPath" select="concat($path,'/','component3')"/>
				<component>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:section4" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3'">
				<xsl:variable name="newPath" select="concat($path,'/','section4')"/>
				<section>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component4" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3/section4'">
				<xsl:variable name="newPath" select="concat($path,'/','component4')"/>
				<component>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:section5" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3/section4/component4'">
				<xsl:variable name="newPath" select="concat($path,'/','section5')"/>
				<section>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component5" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3/section4/component4/section5'">
				<xsl:variable name="newPath" select="concat($path,'/','component5')"/>
				<component>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:section6" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3/section4/component4/section5/component5'">
				<xsl:variable name="newPath" select="concat($path,'/','section6')"/>
				<section>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:bodyChoiceNonXMLBody" mode="outWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component'">
				<xsl:variable name="newPath" select="concat($path,'/','bodyChoiceNonXMLBody')"/>
				<nonXMLBody>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="outWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</nonXMLBody>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>