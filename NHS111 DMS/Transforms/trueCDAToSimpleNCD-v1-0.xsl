<?xml version="1.0" encoding="UTF-8" standalone="no"?><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="urn:hl7-org:v3" xmlns:npfitlc="NPFIT:HL7:Localisation" xmlns:oms="urn:hl7-org:v3" xmlns:v3="urn:hl7-org:v3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0">
	<xsl:output indent="yes" method="xml"/>
	<!-- edited with XMLSpy v2011 rel. 2 sp1 (http://www.altova.com) by Prashant Trivedi (NHS Connecting for Health) -->
	<!--  This stylesheet was generated by the Open Mapping Tools, from Open Mapping Software Ltd., www.OpenMapSW.com.  -->
	<xsl:template match="/oms:ClinicalDocument" mode="main">
		<xsl:variable name="v_1" select="/oms:ClinicalDocument[(@classCode = 'DOCCLIN') and (@moodCode = 'EVN') and (npfitlc:messageType/@extension = 'POCD_MT010011GB01') and (npfitlc:messageType/@root = '2.16.840.1.113883.2.1.3.2.4.18.17') and (oms:componentOf_EncompassingEncounter/@typeCode = 'COMP') and (oms:component/@typeCode = 'COMP') and (oms:component/@contextConductionInd = 'true') and (oms:typeId/@extension = 'POCD_HD000040') and (oms:typeId/@root = '2.16.840.1.113883.1.3')]"/>
		<xsl:apply-templates mode="main_m1" select="$v_1"/>
	</xsl:template>
	<xsl:template match="oms:ClinicalDocument" mode="main_m1">
		<xsl:variable name="main.ClinicalDocument_in" select="."/>
		<ClinicalDocument>
			<xsl:variable name="v_2" select="$main.ClinicalDocument_in/oms:id"/>
			<xsl:variable name="main.Id_in" select="$v_2/self::node()"/>
			<xsl:variable name="v_4" select="$main.ClinicalDocument_in/oms:code"/>
			<xsl:variable name="main.Code_in" select="$v_4/self::node()"/>
			<xsl:variable name="v_7" select="$main.ClinicalDocument_in/oms:title"/>
			<xsl:variable name="main.Title_in" select="$v_7/self::node()"/>
			<xsl:variable name="v_9" select="$main.ClinicalDocument_in/oms:effectiveTime"/>
			<xsl:variable name="main.EffectiveTime_in" select="$v_9/self::node()"/>
			<xsl:variable name="v_11" select="$main.ClinicalDocument_in/oms:confidentialityCode"/>
			<xsl:variable name="main.ConfidentialityCode_in" select="$v_11/self::node()"/>
			<xsl:variable name="v_15" select="$main.ClinicalDocument_in/oms:setId"/>
			<xsl:variable name="main.SetId_in" select="$v_15/self::node()"/>
			<xsl:variable name="v_17" select="$main.ClinicalDocument_in/oms:versionNumber"/>
			<xsl:variable name="main.VersionNumber_in" select="$v_17/self::node()"/>
			<xsl:variable name="v_19" select="$main.ClinicalDocument_in/oms:recordTarget_PatientRole_Univ"/>
			<xsl:variable name="main.PatientUniversal_in" select="$v_19/self::node()[(@typeCode = 'RCT') and (@contextControlCode = 'OP') and (oms:COCD_TP145201GB01.PatientRole_Univ/@classCode = 'PAT') and (oms:COCD_TP145201GB01.PatientRole_Univ/oms:templateId/@extension = 'COCD_TP145201GB01#PatientRole') and (oms:COCD_TP145201GB01.PatientRole_Univ/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_69" select="$main.ClinicalDocument_in/self::node()"/>
			<xsl:variable name="main.Author_in" select="$v_69/self::node()"/>
			<xsl:variable name="v_147" select="$main.ClinicalDocument_in/oms:dataEnterer_AssignedEntity"/>
			<xsl:variable name="main.DataEnterer_in" select="$v_147/self::node()[(@typeCode = 'ENT') and (@contextControlCode = 'OP') and (oms:COCD_TP145205GB01.AssignedEntity/@classCode = 'ASSIGNED') and (oms:COCD_TP145205GB01.AssignedEntity/oms:templateId/@extension = 'COCD_TP145205GB01#AssignedEntity') and (oms:COCD_TP145205GB01.AssignedEntity/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145205GB01#assignedPerson') and (oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_171" select="$main.ClinicalDocument_in/oms:informant_RelatedEntity"/>
			<xsl:variable name="main.InformantRelatedEntity_in" select="$v_171/self::node()[(@typeCode = 'INF') and (@contextControlCode = 'OP') and (oms:COCD_TP145007UK03.RelatedEntity/@classCode = 'PRS') and (oms:COCD_TP145007UK03.RelatedEntity/oms:templateId/@extension = 'COCD_TP145007UK03#RelatedEntity') and (oms:COCD_TP145007UK03.RelatedEntity/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_184" select="$main.ClinicalDocument_in/oms:informant_AssignedEntity"/>
			<xsl:variable name="main.InformantPersonWithOrg_in" select="$v_184/self::node()[(@typeCode = 'INF') and (@contextControlCode = 'OP') and (oms:COCD_TP145210GB01.AssignedEntity/@classCode = 'ASSIGNED') and (oms:COCD_TP145210GB01.AssignedEntity/oms:templateId/@extension = 'COCD_TP145210GB01#AssignedEntity') and (oms:COCD_TP145210GB01.AssignedEntity/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145210GB01#assignedPerson') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145210GB01#representedOrganization') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_204" select="$main.ClinicalDocument_in/oms:custodian_AssignedCustodian"/>
			<xsl:variable name="main.Custodian_in" select="$v_204/self::node()[(@typeCode = 'CST') and (oms:COCD_TP145018UK03.AssignedCustodian/@classCode = 'ASSIGNED') and (oms:COCD_TP145018UK03.AssignedCustodian/oms:templateId/@extension = 'COCD_TP145018UK03#AssignedCustodian') and (oms:COCD_TP145018UK03.AssignedCustodian/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145018UK03.AssignedCustodian/oms:representedCustodianOrganization/@classCode = 'ORG') and (oms:COCD_TP145018UK03.AssignedCustodian/oms:representedCustodianOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145018UK03.AssignedCustodian/oms:representedCustodianOrganization/oms:templateId/@extension = 'COCD_TP145018UK03#representedCustodianOrganization') and (oms:COCD_TP145018UK03.AssignedCustodian/oms:representedCustodianOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_210" select="$main.ClinicalDocument_in/self::node()"/>
			<xsl:variable name="main.InformationRecipient_in" select="$v_210/self::node()"/>
			<xsl:variable name="v_259" select="$main.ClinicalDocument_in/oms:authenticator_AssignedEntity"/>
			<xsl:variable name="main.Authenticator_in" select="$v_259/self::node()[(@typeCode = 'AUTHEN') and (oms:COCD_TP145205GB01.AssignedEntity/@classCode = 'ASSIGNED') and (oms:COCD_TP145205GB01.AssignedEntity/oms:templateId/@extension = 'COCD_TP145205GB01#AssignedEntity') and (oms:COCD_TP145205GB01.AssignedEntity/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145205GB01#assignedPerson') and (oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_283" select="$main.ClinicalDocument_in/oms:participant_AssociatedEntity"/>
			<xsl:variable name="main.Participant_in" select="$v_283/self::node()[(@contextControlCode = 'OP') and (oms:COCD_TP145214GB01.AssociatedEntity/oms:templateId/@extension = 'COCD_TP145214GB01#AssociatedEntity') and (oms:COCD_TP145214GB01.AssociatedEntity/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_304" select="$main.ClinicalDocument_in/oms:documentationOf_ServiceEvent"/>
			<xsl:variable name="main.DocumentOf_in" select="$v_304/self::node()[(@typeCode = 'DOC') and (oms:COCD_TP146227GB01.ServiceEvent/oms:templateId/@extension = 'COCD_TP146227GB01#ServiceEvent') and (oms:COCD_TP146227GB01.ServiceEvent/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_354" select="$main.ClinicalDocument_in/oms:relatedDocument"/>
			<xsl:variable name="main.RelatedDocument_in" select="$v_354/self::node()[(oms:parentDocument/@classCode = 'DOCCLIN') and (oms:parentDocument/@moodCode = 'EVN')]"/>
			<xsl:variable name="v_371" select="$main.ClinicalDocument_in/oms:authorization_Consent"/>
			<xsl:variable name="main.Authorization_in" select="$v_371/self::node()[(@typeCode = 'AUTH') and (oms:COCD_TP146226GB01.Consent/@classCode = 'CONS') and (oms:COCD_TP146226GB01.Consent/@moodCode = 'EVN') and (oms:COCD_TP146226GB01.Consent/oms:templateId/@extension = 'COCD_TP146226GB01#Consent') and (oms:COCD_TP146226GB01.Consent/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP146226GB01.Consent/oms:statusCode/@code = 'completed')]"/>
			<xsl:variable name="v_376" select="$main.ClinicalDocument_in/oms:componentOf_EncompassingEncounter/oms:COCD_TP146228GB01.EncompassingEncounter"/>
			<xsl:variable name="main.EncompassingEncounter_in" select="$v_376/self::node()[(@classCode = 'ENC') and (@moodCode = 'EVN') and (oms:templateId/@extension = 'COCD_TP146228GB01#EncompassingEncounter') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_483" select="$main.ClinicalDocument_in/oms:component/oms:bodyChoiceStructuredBody"/>
			<xsl:variable name="main.StructuredBody_in" select="$v_483/self::node()[(@classCode = 'DOCBODY') and (@moodCode = 'EVN') and (oms:component/@typeCode = 'COMP') and (oms:component/@contextConductionInd = 'true') and (oms:component/oms:classificationSection/@classCode = 'DOCSECT') and (oms:component/oms:classificationSection/@moodCode = 'EVN')]"/>
			<xsl:variable name="v_622" select="$main.ClinicalDocument_in/oms:component/oms:bodyChoiceNonXMLBody"/>
			<xsl:variable name="main.NonXMLBody_in" select="$v_622/self::node()[(@classCode = 'DOCBODY') and (@moodCode = 'EVN')]"/>
			<xsl:variable name="v_627" select="$main.ClinicalDocument_in/oms:tracker_IntendedRecipient_Person"/>
			<xsl:variable name="main.TrackerPerson_in" select="$v_627/self::node()[(@typeCode = 'TRC') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/@classCode = 'ASSIGNED') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:templateId/@extension = 'COCD_TP145202GB01#IntendedRecipient') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145202GB01#assignedPerson') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145202GB01#representedOrganization') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_645" select="$main.ClinicalDocument_in/oms:tracker_IntendedRecipient_Org"/>
			<xsl:variable name="main.TrackerOrganization_in" select="$v_645/self::node()[(@typeCode = 'TRC') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/@classCode = 'ASSIGNED') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:templateId/@extension = 'COCD_TP145203GB02#IntendedRecipient') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145203GB02#representedOrganization') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_652" select="$main.ClinicalDocument_in/oms:tracker_IntendedRecipient_WorkGp"/>
			<xsl:variable name="main.TrackerWorkgroup_in" select="$v_652/self::node()[(@typeCode = 'TRC') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/@classCode = 'ASSIGNED') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:templateId/@extension = 'COCD_TP145204GB02#RecipientWorkgroup') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145204GB02#representedOrganization') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m2" select="$main.Id_in"/>
			<xsl:apply-templates mode="main_m3" select="$main.Code_in"/>
			<xsl:apply-templates mode="main_m4" select="$main.Title_in"/>
			<xsl:apply-templates mode="main_m5" select="$main.EffectiveTime_in"/>
			<xsl:apply-templates mode="main_m6" select="$main.ConfidentialityCode_in"/>
			<xsl:apply-templates mode="main_m7" select="$main.SetId_in"/>
			<xsl:apply-templates mode="main_m8" select="$main.VersionNumber_in"/>
			<xsl:apply-templates mode="main_m9" select="$main.PatientUniversal_in"/>
			<xsl:apply-templates mode="main_m34" select="$main.Author_in"/>
			<xsl:apply-templates mode="main_m69" select="$main.DataEnterer_in"/>
			<xsl:apply-templates mode="main_m80" select="$main.InformantRelatedEntity_in"/>
			<xsl:apply-templates mode="main_m87" select="$main.InformantPersonWithOrg_in"/>
			<xsl:apply-templates mode="main_m96" select="$main.Custodian_in"/>
			<xsl:apply-templates mode="main_m99" select="$main.InformationRecipient_in"/>
			<xsl:apply-templates mode="main_m121" select="$main.Authenticator_in"/>
			<xsl:apply-templates mode="main_m132" select="$main.Participant_in"/>
			<xsl:apply-templates mode="main_m142" select="$main.DocumentOf_in"/>
			<xsl:apply-templates mode="main_m164" select="$main.RelatedDocument_in"/>
			<xsl:apply-templates mode="main_m170" select="$main.Authorization_in"/>
			<xsl:apply-templates mode="main_m172" select="$main.EncompassingEncounter_in"/>
			<xsl:apply-templates mode="main_m220" select="$main.StructuredBody_in"/>
			<xsl:apply-templates mode="main_m285" select="$main.NonXMLBody_in"/>
			<xsl:apply-templates mode="main_m287" select="$main.TrackerPerson_in"/>
			<xsl:apply-templates mode="main_m295" select="$main.TrackerOrganization_in"/>
			<xsl:apply-templates mode="main_m298" select="$main.TrackerWorkgroup_in"/>
		</ClinicalDocument>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m2">
		<xsl:variable name="main.Id_in" select="."/>
		<id>
			<xsl:variable name="root_3" select="$main.Id_in/@root"/>
			<xsl:if test="string($root_3)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_3"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m3">
		<xsl:variable name="main.Code_in" select="."/>
		<code>
			<xsl:variable name="code_5" select="$main.Code_in/@code"/>
			<xsl:variable name="codeSystem_6" select="$main.Code_in/@codeSystem"/>
			<xsl:if test="string($code_5)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_5"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_6)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_6"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m4">
		<xsl:variable name="main.Title_in" select="."/>
		<title>
			<xsl:variable name="textConten_8" select="$main.Title_in/self::node()"/>
			<xsl:value-of select="$textConten_8"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:effectiveTime" mode="main_m5">
		<xsl:variable name="main.EffectiveTime_in" select="."/>
		<effectiveTime>
			<xsl:variable name="value_10" select="$main.EffectiveTime_in/@value"/>
			<xsl:if test="string($value_10)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_10"/>
				</xsl:attribute>
			</xsl:if>
		</effectiveTime>
	</xsl:template>
	<xsl:template match="oms:confidentialityCode" mode="main_m6">
		<xsl:variable name="main.ConfidentialityCode_in" select="."/>
		<confidentialityCode>
			<xsl:variable name="code_12" select="$main.ConfidentialityCode_in/@code"/>
			<xsl:variable name="codeSystem_13" select="$main.ConfidentialityCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_14" select="$main.ConfidentialityCode_in/@displayName"/>
			<xsl:if test="string($code_12)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_12"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_13)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_13"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_14)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_14"/>
				</xsl:attribute>
			</xsl:if>
		</confidentialityCode>
	</xsl:template>
	<xsl:template match="oms:setId" mode="main_m7">
		<xsl:variable name="main.SetId_in" select="."/>
		<setId>
			<xsl:variable name="root_16" select="$main.SetId_in/@root"/>
			<xsl:if test="string($root_16)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_16"/>
				</xsl:attribute>
			</xsl:if>
		</setId>
	</xsl:template>
	<xsl:template match="oms:versionNumber" mode="main_m8">
		<xsl:variable name="main.VersionNumber_in" select="."/>
		<versionNumber>
			<xsl:variable name="value_18" select="$main.VersionNumber_in/@value"/>
			<xsl:if test="string($value_18)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_18"/>
				</xsl:attribute>
			</xsl:if>
		</versionNumber>
	</xsl:template>
	<xsl:template match="oms:recordTarget_PatientRole_Univ" mode="main_m9">
		<xsl:variable name="main.PatientUniversal_in" select="."/>
		<patientUniversal>
			<xsl:variable name="v_20" select="$main.PatientUniversal_in/oms:COCD_TP145201GB01.PatientRole_Univ/oms:id"/>
			<xsl:variable name="main.Id_subset_s0_in_s0" select="$v_20/self::node()"/>
			<xsl:variable name="v_24" select="$main.PatientUniversal_in/oms:COCD_TP145201GB01.PatientRole_Univ/oms:addr"/>
			<xsl:variable name="main.Addr_in" select="$v_24/self::node()"/>
			<xsl:variable name="v_32" select="$main.PatientUniversal_in/oms:COCD_TP145201GB01.PatientRole_Univ/oms:telecom"/>
			<xsl:variable name="main.Telecom_in" select="$v_32/self::node()"/>
			<xsl:variable name="v_35" select="$main.PatientUniversal_in/oms:COCD_TP145201GB01.PatientRole_Univ/oms:patientPatient"/>
			<xsl:variable name="main.PatientDetail_in" select="$v_35/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145201GB01#patientPatient') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_50" select="$main.PatientUniversal_in/oms:COCD_TP145201GB01.PatientRole_Univ/oms:providerOrganization"/>
			<xsl:variable name="main.ProviderOrg_in" select="$v_50/self::node()[(@classCode = 'ORG') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145201GB01#providerOrganization') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m10" select="$main.Id_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m11" select="$main.Addr_in"/>
			<xsl:apply-templates mode="main_m15" select="$main.Telecom_in"/>
			<xsl:apply-templates mode="main_m16" select="$main.PatientDetail_in"/>
			<xsl:apply-templates mode="main_m25" select="$main.ProviderOrg_in"/>
		</patientUniversal>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m10">
		<xsl:variable name="main.Id_subset_s0_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_21" select="$main.Id_subset_s0_in/@nullFlavor"/>
			<xsl:variable name="root_22" select="$main.Id_subset_s0_in/@root"/>
			<xsl:variable name="extension_23" select="$main.Id_subset_s0_in/@extension"/>
			<xsl:if test="string($nullFlavor_21)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_21"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_22)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_22"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_23)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_23"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:addr" mode="main_m11">
		<xsl:variable name="main.Addr_in" select="."/>
		<addr>
			<xsl:variable name="use_25" select="$main.Addr_in/@use"/>
			<xsl:variable name="v_26" select="$main.Addr_in/oms:postalCode"/>
			<xsl:variable name="main.PostalCode_in" select="$v_26/self::node()"/>
			<xsl:variable name="v_28" select="$main.Addr_in/oms:city"/>
			<xsl:variable name="main.City_in" select="$v_28/self::node()"/>
			<xsl:variable name="v_30" select="$main.Addr_in/oms:streetAddressLine"/>
			<xsl:variable name="main.StreetAddressLine_in" select="$v_30/self::node()"/>
			<xsl:if test="string($use_25)">
				<xsl:attribute name="use">
					<xsl:value-of select="$use_25"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m12" select="$main.PostalCode_in"/>
			<xsl:apply-templates mode="main_m13" select="$main.City_in"/>
			<xsl:apply-templates mode="main_m14" select="$main.StreetAddressLine_in"/>
		</addr>
	</xsl:template>
	<xsl:template match="oms:postalCode" mode="main_m12">
		<xsl:variable name="main.PostalCode_in" select="."/>
		<postalCode>
			<xsl:variable name="textConten_27" select="$main.PostalCode_in/self::node()"/>
			<xsl:value-of select="$textConten_27"/>
		</postalCode>
	</xsl:template>
	<xsl:template match="oms:city" mode="main_m13">
		<xsl:variable name="main.City_in" select="."/>
		<city>
			<xsl:variable name="textConten_29" select="$main.City_in/self::node()"/>
			<xsl:value-of select="$textConten_29"/>
		</city>
	</xsl:template>
	<xsl:template match="oms:streetAddressLine" mode="main_m14">
		<xsl:variable name="main.StreetAddressLine_in" select="."/>
		<streetAddressLine>
			<xsl:variable name="textConten_31" select="$main.StreetAddressLine_in/self::node()"/>
			<xsl:value-of select="$textConten_31"/>
		</streetAddressLine>
	</xsl:template>
	<xsl:template match="oms:telecom" mode="main_m15">
		<xsl:variable name="main.Telecom_in" select="."/>
		<telecom>
			<xsl:variable name="value_33" select="$main.Telecom_in/@value"/>
			<xsl:variable name="use_34" select="$main.Telecom_in/@use"/>
			<xsl:if test="string($value_33)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_33"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($use_34)">
				<xsl:attribute name="use">
					<xsl:value-of select="$use_34"/>
				</xsl:attribute>
			</xsl:if>
		</telecom>
	</xsl:template>
	<xsl:template match="oms:patientPatient" mode="main_m16">
		<xsl:variable name="main.PatientDetail_in" select="."/>
		<patientDetail>
			<xsl:variable name="v_36" select="$main.PatientDetail_in/oms:name"/>
			<xsl:variable name="main.Name_in" select="$v_36/self::node()"/>
			<xsl:variable name="v_43" select="$main.PatientDetail_in/oms:administrativeGenderCode"/>
			<xsl:variable name="main.Sex_in" select="$v_43/self::node()"/>
			<xsl:variable name="v_45" select="$main.PatientDetail_in/oms:birthTime"/>
			<xsl:variable name="main.Dob_in" select="$v_45/self::node()"/>
			<xsl:variable name="v_47" select="$main.PatientDetail_in/oms:languageCommunication"/>
			<xsl:variable name="main.LanguageCommunication_in" select="$v_47/self::node()[(oms:templateId/@extension = 'COCD_TP145201GB01#languageCommunication') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m17" select="$main.Name_in"/>
			<xsl:apply-templates mode="main_m21" select="$main.Sex_in"/>
			<xsl:apply-templates mode="main_m22" select="$main.Dob_in"/>
			<xsl:apply-templates mode="main_m23" select="$main.LanguageCommunication_in"/>
		</patientDetail>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m17">
		<xsl:variable name="main.Name_in" select="."/>
		<name>
			<xsl:variable name="v_37" select="$main.Name_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_in" select="$v_37/self::node()"/>
			<xsl:variable name="v_39" select="$main.Name_in/oms:given"/>
			<xsl:variable name="main.Given_in" select="$v_39/self::node()"/>
			<xsl:variable name="v_41" select="$main.Name_in/oms:family"/>
			<xsl:variable name="main.Family_in" select="$v_41/self::node()"/>
			<xsl:apply-templates mode="main_m18" select="$main.Prefix_in"/>
			<xsl:apply-templates mode="main_m19" select="$main.Given_in"/>
			<xsl:apply-templates mode="main_m20" select="$main.Family_in"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m18">
		<xsl:variable name="main.Prefix_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_38" select="$main.Prefix_in/self::node()"/>
			<xsl:value-of select="$textConten_38"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m19">
		<xsl:variable name="main.Given_in" select="."/>
		<given>
			<xsl:variable name="textConten_40" select="$main.Given_in/self::node()"/>
			<xsl:value-of select="$textConten_40"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m20">
		<xsl:variable name="main.Family_in" select="."/>
		<family>
			<xsl:variable name="textConten_42" select="$main.Family_in/self::node()"/>
			<xsl:value-of select="$textConten_42"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:administrativeGenderCode" mode="main_m21">
		<xsl:variable name="main.Sex_in" select="."/>
		<sex>
			<xsl:variable name="code_44" select="$main.Sex_in/@code"/>
			<xsl:if test="string($code_44)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_44"/>
				</xsl:attribute>
			</xsl:if>
		</sex>
	</xsl:template>
	<xsl:template match="oms:birthTime" mode="main_m22">
		<xsl:variable name="main.Dob_in" select="."/>
		<dob>
			<xsl:variable name="value_46" select="$main.Dob_in/@value"/>
			<xsl:if test="string($value_46)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_46"/>
				</xsl:attribute>
			</xsl:if>
		</dob>
	</xsl:template>
	<xsl:template match="oms:languageCommunication" mode="main_m23">
		<xsl:variable name="main.LanguageCommunication_in" select="."/>
		<languageCommunication>
			<xsl:variable name="v_48" select="$main.LanguageCommunication_in/oms:languageCode"/>
			<xsl:variable name="main.LanguageCode_in" select="$v_48/self::node()"/>
			<xsl:apply-templates mode="main_m24" select="$main.LanguageCode_in"/>
		</languageCommunication>
	</xsl:template>
	<xsl:template match="oms:languageCode" mode="main_m24">
		<xsl:variable name="main.LanguageCode_in" select="."/>
		<languageCode>
			<xsl:variable name="code_49" select="$main.LanguageCode_in/@code"/>
			<xsl:if test="string($code_49)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_49"/>
				</xsl:attribute>
			</xsl:if>
		</languageCode>
	</xsl:template>
	<xsl:template match="oms:providerOrganization" mode="main_m25">
		<xsl:variable name="main.ProviderOrg_in" select="."/>
		<providerOrg>
			<xsl:variable name="v_51" select="$main.ProviderOrg_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s1_in_s1" select="$v_51/self::node()"/>
			<xsl:variable name="v_53" select="$main.ProviderOrg_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s0_in_s0" select="$v_53/self::node()"/>
			<xsl:variable name="v_55" select="$main.ProviderOrg_in/oms:telecom"/>
			<xsl:variable name="main.Telecom_subset_s0_in_s0" select="$v_55/self::node()"/>
			<xsl:variable name="v_58" select="$main.ProviderOrg_in/oms:addr"/>
			<xsl:variable name="main.Addr_subset_s0_in_s0" select="$v_58/self::node()"/>
			<xsl:variable name="v_65" select="$main.ProviderOrg_in/oms:standardIndustryClassCode"/>
			<xsl:variable name="main.StdClassCode_in" select="$v_65/self::node()"/>
			<xsl:apply-templates mode="main_m26" select="$main.Id_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m27" select="$main.Name_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m28" select="$main.Telecom_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m29" select="$main.Addr_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m33" select="$main.StdClassCode_in"/>
		</providerOrg>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m26">
		<xsl:variable name="main.Id_subset_s1_in" select="."/>
		<id>
			<xsl:variable name="extension_52" select="$main.Id_subset_s1_in/@extension"/>
			<xsl:if test="string($extension_52)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_52"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m27">
		<xsl:variable name="main.Name_subset_s0_in" select="."/>
		<name>
			<xsl:variable name="textConten_54" select="$main.Name_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_54"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:telecom" mode="main_m28">
		<xsl:variable name="main.Telecom_subset_s0_in" select="."/>
		<telecom>
			<xsl:variable name="value_56" select="$main.Telecom_subset_s0_in/@value"/>
			<xsl:variable name="use_57" select="$main.Telecom_subset_s0_in/@use"/>
			<xsl:if test="string($value_56)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_56"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($use_57)">
				<xsl:attribute name="use">
					<xsl:value-of select="$use_57"/>
				</xsl:attribute>
			</xsl:if>
		</telecom>
	</xsl:template>
	<xsl:template match="oms:addr" mode="main_m29">
		<xsl:variable name="main.Addr_subset_s0_in" select="."/>
		<addr>
			<xsl:variable name="v_59" select="$main.Addr_subset_s0_in/oms:postalCode"/>
			<xsl:variable name="main.PostalCode_subset_s0_in_s0" select="$v_59/self::node()"/>
			<xsl:variable name="v_61" select="$main.Addr_subset_s0_in/oms:city"/>
			<xsl:variable name="main.City_subset_s0_in_s0" select="$v_61/self::node()"/>
			<xsl:variable name="v_63" select="$main.Addr_subset_s0_in/oms:streetAddressLine"/>
			<xsl:variable name="main.StreetAddressLine_subset_s0_in_s0" select="$v_63/self::node()"/>
			<xsl:apply-templates mode="main_m30" select="$main.PostalCode_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m31" select="$main.City_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m32" select="$main.StreetAddressLine_subset_s0_in_s0"/>
		</addr>
	</xsl:template>
	<xsl:template match="oms:postalCode" mode="main_m30">
		<xsl:variable name="main.PostalCode_subset_s0_in" select="."/>
		<postalCode>
			<xsl:variable name="textConten_60" select="$main.PostalCode_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_60"/>
		</postalCode>
	</xsl:template>
	<xsl:template match="oms:city" mode="main_m31">
		<xsl:variable name="main.City_subset_s0_in" select="."/>
		<city>
			<xsl:variable name="textConten_62" select="$main.City_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_62"/>
		</city>
	</xsl:template>
	<xsl:template match="oms:streetAddressLine" mode="main_m32">
		<xsl:variable name="main.StreetAddressLine_subset_s0_in" select="."/>
		<streetAddressLine>
			<xsl:variable name="textConten_64" select="$main.StreetAddressLine_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_64"/>
		</streetAddressLine>
	</xsl:template>
	<xsl:template match="oms:standardIndustryClassCode" mode="main_m33">
		<xsl:variable name="main.StdClassCode_in" select="."/>
		<stdClassCode>
			<xsl:variable name="code_66" select="$main.StdClassCode_in/@code"/>
			<xsl:variable name="codeSystem_67" select="$main.StdClassCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_68" select="$main.StdClassCode_in/@displayName"/>
			<xsl:if test="string($code_66)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_66"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_67)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_67"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_68)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_68"/>
				</xsl:attribute>
			</xsl:if>
		</stdClassCode>
	</xsl:template>
	<xsl:template match="oms:ClinicalDocument" mode="main_m34">
		<xsl:variable name="main.Author_in" select="."/>
		<author>
			<xsl:variable name="v_70" select="$main.Author_in/oms:author_AssignedAuthor_Person"/>
			<xsl:variable name="main.AuthorPerson_in" select="$v_70/self::node()[(@typeCode = 'AUT') and (@contextControlCode = 'OP') and (oms:functionCode/@code = 'OA') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/@classCode = 'ASSIGNED') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:templateId/@extension = 'COCD_TP145200GB01#AssignedAuthor') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145200GB01#assignedPerson') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145200GB01#representedOrganization') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_92" select="$main.Author_in/oms:author_AssignedAuthor_Anon"/>
			<xsl:variable name="main.AuthorNonNamedPerson_in" select="$v_92/self::node()[(@typeCode = 'AUT') and (@contextControlCode = 'OP') and (oms:functionCode/@code = 'OA') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/@classCode = 'ASSIGNED') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:templateId/@extension = 'COCD_TP145208GB01#AssignedAuthor') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145208GB01#representedOrganization') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_107" select="$main.Author_in/oms:author_Workgroup"/>
			<xsl:variable name="main.AuthorWorkgroup_in" select="$v_107/self::node()[(@typeCode = 'AUT') and (@contextControlCode = 'OP') and (oms:functionCode/@code = 'OA') and (oms:COCD_TP145212GB02.Workgroup/@classCode = 'ASSIGNED') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@extension = 'COCD_TP145212GB02#Workgroup') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145212GB02#representedOrganization') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_130" select="$main.Author_in/oms:author_AssignedAuthorDevice"/>
			<xsl:variable name="main.AuthorDevice_in" select="$v_130/self::node()[(@typeCode = 'AUT') and (@contextControlCode = 'OP') and (oms:functionCode/@code = 'OA') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/@classCode = 'ASSIGNED') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:templateId/@extension = 'COCD_TP145207GB01#AssignedAuthorDevice') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/@classCode = 'DEV') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/@determinerCode = 'INSTANCE') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/oms:templateId/@extension = 'COCD_TP145207GB01#assignedAuthoringDevice') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145207GB01#representedOrganization') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m35" select="$main.AuthorPerson_in"/>
			<xsl:apply-templates mode="main_m45" select="$main.AuthorNonNamedPerson_in"/>
			<xsl:apply-templates mode="main_m51" select="$main.AuthorWorkgroup_in"/>
			<xsl:apply-templates mode="main_m62" select="$main.AuthorDevice_in"/>
		</author>
	</xsl:template>
	<xsl:template match="oms:author_AssignedAuthor_Person" mode="main_m35">
		<xsl:variable name="main.AuthorPerson_in" select="."/>
		<authorPerson>
			<xsl:variable name="v_71" select="$main.AuthorPerson_in/oms:time"/>
			<xsl:variable name="main.Time_in" select="$v_71/self::node()"/>
			<xsl:variable name="v_73" select="$main.AuthorPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:id"/>
			<xsl:variable name="main.Id_subset_s2_in_s2" select="$v_73/self::node()"/>
			<xsl:variable name="v_77" select="$main.AuthorPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:code"/>
			<xsl:variable name="main.Code_subset_s0_in_s0" select="$v_77/self::node()"/>
			<xsl:variable name="v_79" select="$main.AuthorPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.Name_subset_s1_in_s1" select="$v_79/self::node()"/>
			<xsl:variable name="v_86" select="$main.AuthorPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_in" select="$v_86/self::node()"/>
			<xsl:variable name="v_90" select="$main.AuthorPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_in" select="$v_90/self::node()"/>
			<xsl:apply-templates mode="main_m36" select="$main.Time_in"/>
			<xsl:apply-templates mode="main_m37" select="$main.Id_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m38" select="$main.Code_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m39" select="$main.Name_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m43" select="$main.OrgId_in"/>
			<xsl:apply-templates mode="main_m44" select="$main.OrgName_in"/>
		</authorPerson>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m36">
		<xsl:variable name="main.Time_in" select="."/>
		<time>
			<xsl:variable name="value_72" select="$main.Time_in/@value"/>
			<xsl:if test="string($value_72)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_72"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m37">
		<xsl:variable name="main.Id_subset_s2_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_74" select="$main.Id_subset_s2_in/@nullFlavor"/>
			<xsl:variable name="root_75" select="$main.Id_subset_s2_in/@root"/>
			<xsl:variable name="extension_76" select="$main.Id_subset_s2_in/@extension"/>
			<xsl:if test="string($nullFlavor_74)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_74"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_75)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_75"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_76)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_76"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m38">
		<xsl:variable name="main.Code_subset_s0_in" select="."/>
		<code>
			<xsl:variable name="code_78" select="$main.Code_subset_s0_in/@code"/>
			<xsl:if test="string($code_78)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_78"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m39">
		<xsl:variable name="main.Name_subset_s1_in" select="."/>
		<name>
			<xsl:variable name="v_80" select="$main.Name_subset_s1_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s0_in_s0" select="$v_80/self::node()"/>
			<xsl:variable name="v_82" select="$main.Name_subset_s1_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s0_in_s0" select="$v_82/self::node()"/>
			<xsl:variable name="v_84" select="$main.Name_subset_s1_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s0_in_s0" select="$v_84/self::node()"/>
			<xsl:apply-templates mode="main_m40" select="$main.Prefix_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m41" select="$main.Given_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m42" select="$main.Family_subset_s0_in_s0"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m40">
		<xsl:variable name="main.Prefix_subset_s0_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_81" select="$main.Prefix_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_81"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m41">
		<xsl:variable name="main.Given_subset_s0_in" select="."/>
		<given>
			<xsl:variable name="textConten_83" select="$main.Given_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_83"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m42">
		<xsl:variable name="main.Family_subset_s0_in" select="."/>
		<family>
			<xsl:variable name="textConten_85" select="$main.Family_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_85"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m43">
		<xsl:variable name="main.OrgId_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_87" select="$main.OrgId_in/@nullFlavor"/>
			<xsl:variable name="root_88" select="$main.OrgId_in/@root"/>
			<xsl:variable name="extension_89" select="$main.OrgId_in/@extension"/>
			<xsl:if test="string($nullFlavor_87)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_87"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_88)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_88"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_89)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_89"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m44">
		<xsl:variable name="main.OrgName_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_91" select="$main.OrgName_in/self::node()"/>
			<xsl:value-of select="$textConten_91"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:author_AssignedAuthor_Anon" mode="main_m45">
		<xsl:variable name="main.AuthorNonNamedPerson_in" select="."/>
		<authorNonNamedPerson>
			<xsl:variable name="v_93" select="$main.AuthorNonNamedPerson_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s0_in_s0" select="$v_93/self::node()"/>
			<xsl:variable name="v_95" select="$main.AuthorNonNamedPerson_in/oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:id"/>
			<xsl:variable name="main.Id_subset_s3_in_s3" select="$v_95/self::node()"/>
			<xsl:variable name="v_99" select="$main.AuthorNonNamedPerson_in/oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:code"/>
			<xsl:variable name="main.Code_subset_s1_in_s1" select="$v_99/self::node()"/>
			<xsl:variable name="v_101" select="$main.AuthorNonNamedPerson_in/oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s0_in_s0" select="$v_101/self::node()"/>
			<xsl:variable name="v_105" select="$main.AuthorNonNamedPerson_in/oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s0_in_s0" select="$v_105/self::node()"/>
			<xsl:apply-templates mode="main_m46" select="$main.Time_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m47" select="$main.Id_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m48" select="$main.Code_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m49" select="$main.OrgId_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m50" select="$main.OrgName_subset_s0_in_s0"/>
		</authorNonNamedPerson>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m46">
		<xsl:variable name="main.Time_subset_s0_in" select="."/>
		<time>
			<xsl:variable name="value_94" select="$main.Time_subset_s0_in/@value"/>
			<xsl:if test="string($value_94)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_94"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m47">
		<xsl:variable name="main.Id_subset_s3_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_96" select="$main.Id_subset_s3_in/@nullFlavor"/>
			<xsl:variable name="root_97" select="$main.Id_subset_s3_in/@root"/>
			<xsl:variable name="extension_98" select="$main.Id_subset_s3_in/@extension"/>
			<xsl:if test="string($nullFlavor_96)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_96"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_97)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_97"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_98)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_98"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m48">
		<xsl:variable name="main.Code_subset_s1_in" select="."/>
		<code>
			<xsl:variable name="code_100" select="$main.Code_subset_s1_in/@code"/>
			<xsl:if test="string($code_100)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_100"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m49">
		<xsl:variable name="main.OrgId_subset_s0_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_102" select="$main.OrgId_subset_s0_in/@nullFlavor"/>
			<xsl:variable name="root_103" select="$main.OrgId_subset_s0_in/@root"/>
			<xsl:variable name="extension_104" select="$main.OrgId_subset_s0_in/@extension"/>
			<xsl:if test="string($nullFlavor_102)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_102"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_103)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_103"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_104)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_104"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m50">
		<xsl:variable name="main.OrgName_subset_s0_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_106" select="$main.OrgName_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_106"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:author_Workgroup" mode="main_m51">
		<xsl:variable name="main.AuthorWorkgroup_in" select="."/>
		<authorWorkgroup>
			<xsl:variable name="v_108" select="$main.AuthorWorkgroup_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s1_in_s1" select="$v_108/self::node()"/>
			<xsl:variable name="v_110" select="$main.AuthorWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:id"/>
			<xsl:variable name="main.Id_subset_s4_in_s4" select="$v_110/self::node()"/>
			<xsl:variable name="v_114" select="$main.AuthorWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:code"/>
			<xsl:variable name="main.Code_subset_s2_in_s2" select="$v_114/self::node()"/>
			<xsl:variable name="v_116" select="$main.AuthorWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s1_in_s1" select="$v_116/self::node()"/>
			<xsl:variable name="v_120" select="$main.AuthorWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s1_in_s1" select="$v_120/self::node()"/>
			<xsl:variable name="v_122" select="$main.AuthorWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_in" select="$v_122/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145212GB02#assignedPerson') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m52" select="$main.Time_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m53" select="$main.Id_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m54" select="$main.Code_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m55" select="$main.OrgId_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m56" select="$main.OrgName_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m57" select="$main.AssignedPerson_in"/>
		</authorWorkgroup>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m52">
		<xsl:variable name="main.Time_subset_s1_in" select="."/>
		<time>
			<xsl:variable name="value_109" select="$main.Time_subset_s1_in/@value"/>
			<xsl:if test="string($value_109)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_109"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m53">
		<xsl:variable name="main.Id_subset_s4_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_111" select="$main.Id_subset_s4_in/@nullFlavor"/>
			<xsl:variable name="root_112" select="$main.Id_subset_s4_in/@root"/>
			<xsl:variable name="extension_113" select="$main.Id_subset_s4_in/@extension"/>
			<xsl:if test="string($nullFlavor_111)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_111"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_112)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_112"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_113)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_113"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m54">
		<xsl:variable name="main.Code_subset_s2_in" select="."/>
		<code>
			<xsl:variable name="code_115" select="$main.Code_subset_s2_in/@code"/>
			<xsl:if test="string($code_115)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_115"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m55">
		<xsl:variable name="main.OrgId_subset_s1_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_117" select="$main.OrgId_subset_s1_in/@nullFlavor"/>
			<xsl:variable name="root_118" select="$main.OrgId_subset_s1_in/@root"/>
			<xsl:variable name="extension_119" select="$main.OrgId_subset_s1_in/@extension"/>
			<xsl:if test="string($nullFlavor_117)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_117"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_118)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_118"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_119)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_119"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m56">
		<xsl:variable name="main.OrgName_subset_s1_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_121" select="$main.OrgName_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_121"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m57">
		<xsl:variable name="main.AssignedPerson_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_123" select="$main.AssignedPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s2_in_s2" select="$v_123/self::node()"/>
			<xsl:apply-templates mode="main_m58" select="$main.Name_subset_s2_in_s2"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m58">
		<xsl:variable name="main.Name_subset_s2_in" select="."/>
		<name>
			<xsl:variable name="v_124" select="$main.Name_subset_s2_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s1_in_s1" select="$v_124/self::node()"/>
			<xsl:variable name="v_126" select="$main.Name_subset_s2_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s1_in_s1" select="$v_126/self::node()"/>
			<xsl:variable name="v_128" select="$main.Name_subset_s2_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s1_in_s1" select="$v_128/self::node()"/>
			<xsl:apply-templates mode="main_m59" select="$main.Prefix_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m60" select="$main.Given_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m61" select="$main.Family_subset_s1_in_s1"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m59">
		<xsl:variable name="main.Prefix_subset_s1_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_125" select="$main.Prefix_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_125"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m60">
		<xsl:variable name="main.Given_subset_s1_in" select="."/>
		<given>
			<xsl:variable name="textConten_127" select="$main.Given_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_127"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m61">
		<xsl:variable name="main.Family_subset_s1_in" select="."/>
		<family>
			<xsl:variable name="textConten_129" select="$main.Family_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_129"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:author_AssignedAuthorDevice" mode="main_m62">
		<xsl:variable name="main.AuthorDevice_in" select="."/>
		<authorDevice>
			<xsl:variable name="v_131" select="$main.AuthorDevice_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s2_in_s2" select="$v_131/self::node()"/>
			<xsl:variable name="v_133" select="$main.AuthorDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:id"/>
			<xsl:variable name="main.Id_subset_s5_in_s5" select="$v_133/self::node()"/>
			<xsl:variable name="v_137" select="$main.AuthorDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/oms:manufacturerModelName"/>
			<xsl:variable name="main.DevName_in" select="$v_137/self::node()"/>
			<xsl:variable name="v_139" select="$main.AuthorDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/oms:softwareName"/>
			<xsl:variable name="main.SoftName_in" select="$v_139/self::node()"/>
			<xsl:variable name="v_141" select="$main.AuthorDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s2_in_s2" select="$v_141/self::node()"/>
			<xsl:variable name="v_145" select="$main.AuthorDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s2_in_s2" select="$v_145/self::node()"/>
			<xsl:apply-templates mode="main_m63" select="$main.Time_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m64" select="$main.Id_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m65" select="$main.DevName_in"/>
			<xsl:apply-templates mode="main_m66" select="$main.SoftName_in"/>
			<xsl:apply-templates mode="main_m67" select="$main.OrgId_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m68" select="$main.OrgName_subset_s2_in_s2"/>
		</authorDevice>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m63">
		<xsl:variable name="main.Time_subset_s2_in" select="."/>
		<time>
			<xsl:variable name="value_132" select="$main.Time_subset_s2_in/@value"/>
			<xsl:if test="string($value_132)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_132"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m64">
		<xsl:variable name="main.Id_subset_s5_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_134" select="$main.Id_subset_s5_in/@nullFlavor"/>
			<xsl:variable name="root_135" select="$main.Id_subset_s5_in/@root"/>
			<xsl:variable name="extension_136" select="$main.Id_subset_s5_in/@extension"/>
			<xsl:if test="string($nullFlavor_134)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_134"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_135)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_135"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_136)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_136"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:manufacturerModelName" mode="main_m65">
		<xsl:variable name="main.DevName_in" select="."/>
		<devName>
			<xsl:variable name="textConten_138" select="$main.DevName_in/self::node()"/>
			<xsl:value-of select="$textConten_138"/>
		</devName>
	</xsl:template>
	<xsl:template match="oms:softwareName" mode="main_m66">
		<xsl:variable name="main.SoftName_in" select="."/>
		<softName>
			<xsl:variable name="textConten_140" select="$main.SoftName_in/self::node()"/>
			<xsl:value-of select="$textConten_140"/>
		</softName>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m67">
		<xsl:variable name="main.OrgId_subset_s2_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_142" select="$main.OrgId_subset_s2_in/@nullFlavor"/>
			<xsl:variable name="root_143" select="$main.OrgId_subset_s2_in/@root"/>
			<xsl:variable name="extension_144" select="$main.OrgId_subset_s2_in/@extension"/>
			<xsl:if test="string($nullFlavor_142)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_142"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_143)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_143"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_144)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_144"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m68">
		<xsl:variable name="main.OrgName_subset_s2_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_146" select="$main.OrgName_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_146"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:dataEnterer_AssignedEntity" mode="main_m69">
		<xsl:variable name="main.DataEnterer_in" select="."/>
		<dataEnterer>
			<xsl:variable name="v_148" select="$main.DataEnterer_in/oms:COCD_TP145205GB01.AssignedEntity/oms:id"/>
			<xsl:variable name="main.Id_subset_s6_in_s6" select="$v_148/self::node()"/>
			<xsl:variable name="v_152" select="$main.DataEnterer_in/oms:COCD_TP145205GB01.AssignedEntity/oms:code"/>
			<xsl:variable name="main.Code_subset_s3_in_s3" select="$v_152/self::node()"/>
			<xsl:variable name="v_154" select="$main.DataEnterer_in/oms:COCD_TP145205GB01.AssignedEntity/oms:telecom"/>
			<xsl:variable name="main.Telecom_subset_s1_in_s1" select="$v_154/self::node()"/>
			<xsl:variable name="v_157" select="$main.DataEnterer_in/oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.DataEntName_in" select="$v_157/self::node()"/>
			<xsl:variable name="v_164" select="$main.DataEnterer_in/oms:COCD_TP145205GB01.AssignedEntity/oms:representedOrganization"/>
			<xsl:variable name="main.RepresentedOrganization_in" select="$v_164/self::node()[(@classCode = 'ORG') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145205GB01#representedOrganization') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m70" select="$main.Id_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m71" select="$main.Code_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m72" select="$main.Telecom_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m73" select="$main.DataEntName_in"/>
			<xsl:apply-templates mode="main_m77" select="$main.RepresentedOrganization_in"/>
		</dataEnterer>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m70">
		<xsl:variable name="main.Id_subset_s6_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_149" select="$main.Id_subset_s6_in/@nullFlavor"/>
			<xsl:variable name="root_150" select="$main.Id_subset_s6_in/@root"/>
			<xsl:variable name="extension_151" select="$main.Id_subset_s6_in/@extension"/>
			<xsl:if test="string($nullFlavor_149)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_149"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_150)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_150"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_151)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_151"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m71">
		<xsl:variable name="main.Code_subset_s3_in" select="."/>
		<code>
			<xsl:variable name="code_153" select="$main.Code_subset_s3_in/@code"/>
			<xsl:if test="string($code_153)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_153"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:telecom" mode="main_m72">
		<xsl:variable name="main.Telecom_subset_s1_in" select="."/>
		<telecom>
			<xsl:variable name="value_155" select="$main.Telecom_subset_s1_in/@value"/>
			<xsl:variable name="use_156" select="$main.Telecom_subset_s1_in/@use"/>
			<xsl:if test="string($value_155)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_155"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($use_156)">
				<xsl:attribute name="use">
					<xsl:value-of select="$use_156"/>
				</xsl:attribute>
			</xsl:if>
		</telecom>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m73">
		<xsl:variable name="main.DataEntName_in" select="."/>
		<dataEntName>
			<xsl:variable name="v_158" select="$main.DataEntName_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s2_in_s2" select="$v_158/self::node()"/>
			<xsl:variable name="v_160" select="$main.DataEntName_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s2_in_s2" select="$v_160/self::node()"/>
			<xsl:variable name="v_162" select="$main.DataEntName_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s2_in_s2" select="$v_162/self::node()"/>
			<xsl:apply-templates mode="main_m74" select="$main.Prefix_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m75" select="$main.Given_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m76" select="$main.Family_subset_s2_in_s2"/>
		</dataEntName>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m74">
		<xsl:variable name="main.Prefix_subset_s2_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_159" select="$main.Prefix_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_159"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m75">
		<xsl:variable name="main.Given_subset_s2_in" select="."/>
		<given>
			<xsl:variable name="textConten_161" select="$main.Given_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_161"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m76">
		<xsl:variable name="main.Family_subset_s2_in" select="."/>
		<family>
			<xsl:variable name="textConten_163" select="$main.Family_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_163"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:representedOrganization" mode="main_m77">
		<xsl:variable name="main.RepresentedOrganization_in" select="."/>
		<representedOrganization>
			<xsl:variable name="v_165" select="$main.RepresentedOrganization_in/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s3_in_s3" select="$v_165/self::node()"/>
			<xsl:variable name="v_169" select="$main.RepresentedOrganization_in/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s3_in_s3" select="$v_169/self::node()"/>
			<xsl:apply-templates mode="main_m78" select="$main.OrgId_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m79" select="$main.OrgName_subset_s3_in_s3"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m78">
		<xsl:variable name="main.OrgId_subset_s3_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_166" select="$main.OrgId_subset_s3_in/@nullFlavor"/>
			<xsl:variable name="root_167" select="$main.OrgId_subset_s3_in/@root"/>
			<xsl:variable name="extension_168" select="$main.OrgId_subset_s3_in/@extension"/>
			<xsl:if test="string($nullFlavor_166)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_166"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_167)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_167"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_168)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_168"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m79">
		<xsl:variable name="main.OrgName_subset_s3_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_170" select="$main.OrgName_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_170"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:informant_RelatedEntity" mode="main_m80">
		<xsl:variable name="main.InformantRelatedEntity_in" select="."/>
		<informantRelatedEntity>
			<xsl:variable name="v_172" select="$main.InformantRelatedEntity_in/oms:COCD_TP145007UK03.RelatedEntity/oms:code"/>
			<xsl:variable name="main.Code_subset_s4_in_s4" select="$v_172/self::node()"/>
			<xsl:variable name="v_176" select="$main.InformantRelatedEntity_in/oms:COCD_TP145007UK03.RelatedEntity/oms:relationshipHolder"/>
			<xsl:variable name="main.RelatedPerson_in" select="$v_176/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145007UK03#relationshipHolder') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m81" select="$main.Code_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m82" select="$main.RelatedPerson_in"/>
		</informantRelatedEntity>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m81">
		<xsl:variable name="main.Code_subset_s4_in" select="."/>
		<code>
			<xsl:variable name="code_173" select="$main.Code_subset_s4_in/@code"/>
			<xsl:variable name="codeSystem_174" select="$main.Code_subset_s4_in/@codeSystem"/>
			<xsl:variable name="displayNam_175" select="$main.Code_subset_s4_in/@displayName"/>
			<xsl:if test="string($code_173)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_173"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_174)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_174"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_175)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_175"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:relationshipHolder" mode="main_m82">
		<xsl:variable name="main.RelatedPerson_in" select="."/>
		<relatedPerson>
			<xsl:variable name="v_177" select="$main.RelatedPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s3_in_s3" select="$v_177/self::node()"/>
			<xsl:apply-templates mode="main_m83" select="$main.Name_subset_s3_in_s3"/>
		</relatedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m83">
		<xsl:variable name="main.Name_subset_s3_in" select="."/>
		<name>
			<xsl:variable name="v_178" select="$main.Name_subset_s3_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s3_in_s3" select="$v_178/self::node()"/>
			<xsl:variable name="v_180" select="$main.Name_subset_s3_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s3_in_s3" select="$v_180/self::node()"/>
			<xsl:variable name="v_182" select="$main.Name_subset_s3_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s3_in_s3" select="$v_182/self::node()"/>
			<xsl:apply-templates mode="main_m84" select="$main.Prefix_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m85" select="$main.Given_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m86" select="$main.Family_subset_s3_in_s3"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m84">
		<xsl:variable name="main.Prefix_subset_s3_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_179" select="$main.Prefix_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_179"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m85">
		<xsl:variable name="main.Given_subset_s3_in" select="."/>
		<given>
			<xsl:variable name="textConten_181" select="$main.Given_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_181"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m86">
		<xsl:variable name="main.Family_subset_s3_in" select="."/>
		<family>
			<xsl:variable name="textConten_183" select="$main.Family_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_183"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:informant_AssignedEntity" mode="main_m87">
		<xsl:variable name="main.InformantPersonWithOrg_in" select="."/>
		<informantPersonWithOrg>
			<xsl:variable name="v_185" select="$main.InformantPersonWithOrg_in/oms:COCD_TP145210GB01.AssignedEntity/oms:id"/>
			<xsl:variable name="main.Id_subset_s7_in_s7" select="$v_185/self::node()"/>
			<xsl:variable name="v_189" select="$main.InformantPersonWithOrg_in/oms:COCD_TP145210GB01.AssignedEntity/oms:code"/>
			<xsl:variable name="main.Code_subset_s5_in_s5" select="$v_189/self::node()"/>
			<xsl:variable name="v_191" select="$main.InformantPersonWithOrg_in/oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.Name_subset_s4_in_s4" select="$v_191/self::node()"/>
			<xsl:variable name="v_198" select="$main.InformantPersonWithOrg_in/oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s4_in_s4" select="$v_198/self::node()"/>
			<xsl:variable name="v_202" select="$main.InformantPersonWithOrg_in/oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s4_in_s4" select="$v_202/self::node()"/>
			<xsl:apply-templates mode="main_m88" select="$main.Id_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m89" select="$main.Code_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m90" select="$main.Name_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m94" select="$main.OrgId_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m95" select="$main.OrgName_subset_s4_in_s4"/>
		</informantPersonWithOrg>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m88">
		<xsl:variable name="main.Id_subset_s7_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_186" select="$main.Id_subset_s7_in/@nullFlavor"/>
			<xsl:variable name="root_187" select="$main.Id_subset_s7_in/@root"/>
			<xsl:variable name="extension_188" select="$main.Id_subset_s7_in/@extension"/>
			<xsl:if test="string($nullFlavor_186)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_186"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_187)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_187"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_188)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_188"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m89">
		<xsl:variable name="main.Code_subset_s5_in" select="."/>
		<code>
			<xsl:variable name="code_190" select="$main.Code_subset_s5_in/@code"/>
			<xsl:if test="string($code_190)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_190"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m90">
		<xsl:variable name="main.Name_subset_s4_in" select="."/>
		<name>
			<xsl:variable name="v_192" select="$main.Name_subset_s4_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s4_in_s4" select="$v_192/self::node()"/>
			<xsl:variable name="v_194" select="$main.Name_subset_s4_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s4_in_s4" select="$v_194/self::node()"/>
			<xsl:variable name="v_196" select="$main.Name_subset_s4_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s4_in_s4" select="$v_196/self::node()"/>
			<xsl:apply-templates mode="main_m91" select="$main.Prefix_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m92" select="$main.Given_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m93" select="$main.Family_subset_s4_in_s4"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m91">
		<xsl:variable name="main.Prefix_subset_s4_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_193" select="$main.Prefix_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_193"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m92">
		<xsl:variable name="main.Given_subset_s4_in" select="."/>
		<given>
			<xsl:variable name="textConten_195" select="$main.Given_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_195"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m93">
		<xsl:variable name="main.Family_subset_s4_in" select="."/>
		<family>
			<xsl:variable name="textConten_197" select="$main.Family_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_197"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m94">
		<xsl:variable name="main.OrgId_subset_s4_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_199" select="$main.OrgId_subset_s4_in/@nullFlavor"/>
			<xsl:variable name="root_200" select="$main.OrgId_subset_s4_in/@root"/>
			<xsl:variable name="extension_201" select="$main.OrgId_subset_s4_in/@extension"/>
			<xsl:if test="string($nullFlavor_199)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_199"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_200)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_200"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_201)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_201"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m95">
		<xsl:variable name="main.OrgName_subset_s4_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_203" select="$main.OrgName_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_203"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:custodian_AssignedCustodian" mode="main_m96">
		<xsl:variable name="main.Custodian_in" select="."/>
		<custodian>
			<xsl:variable name="v_205" select="$main.Custodian_in/oms:COCD_TP145018UK03.AssignedCustodian/oms:representedCustodianOrganization/oms:id"/>
			<xsl:variable name="main.CustId_in" select="$v_205/self::node()"/>
			<xsl:variable name="v_208" select="$main.Custodian_in/oms:COCD_TP145018UK03.AssignedCustodian/oms:representedCustodianOrganization/oms:name"/>
			<xsl:variable name="main.CustOrg_in" select="$v_208/self::node()"/>
			<xsl:apply-templates mode="main_m97" select="$main.CustId_in"/>
			<xsl:apply-templates mode="main_m98" select="$main.CustOrg_in"/>
		</custodian>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m97">
		<xsl:variable name="main.CustId_in" select="."/>
		<custId>
			<xsl:variable name="root_206" select="$main.CustId_in/@root"/>
			<xsl:variable name="extension_207" select="$main.CustId_in/@extension"/>
			<xsl:if test="string($root_206)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_206"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_207)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_207"/>
				</xsl:attribute>
			</xsl:if>
		</custId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m98">
		<xsl:variable name="main.CustOrg_in" select="."/>
		<custOrg>
			<xsl:variable name="textConten_209" select="$main.CustOrg_in/self::node()"/>
			<xsl:value-of select="$textConten_209"/>
		</custOrg>
	</xsl:template>
	<xsl:template match="oms:ClinicalDocument" mode="main_m99">
		<xsl:variable name="main.InformationRecipient_in" select="."/>
		<informationRecipient>
			<xsl:variable name="v_211" select="$main.InformationRecipient_in/oms:informationRecipient_IntendedRecipient_Person"/>
			<xsl:variable name="main.InformationRecipientPerson_in" select="$v_211/self::node()[(@typeCode = 'PRCP') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/@classCode = 'ASSIGNED') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:templateId/@extension = 'COCD_TP145202GB01#IntendedRecipient') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145202GB01#assignedPerson') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145202GB01#representedOrganization') and (oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_229" select="$main.InformationRecipient_in/oms:informationRecipient_IntendedRecipient_Org"/>
			<xsl:variable name="main.InformationRecipientOrg_in" select="$v_229/self::node()[(@typeCode = 'PRCP') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/@classCode = 'ASSIGNED') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:templateId/@extension = 'COCD_TP145203GB02#IntendedRecipient') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145203GB02#representedOrganization') and (oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_236" select="$main.InformationRecipient_in/oms:informationRecipient_IntendedRecipient_WorkGp"/>
			<xsl:variable name="main.InformationRecipientworkgroup_in" select="$v_236/self::node()[(@typeCode = 'PRCP') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/@classCode = 'ASSIGNED') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:templateId/@extension = 'COCD_TP145204GB02#RecipientWorkgroup') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145204GB02#representedOrganization') and (oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m100" select="$main.InformationRecipientPerson_in"/>
			<xsl:apply-templates mode="main_m108" select="$main.InformationRecipientOrg_in"/>
			<xsl:apply-templates mode="main_m111" select="$main.InformationRecipientworkgroup_in"/>
		</informationRecipient>
	</xsl:template>
	<xsl:template match="oms:informationRecipient_IntendedRecipient_Person" mode="main_m100">
		<xsl:variable name="main.InformationRecipientPerson_in" select="."/>
		<informationRecipientPerson>
			<xsl:variable name="v_212" select="$main.InformationRecipientPerson_in/oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:id"/>
			<xsl:variable name="main.Id_subset_s8_in_s8" select="$v_212/self::node()"/>
			<xsl:variable name="v_216" select="$main.InformationRecipientPerson_in/oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.Name_subset_s5_in_s5" select="$v_216/self::node()"/>
			<xsl:variable name="v_223" select="$main.InformationRecipientPerson_in/oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s5_in_s5" select="$v_223/self::node()"/>
			<xsl:variable name="v_227" select="$main.InformationRecipientPerson_in/oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s5_in_s5" select="$v_227/self::node()"/>
			<xsl:apply-templates mode="main_m101" select="$main.Id_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m102" select="$main.Name_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m106" select="$main.OrgId_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m107" select="$main.OrgName_subset_s5_in_s5"/>
		</informationRecipientPerson>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m101">
		<xsl:variable name="main.Id_subset_s8_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_213" select="$main.Id_subset_s8_in/@nullFlavor"/>
			<xsl:variable name="root_214" select="$main.Id_subset_s8_in/@root"/>
			<xsl:variable name="extension_215" select="$main.Id_subset_s8_in/@extension"/>
			<xsl:if test="string($nullFlavor_213)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_213"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_214)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_214"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_215)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_215"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m102">
		<xsl:variable name="main.Name_subset_s5_in" select="."/>
		<name>
			<xsl:variable name="v_217" select="$main.Name_subset_s5_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s5_in_s5" select="$v_217/self::node()"/>
			<xsl:variable name="v_219" select="$main.Name_subset_s5_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s5_in_s5" select="$v_219/self::node()"/>
			<xsl:variable name="v_221" select="$main.Name_subset_s5_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s5_in_s5" select="$v_221/self::node()"/>
			<xsl:apply-templates mode="main_m103" select="$main.Prefix_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m104" select="$main.Given_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m105" select="$main.Family_subset_s5_in_s5"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m103">
		<xsl:variable name="main.Prefix_subset_s5_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_218" select="$main.Prefix_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_218"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m104">
		<xsl:variable name="main.Given_subset_s5_in" select="."/>
		<given>
			<xsl:variable name="textConten_220" select="$main.Given_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_220"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m105">
		<xsl:variable name="main.Family_subset_s5_in" select="."/>
		<family>
			<xsl:variable name="textConten_222" select="$main.Family_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_222"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m106">
		<xsl:variable name="main.OrgId_subset_s5_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_224" select="$main.OrgId_subset_s5_in/@nullFlavor"/>
			<xsl:variable name="root_225" select="$main.OrgId_subset_s5_in/@root"/>
			<xsl:variable name="extension_226" select="$main.OrgId_subset_s5_in/@extension"/>
			<xsl:if test="string($nullFlavor_224)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_224"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_225)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_225"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_226)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_226"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m107">
		<xsl:variable name="main.OrgName_subset_s5_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_228" select="$main.OrgName_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_228"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:informationRecipient_IntendedRecipient_Org" mode="main_m108">
		<xsl:variable name="main.InformationRecipientOrg_in" select="."/>
		<informationRecipientOrg>
			<xsl:variable name="v_230" select="$main.InformationRecipientOrg_in/oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s6_in_s6" select="$v_230/self::node()"/>
			<xsl:variable name="v_234" select="$main.InformationRecipientOrg_in/oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s6_in_s6" select="$v_234/self::node()"/>
			<xsl:apply-templates mode="main_m109" select="$main.OrgId_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m110" select="$main.OrgName_subset_s6_in_s6"/>
		</informationRecipientOrg>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m109">
		<xsl:variable name="main.OrgId_subset_s6_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_231" select="$main.OrgId_subset_s6_in/@nullFlavor"/>
			<xsl:variable name="root_232" select="$main.OrgId_subset_s6_in/@root"/>
			<xsl:variable name="extension_233" select="$main.OrgId_subset_s6_in/@extension"/>
			<xsl:if test="string($nullFlavor_231)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_231"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_232)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_232"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_233)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_233"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m110">
		<xsl:variable name="main.OrgName_subset_s6_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_235" select="$main.OrgName_subset_s6_in/self::node()"/>
			<xsl:value-of select="$textConten_235"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:informationRecipient_IntendedRecipient_WorkGp" mode="main_m111">
		<xsl:variable name="main.InformationRecipientworkgroup_in" select="."/>
		<informationRecipientworkgroup>
			<xsl:variable name="v_237" select="$main.InformationRecipientworkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/npfitlc:recipientRoleCode"/>
			<xsl:variable name="main.RecipientRoleCode_in" select="$v_237/self::node()"/>
			<xsl:variable name="v_241" select="$main.InformationRecipientworkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:id"/>
			<xsl:variable name="main.Id_subset_s9_in_s9" select="$v_241/self::node()"/>
			<xsl:variable name="v_245" select="$main.InformationRecipientworkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s7_in_s7" select="$v_245/self::node()"/>
			<xsl:variable name="v_249" select="$main.InformationRecipientworkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s7_in_s7" select="$v_249/self::node()"/>
			<xsl:variable name="v_251" select="$main.InformationRecipientworkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s0_in_s0" select="$v_251/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145204GB02#assignedPerson') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m112" select="$main.RecipientRoleCode_in"/>
			<xsl:apply-templates mode="main_m113" select="$main.Id_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m114" select="$main.OrgId_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m115" select="$main.OrgName_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m116" select="$main.AssignedPerson_subset_s0_in_s0"/>
		</informationRecipientworkgroup>
	</xsl:template>
	<xsl:template match="npfitlc:recipientRoleCode" mode="main_m112">
		<xsl:variable name="main.RecipientRoleCode_in" select="."/>
		<recipientRoleCode>
			<xsl:variable name="code_238" select="$main.RecipientRoleCode_in/@code"/>
			<xsl:variable name="codeSystem_239" select="$main.RecipientRoleCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_240" select="$main.RecipientRoleCode_in/@displayName"/>
			<xsl:if test="string($code_238)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_238"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_239)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_239"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_240)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_240"/>
				</xsl:attribute>
			</xsl:if>
		</recipientRoleCode>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m113">
		<xsl:variable name="main.Id_subset_s9_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_242" select="$main.Id_subset_s9_in/@nullFlavor"/>
			<xsl:variable name="root_243" select="$main.Id_subset_s9_in/@root"/>
			<xsl:variable name="extension_244" select="$main.Id_subset_s9_in/@extension"/>
			<xsl:if test="string($nullFlavor_242)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_242"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_243)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_243"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_244)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_244"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m114">
		<xsl:variable name="main.OrgId_subset_s7_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_246" select="$main.OrgId_subset_s7_in/@nullFlavor"/>
			<xsl:variable name="root_247" select="$main.OrgId_subset_s7_in/@root"/>
			<xsl:variable name="extension_248" select="$main.OrgId_subset_s7_in/@extension"/>
			<xsl:if test="string($nullFlavor_246)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_246"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_247)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_247"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_248)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_248"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m115">
		<xsl:variable name="main.OrgName_subset_s7_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_250" select="$main.OrgName_subset_s7_in/self::node()"/>
			<xsl:value-of select="$textConten_250"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m116">
		<xsl:variable name="main.AssignedPerson_subset_s0_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_252" select="$main.AssignedPerson_subset_s0_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s6_in_s6" select="$v_252/self::node()"/>
			<xsl:apply-templates mode="main_m117" select="$main.Name_subset_s6_in_s6"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m117">
		<xsl:variable name="main.Name_subset_s6_in" select="."/>
		<name>
			<xsl:variable name="v_253" select="$main.Name_subset_s6_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s6_in_s6" select="$v_253/self::node()"/>
			<xsl:variable name="v_255" select="$main.Name_subset_s6_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s6_in_s6" select="$v_255/self::node()"/>
			<xsl:variable name="v_257" select="$main.Name_subset_s6_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s6_in_s6" select="$v_257/self::node()"/>
			<xsl:apply-templates mode="main_m118" select="$main.Prefix_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m119" select="$main.Given_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m120" select="$main.Family_subset_s6_in_s6"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m118">
		<xsl:variable name="main.Prefix_subset_s6_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_254" select="$main.Prefix_subset_s6_in/self::node()"/>
			<xsl:value-of select="$textConten_254"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m119">
		<xsl:variable name="main.Given_subset_s6_in" select="."/>
		<given>
			<xsl:variable name="textConten_256" select="$main.Given_subset_s6_in/self::node()"/>
			<xsl:value-of select="$textConten_256"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m120">
		<xsl:variable name="main.Family_subset_s6_in" select="."/>
		<family>
			<xsl:variable name="textConten_258" select="$main.Family_subset_s6_in/self::node()"/>
			<xsl:value-of select="$textConten_258"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:authenticator_AssignedEntity" mode="main_m121">
		<xsl:variable name="main.Authenticator_in" select="."/>
		<authenticator>
			<xsl:variable name="v_260" select="$main.Authenticator_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s3_in_s3" select="$v_260/self::node()"/>
			<xsl:variable name="v_262" select="$main.Authenticator_in/oms:signatureCode"/>
			<xsl:variable name="main.SignatureCode_in" select="$v_262/self::node()"/>
			<xsl:variable name="v_265" select="$main.Authenticator_in/oms:COCD_TP145205GB01.AssignedEntity/oms:id"/>
			<xsl:variable name="main.Id_subset_s10_in_s10" select="$v_265/self::node()"/>
			<xsl:variable name="v_269" select="$main.Authenticator_in/oms:COCD_TP145205GB01.AssignedEntity/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.AuthenName_in" select="$v_269/self::node()"/>
			<xsl:variable name="v_276" select="$main.Authenticator_in/oms:COCD_TP145205GB01.AssignedEntity/oms:representedOrganization"/>
			<xsl:variable name="main.RepresentedOrganization_subset_s0_in_s0" select="$v_276/self::node()[(@classCode = 'ORG') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145205GB01#representedOrganization') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m122" select="$main.Time_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m123" select="$main.SignatureCode_in"/>
			<xsl:apply-templates mode="main_m124" select="$main.Id_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m125" select="$main.AuthenName_in"/>
			<xsl:apply-templates mode="main_m129" select="$main.RepresentedOrganization_subset_s0_in_s0"/>
		</authenticator>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m122">
		<xsl:variable name="main.Time_subset_s3_in" select="."/>
		<time>
			<xsl:variable name="value_261" select="$main.Time_subset_s3_in/@value"/>
			<xsl:if test="string($value_261)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_261"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:signatureCode" mode="main_m123">
		<xsl:variable name="main.SignatureCode_in" select="."/>
		<signatureCode>
			<xsl:variable name="nullFlavor_263" select="$main.SignatureCode_in/@nullFlavor"/>
			<xsl:variable name="code_264" select="$main.SignatureCode_in/@code"/>
			<xsl:if test="string($nullFlavor_263)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_263"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($code_264)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_264"/>
				</xsl:attribute>
			</xsl:if>
		</signatureCode>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m124">
		<xsl:variable name="main.Id_subset_s10_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_266" select="$main.Id_subset_s10_in/@nullFlavor"/>
			<xsl:variable name="root_267" select="$main.Id_subset_s10_in/@root"/>
			<xsl:variable name="extension_268" select="$main.Id_subset_s10_in/@extension"/>
			<xsl:if test="string($nullFlavor_266)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_266"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_267)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_267"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_268)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_268"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m125">
		<xsl:variable name="main.AuthenName_in" select="."/>
		<authenName>
			<xsl:variable name="v_270" select="$main.AuthenName_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s7_in_s7" select="$v_270/self::node()"/>
			<xsl:variable name="v_272" select="$main.AuthenName_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s7_in_s7" select="$v_272/self::node()"/>
			<xsl:variable name="v_274" select="$main.AuthenName_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s7_in_s7" select="$v_274/self::node()"/>
			<xsl:apply-templates mode="main_m126" select="$main.Prefix_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m127" select="$main.Given_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m128" select="$main.Family_subset_s7_in_s7"/>
		</authenName>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m126">
		<xsl:variable name="main.Prefix_subset_s7_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_271" select="$main.Prefix_subset_s7_in/self::node()"/>
			<xsl:value-of select="$textConten_271"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m127">
		<xsl:variable name="main.Given_subset_s7_in" select="."/>
		<given>
			<xsl:variable name="textConten_273" select="$main.Given_subset_s7_in/self::node()"/>
			<xsl:value-of select="$textConten_273"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m128">
		<xsl:variable name="main.Family_subset_s7_in" select="."/>
		<family>
			<xsl:variable name="textConten_275" select="$main.Family_subset_s7_in/self::node()"/>
			<xsl:value-of select="$textConten_275"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:representedOrganization" mode="main_m129">
		<xsl:variable name="main.RepresentedOrganization_subset_s0_in" select="."/>
		<representedOrganization>
			<xsl:variable name="v_277" select="$main.RepresentedOrganization_subset_s0_in/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s8_in_s8" select="$v_277/self::node()"/>
			<xsl:variable name="v_281" select="$main.RepresentedOrganization_subset_s0_in/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s8_in_s8" select="$v_281/self::node()"/>
			<xsl:apply-templates mode="main_m130" select="$main.OrgId_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m131" select="$main.OrgName_subset_s8_in_s8"/>
		</representedOrganization>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m130">
		<xsl:variable name="main.OrgId_subset_s8_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_278" select="$main.OrgId_subset_s8_in/@nullFlavor"/>
			<xsl:variable name="root_279" select="$main.OrgId_subset_s8_in/@root"/>
			<xsl:variable name="extension_280" select="$main.OrgId_subset_s8_in/@extension"/>
			<xsl:if test="string($nullFlavor_278)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_278"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_279)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_279"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_280)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_280"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m131">
		<xsl:variable name="main.OrgName_subset_s8_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_282" select="$main.OrgName_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_282"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:participant_AssociatedEntity" mode="main_m132">
		<xsl:variable name="main.Participant_in" select="."/>
		<participant>
			<xsl:variable name="typeCode_284" select="$main.Participant_in/@typeCode"/>
			<xsl:variable name="classCode_285" select="$main.Participant_in/oms:COCD_TP145214GB01.AssociatedEntity/@classCode"/>
			<xsl:variable name="v_286" select="$main.Participant_in/oms:COCD_TP145214GB01.AssociatedEntity/oms:id"/>
			<xsl:variable name="main.Id_subset_s11_in_s11" select="$v_286/self::node()"/>
			<xsl:variable name="v_290" select="$main.Participant_in/oms:COCD_TP145214GB01.AssociatedEntity/oms:associatedPerson"/>
			<xsl:variable name="main.AssociatedPerson_in" select="$v_290/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145214GB01#associatedPerson') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_298" select="$main.Participant_in/oms:COCD_TP145214GB01.AssociatedEntity/oms:scopingOrganization"/>
			<xsl:variable name="main.ScopingOrganization_in" select="$v_298/self::node()[(@classCode = 'ORG') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145214GB01#scopingOrganization') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:if test="string($typeCode_284)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_284"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($classCode_285)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$classCode_285"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m133" select="$main.Id_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m134" select="$main.AssociatedPerson_in"/>
			<xsl:apply-templates mode="main_m139" select="$main.ScopingOrganization_in"/>
		</participant>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m133">
		<xsl:variable name="main.Id_subset_s11_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_287" select="$main.Id_subset_s11_in/@nullFlavor"/>
			<xsl:variable name="root_288" select="$main.Id_subset_s11_in/@root"/>
			<xsl:variable name="extension_289" select="$main.Id_subset_s11_in/@extension"/>
			<xsl:if test="string($nullFlavor_287)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_287"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_288)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_288"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_289)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_289"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:associatedPerson" mode="main_m134">
		<xsl:variable name="main.AssociatedPerson_in" select="."/>
		<associatedPerson>
			<xsl:variable name="v_291" select="$main.AssociatedPerson_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s7_in_s7" select="$v_291/self::node()"/>
			<xsl:apply-templates mode="main_m135" select="$main.Name_subset_s7_in_s7"/>
		</associatedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m135">
		<xsl:variable name="main.Name_subset_s7_in" select="."/>
		<name>
			<xsl:variable name="v_292" select="$main.Name_subset_s7_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s8_in_s8" select="$v_292/self::node()"/>
			<xsl:variable name="v_294" select="$main.Name_subset_s7_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s8_in_s8" select="$v_294/self::node()"/>
			<xsl:variable name="v_296" select="$main.Name_subset_s7_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s8_in_s8" select="$v_296/self::node()"/>
			<xsl:apply-templates mode="main_m136" select="$main.Prefix_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m137" select="$main.Given_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m138" select="$main.Family_subset_s8_in_s8"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m136">
		<xsl:variable name="main.Prefix_subset_s8_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_293" select="$main.Prefix_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_293"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m137">
		<xsl:variable name="main.Given_subset_s8_in" select="."/>
		<given>
			<xsl:variable name="textConten_295" select="$main.Given_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_295"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m138">
		<xsl:variable name="main.Family_subset_s8_in" select="."/>
		<family>
			<xsl:variable name="textConten_297" select="$main.Family_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_297"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:scopingOrganization" mode="main_m139">
		<xsl:variable name="main.ScopingOrganization_in" select="."/>
		<scopingOrganization>
			<xsl:variable name="v_299" select="$main.ScopingOrganization_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s12_in_s12" select="$v_299/self::node()"/>
			<xsl:variable name="v_302" select="$main.ScopingOrganization_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s8_in_s8" select="$v_302/self::node()"/>
			<xsl:apply-templates mode="main_m140" select="$main.Id_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m141" select="$main.Name_subset_s8_in_s8"/>
		</scopingOrganization>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m140">
		<xsl:variable name="main.Id_subset_s12_in" select="."/>
		<id>
			<xsl:variable name="root_300" select="$main.Id_subset_s12_in/@root"/>
			<xsl:variable name="extension_301" select="$main.Id_subset_s12_in/@extension"/>
			<xsl:if test="string($root_300)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_300"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_301)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_301"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m141">
		<xsl:variable name="main.Name_subset_s8_in" select="."/>
		<name>
			<xsl:variable name="textConten_303" select="$main.Name_subset_s8_in/self::node()"/>
			<xsl:value-of select="$textConten_303"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:documentationOf_ServiceEvent" mode="main_m142">
		<xsl:variable name="main.DocumentOf_in" select="."/>
		<documentOf>
			<xsl:variable name="classCode_305" select="$main.DocumentOf_in/oms:COCD_TP146227GB01.ServiceEvent/@classCode"/>
			<xsl:variable name="moodCode_306" select="$main.DocumentOf_in/oms:COCD_TP146227GB01.ServiceEvent/@moodCode"/>
			<xsl:variable name="v_307" select="$main.DocumentOf_in/oms:COCD_TP146227GB01.ServiceEvent/oms:performer_AssignedEntity"/>
			<xsl:variable name="main.Performer_AssignedEntity_in" select="$v_307/self::node()[(oms:templateId/@extension = 'COCD_TP146227GB01#performer') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/@classCode = 'ASSIGNED') and (oms:COCD_TP145210GB01.AssignedEntity/oms:templateId/@extension = 'COCD_TP145210GB01#AssignedEntity') and (oms:COCD_TP145210GB01.AssignedEntity/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145210GB01#assignedPerson') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145210GB01#representedOrganization') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_330" select="$main.DocumentOf_in/oms:COCD_TP146227GB01.ServiceEvent/oms:performer_Workgroup"/>
			<xsl:variable name="main.Performer_Workgroup_in" select="$v_330/self::node()[(oms:templateId/@extension = 'COCD_TP146227GB01#performer') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145212GB02.Workgroup/@classCode = 'ASSIGNED') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@extension = 'COCD_TP145212GB02#Workgroup') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145212GB02#representedOrganization') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:if test="string($classCode_305)">
				<xsl:attribute name="classCode">
					<xsl:value-of select="$classCode_305"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($moodCode_306)">
				<xsl:attribute name="moodCode">
					<xsl:value-of select="$moodCode_306"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m143" select="$main.Performer_AssignedEntity_in"/>
			<xsl:apply-templates mode="main_m153" select="$main.Performer_Workgroup_in"/>
		</documentOf>
	</xsl:template>
	<xsl:template match="oms:performer_AssignedEntity" mode="main_m143">
		<xsl:variable name="main.Performer_AssignedEntity_in" select="."/>
		<performer_AssignedEntity>
			<xsl:variable name="typeCode_308" select="$main.Performer_AssignedEntity_in/@typeCode"/>
			<xsl:variable name="v_309" select="$main.Performer_AssignedEntity_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s4_in_s4" select="$v_309/self::node()"/>
			<xsl:variable name="v_311" select="$main.Performer_AssignedEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:id"/>
			<xsl:variable name="main.Id_subset_s13_in_s13" select="$v_311/self::node()"/>
			<xsl:variable name="v_315" select="$main.Performer_AssignedEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:code"/>
			<xsl:variable name="main.Code_subset_s6_in_s6" select="$v_315/self::node()"/>
			<xsl:variable name="v_317" select="$main.Performer_AssignedEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.Name_subset_s9_in_s9" select="$v_317/self::node()"/>
			<xsl:variable name="v_324" select="$main.Performer_AssignedEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s9_in_s9" select="$v_324/self::node()"/>
			<xsl:variable name="v_328" select="$main.Performer_AssignedEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s9_in_s9" select="$v_328/self::node()"/>
			<xsl:if test="string($typeCode_308)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_308"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m144" select="$main.Time_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m145" select="$main.Id_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m146" select="$main.Code_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m147" select="$main.Name_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m151" select="$main.OrgId_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m152" select="$main.OrgName_subset_s9_in_s9"/>
		</performer_AssignedEntity>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m144">
		<xsl:variable name="main.Time_subset_s4_in" select="."/>
		<time>
			<xsl:variable name="value_1_310" select="$main.Time_subset_s4_in/@value"/>
			<xsl:if test="string($value_1_310)">
				<xsl:attribute name="value_1">
					<xsl:value-of select="$value_1_310"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m145">
		<xsl:variable name="main.Id_subset_s13_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_312" select="$main.Id_subset_s13_in/@nullFlavor"/>
			<xsl:variable name="root_313" select="$main.Id_subset_s13_in/@root"/>
			<xsl:variable name="extension_314" select="$main.Id_subset_s13_in/@extension"/>
			<xsl:if test="string($nullFlavor_312)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_312"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_313)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_313"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_314)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_314"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m146">
		<xsl:variable name="main.Code_subset_s6_in" select="."/>
		<code>
			<xsl:variable name="code_316" select="$main.Code_subset_s6_in/@code"/>
			<xsl:if test="string($code_316)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_316"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m147">
		<xsl:variable name="main.Name_subset_s9_in" select="."/>
		<name>
			<xsl:variable name="v_318" select="$main.Name_subset_s9_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s9_in_s9" select="$v_318/self::node()"/>
			<xsl:variable name="v_320" select="$main.Name_subset_s9_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s9_in_s9" select="$v_320/self::node()"/>
			<xsl:variable name="v_322" select="$main.Name_subset_s9_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s9_in_s9" select="$v_322/self::node()"/>
			<xsl:apply-templates mode="main_m148" select="$main.Prefix_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m149" select="$main.Given_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m150" select="$main.Family_subset_s9_in_s9"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m148">
		<xsl:variable name="main.Prefix_subset_s9_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_319" select="$main.Prefix_subset_s9_in/self::node()"/>
			<xsl:value-of select="$textConten_319"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m149">
		<xsl:variable name="main.Given_subset_s9_in" select="."/>
		<given>
			<xsl:variable name="textConten_321" select="$main.Given_subset_s9_in/self::node()"/>
			<xsl:value-of select="$textConten_321"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m150">
		<xsl:variable name="main.Family_subset_s9_in" select="."/>
		<family>
			<xsl:variable name="textConten_323" select="$main.Family_subset_s9_in/self::node()"/>
			<xsl:value-of select="$textConten_323"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m151">
		<xsl:variable name="main.OrgId_subset_s9_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_325" select="$main.OrgId_subset_s9_in/@nullFlavor"/>
			<xsl:variable name="root_326" select="$main.OrgId_subset_s9_in/@root"/>
			<xsl:variable name="extension_327" select="$main.OrgId_subset_s9_in/@extension"/>
			<xsl:if test="string($nullFlavor_325)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_325"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_326)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_326"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_327)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_327"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m152">
		<xsl:variable name="main.OrgName_subset_s9_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_329" select="$main.OrgName_subset_s9_in/self::node()"/>
			<xsl:value-of select="$textConten_329"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:performer_Workgroup" mode="main_m153">
		<xsl:variable name="main.Performer_Workgroup_in" select="."/>
		<performer_Workgroup>
			<xsl:variable name="typeCode_331" select="$main.Performer_Workgroup_in/@typeCode"/>
			<xsl:variable name="v_332" select="$main.Performer_Workgroup_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s5_in_s5" select="$v_332/self::node()"/>
			<xsl:variable name="v_334" select="$main.Performer_Workgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:id"/>
			<xsl:variable name="main.Id_subset_s14_in_s14" select="$v_334/self::node()"/>
			<xsl:variable name="v_338" select="$main.Performer_Workgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:code"/>
			<xsl:variable name="main.Code_subset_s7_in_s7" select="$v_338/self::node()"/>
			<xsl:variable name="v_340" select="$main.Performer_Workgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s10_in_s10" select="$v_340/self::node()"/>
			<xsl:variable name="v_344" select="$main.Performer_Workgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s10_in_s10" select="$v_344/self::node()"/>
			<xsl:variable name="v_346" select="$main.Performer_Workgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s1_in_s1" select="$v_346/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145212GB02#assignedPerson') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:if test="string($typeCode_331)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_331"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m154" select="$main.Time_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m155" select="$main.Id_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m156" select="$main.Code_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m157" select="$main.OrgId_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m158" select="$main.OrgName_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m159" select="$main.AssignedPerson_subset_s1_in_s1"/>
		</performer_Workgroup>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m154">
		<xsl:variable name="main.Time_subset_s5_in" select="."/>
		<time>
			<xsl:variable name="value_2_333" select="$main.Time_subset_s5_in/@value"/>
			<xsl:if test="string($value_2_333)">
				<xsl:attribute name="value_2">
					<xsl:value-of select="$value_2_333"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m155">
		<xsl:variable name="main.Id_subset_s14_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_335" select="$main.Id_subset_s14_in/@nullFlavor"/>
			<xsl:variable name="root_336" select="$main.Id_subset_s14_in/@root"/>
			<xsl:variable name="extension_337" select="$main.Id_subset_s14_in/@extension"/>
			<xsl:if test="string($nullFlavor_335)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_335"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_336)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_336"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_337)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_337"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m156">
		<xsl:variable name="main.Code_subset_s7_in" select="."/>
		<code>
			<xsl:variable name="code_339" select="$main.Code_subset_s7_in/@code"/>
			<xsl:if test="string($code_339)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_339"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m157">
		<xsl:variable name="main.OrgId_subset_s10_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_341" select="$main.OrgId_subset_s10_in/@nullFlavor"/>
			<xsl:variable name="root_342" select="$main.OrgId_subset_s10_in/@root"/>
			<xsl:variable name="extension_343" select="$main.OrgId_subset_s10_in/@extension"/>
			<xsl:if test="string($nullFlavor_341)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_341"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_342)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_342"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_343)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_343"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m158">
		<xsl:variable name="main.OrgName_subset_s10_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_345" select="$main.OrgName_subset_s10_in/self::node()"/>
			<xsl:value-of select="$textConten_345"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m159">
		<xsl:variable name="main.AssignedPerson_subset_s1_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_347" select="$main.AssignedPerson_subset_s1_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s10_in_s10" select="$v_347/self::node()"/>
			<xsl:apply-templates mode="main_m160" select="$main.Name_subset_s10_in_s10"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m160">
		<xsl:variable name="main.Name_subset_s10_in" select="."/>
		<name>
			<xsl:variable name="v_348" select="$main.Name_subset_s10_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s10_in_s10" select="$v_348/self::node()"/>
			<xsl:variable name="v_350" select="$main.Name_subset_s10_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s10_in_s10" select="$v_350/self::node()"/>
			<xsl:variable name="v_352" select="$main.Name_subset_s10_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s10_in_s10" select="$v_352/self::node()"/>
			<xsl:apply-templates mode="main_m161" select="$main.Prefix_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m162" select="$main.Given_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m163" select="$main.Family_subset_s10_in_s10"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m161">
		<xsl:variable name="main.Prefix_subset_s10_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_349" select="$main.Prefix_subset_s10_in/self::node()"/>
			<xsl:value-of select="$textConten_349"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m162">
		<xsl:variable name="main.Given_subset_s10_in" select="."/>
		<given>
			<xsl:variable name="textConten_351" select="$main.Given_subset_s10_in/self::node()"/>
			<xsl:value-of select="$textConten_351"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m163">
		<xsl:variable name="main.Family_subset_s10_in" select="."/>
		<family>
			<xsl:variable name="textConten_353" select="$main.Family_subset_s10_in/self::node()"/>
			<xsl:value-of select="$textConten_353"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:relatedDocument" mode="main_m164">
		<xsl:variable name="main.RelatedDocument_in" select="."/>
		<relatedDocument>
			<xsl:variable name="typeCode_355" select="$main.RelatedDocument_in/@typeCode"/>
			<xsl:variable name="v_356" select="$main.RelatedDocument_in/oms:parentDocument/oms:id"/>
			<xsl:variable name="main.Id_subset_s15_in_s15" select="$v_356/self::node()"/>
			<xsl:variable name="v_360" select="$main.RelatedDocument_in/oms:parentDocument/oms:code"/>
			<xsl:variable name="main.Code_subset_s8_in_s8" select="$v_360/self::node()"/>
			<xsl:variable name="v_364" select="$main.RelatedDocument_in/oms:parentDocument/oms:text"/>
			<xsl:variable name="main.Text_in" select="$v_364/self::node()"/>
			<xsl:variable name="v_366" select="$main.RelatedDocument_in/oms:parentDocument/oms:setId"/>
			<xsl:variable name="main.SetId_subset_s0_in_s0" select="$v_366/self::node()"/>
			<xsl:variable name="v_369" select="$main.RelatedDocument_in/oms:parentDocument/oms:versionNumber"/>
			<xsl:variable name="main.VersionNumber_subset_s0_in_s0" select="$v_369/self::node()"/>
			<xsl:if test="string($typeCode_355)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_355"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m165" select="$main.Id_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m166" select="$main.Code_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m167" select="$main.Text_in"/>
			<xsl:apply-templates mode="main_m168" select="$main.SetId_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m169" select="$main.VersionNumber_subset_s0_in_s0"/>
		</relatedDocument>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m165">
		<xsl:variable name="main.Id_subset_s15_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_357" select="$main.Id_subset_s15_in/@nullFlavor"/>
			<xsl:variable name="root_358" select="$main.Id_subset_s15_in/@root"/>
			<xsl:variable name="extension_359" select="$main.Id_subset_s15_in/@extension"/>
			<xsl:if test="string($nullFlavor_357)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_357"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_358)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_358"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_359)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_359"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m166">
		<xsl:variable name="main.Code_subset_s8_in" select="."/>
		<code>
			<xsl:variable name="code_361" select="$main.Code_subset_s8_in/@code"/>
			<xsl:variable name="codeSystem_362" select="$main.Code_subset_s8_in/@codeSystem"/>
			<xsl:variable name="displayNam_363" select="$main.Code_subset_s8_in/@displayName"/>
			<xsl:if test="string($code_361)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_361"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_362)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_362"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_363)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_363"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m167">
		<xsl:variable name="main.Text_in" select="."/>
		<text>
			<xsl:variable name="textConten_365" select="$main.Text_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:setId" mode="main_m168">
		<xsl:variable name="main.SetId_subset_s0_in" select="."/>
		<setId>
			<xsl:variable name="root_367" select="$main.SetId_subset_s0_in/@root"/>
			<xsl:variable name="extension_368" select="$main.SetId_subset_s0_in/@extension"/>
			<xsl:if test="string($root_367)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_367"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_368)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_368"/>
				</xsl:attribute>
			</xsl:if>
		</setId>
	</xsl:template>
	<xsl:template match="oms:versionNumber" mode="main_m169">
		<xsl:variable name="main.VersionNumber_subset_s0_in" select="."/>
		<versionNumber>
			<xsl:variable name="value_370" select="$main.VersionNumber_subset_s0_in/@value"/>
			<xsl:if test="string($value_370)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_370"/>
				</xsl:attribute>
			</xsl:if>
		</versionNumber>
	</xsl:template>
	<xsl:template match="oms:authorization_Consent" mode="main_m170">
		<xsl:variable name="main.Authorization_in" select="."/>
		<authorization>
			<xsl:variable name="v_372" select="$main.Authorization_in/oms:COCD_TP146226GB01.Consent/oms:code"/>
			<xsl:variable name="main.ConsentCode_in" select="$v_372/self::node()"/>
			<xsl:apply-templates mode="main_m171" select="$main.ConsentCode_in"/>
		</authorization>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m171">
		<xsl:variable name="main.ConsentCode_in" select="."/>
		<consentCode>
			<xsl:variable name="code_373" select="$main.ConsentCode_in/@code"/>
			<xsl:variable name="codeSystem_374" select="$main.ConsentCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_375" select="$main.ConsentCode_in/@displayName"/>
			<xsl:if test="string($code_373)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_373"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_374)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_374"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_375)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_375"/>
				</xsl:attribute>
			</xsl:if>
		</consentCode>
	</xsl:template>
	<xsl:template match="oms:COCD_TP146228GB01.EncompassingEncounter" mode="main_m172">
		<xsl:variable name="main.EncompassingEncounter_in" select="."/>
		<encompassingEncounter>
			<xsl:variable name="v_377" select="$main.EncompassingEncounter_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s16_in_s16" select="$v_377/self::node()"/>
			<xsl:variable name="v_379" select="$main.EncompassingEncounter_in/oms:code"/>
			<xsl:variable name="main.EncounterCode_in" select="$v_379/self::node()"/>
			<xsl:variable name="v_383" select="$main.EncompassingEncounter_in/oms:effectiveTime"/>
			<xsl:variable name="main.EffectiveTime_subset_s0_in_s0" select="$v_383/self::node()"/>
			<xsl:variable name="v_388" select="$main.EncompassingEncounter_in/oms:dischargeDispositionCode"/>
			<xsl:variable name="main.DischargeDispositionCode_in" select="$v_388/self::node()"/>
			<xsl:variable name="v_391" select="$main.EncompassingEncounter_in/oms:encounterParticipant_AssignedEntity"/>
			<xsl:variable name="main.EncounterParticipantEntity_in" select="$v_391/self::node()[(oms:templateId/@extension = 'COCD_TP146228GB01#encounterParticipant') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/@classCode = 'ASSIGNED') and (oms:COCD_TP145210GB01.AssignedEntity/oms:templateId/@extension = 'COCD_TP145210GB01#AssignedEntity') and (oms:COCD_TP145210GB01.AssignedEntity/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145210GB01#assignedPerson') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145210GB01#representedOrganization') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_415" select="$main.EncompassingEncounter_in/oms:encounterParticipant_Workgroup"/>
			<xsl:variable name="main.EncounterParticipantWorkgroup_in" select="$v_415/self::node()[(oms:templateId/@extension = 'COCD_TP146228GB01#encounterParticipant') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145212GB02.Workgroup/@classCode = 'ASSIGNED') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@extension = 'COCD_TP145212GB02#Workgroup') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145212GB02#representedOrganization') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_437" select="$main.EncompassingEncounter_in/oms:location_HealthCareFacility_Univ"/>
			<xsl:variable name="main.LocationUniversal_in" select="$v_437/self::node()[(@typeCode = 'LOC') and (oms:templateId/@extension = 'COCD_TP146228GB01#location') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145211GB01.HealthCareFacility_Univ/@classCode = 'SDLOC') and (oms:COCD_TP145211GB01.HealthCareFacility_Univ/oms:templateId/@extension = 'COCD_TP145211GB01#HealthCareFacility') and (oms:COCD_TP145211GB01.HealthCareFacility_Univ/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_442" select="$main.EncompassingEncounter_in/oms:responsibleParty_AssignedEntity"/>
			<xsl:variable name="main.ResponsiblePartyEntity_in" select="$v_442/self::node()[(@typeCode = 'RESP') and (oms:templateId/@extension = 'COCD_TP146228GB01#responsibleParty') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/@classCode = 'ASSIGNED') and (oms:COCD_TP145210GB01.AssignedEntity/oms:templateId/@extension = 'COCD_TP145210GB01#AssignedEntity') and (oms:COCD_TP145210GB01.AssignedEntity/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145210GB01#assignedPerson') and (oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145210GB01#representedOrganization') and (oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_462" select="$main.EncompassingEncounter_in/oms:responsibleParty_Workgroup"/>
			<xsl:variable name="main.ResponsiblePartyWorkgroup_in" select="$v_462/self::node()[(@typeCode = 'RESP') and (oms:templateId/@extension = 'COCD_TP146228GB01#responsibleParty') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145212GB02.Workgroup/@classCode = 'ASSIGNED') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@extension = 'COCD_TP145212GB02#Workgroup') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145212GB02#representedOrganization') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m173" select="$main.Id_subset_s16_in_s16"/>
			<xsl:apply-templates mode="main_m174" select="$main.EncounterCode_in"/>
			<xsl:apply-templates mode="main_m175" select="$main.EffectiveTime_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m178" select="$main.DischargeDispositionCode_in"/>
			<xsl:apply-templates mode="main_m179" select="$main.EncounterParticipantEntity_in"/>
			<xsl:apply-templates mode="main_m189" select="$main.EncounterParticipantWorkgroup_in"/>
			<xsl:apply-templates mode="main_m199" select="$main.LocationUniversal_in"/>
			<xsl:apply-templates mode="main_m201" select="$main.ResponsiblePartyEntity_in"/>
			<xsl:apply-templates mode="main_m210" select="$main.ResponsiblePartyWorkgroup_in"/>
		</encompassingEncounter>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m173">
		<xsl:variable name="main.Id_subset_s16_in" select="."/>
		<id>
			<xsl:variable name="root_378" select="$main.Id_subset_s16_in/@root"/>
			<xsl:if test="string($root_378)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_378"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m174">
		<xsl:variable name="main.EncounterCode_in" select="."/>
		<encounterCode>
			<xsl:variable name="code_380" select="$main.EncounterCode_in/@code"/>
			<xsl:variable name="codeSystem_381" select="$main.EncounterCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_382" select="$main.EncounterCode_in/@displayName"/>
			<xsl:if test="string($code_380)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_380"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_381)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_381"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_382)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_382"/>
				</xsl:attribute>
			</xsl:if>
		</encounterCode>
	</xsl:template>
	<xsl:template match="oms:effectiveTime" mode="main_m175">
		<xsl:variable name="main.EffectiveTime_subset_s0_in" select="."/>
		<effectiveTime>
			<xsl:variable name="v_384" select="$main.EffectiveTime_subset_s0_in/oms:low"/>
			<xsl:variable name="main.Low_in" select="$v_384/self::node()"/>
			<xsl:variable name="v_386" select="$main.EffectiveTime_subset_s0_in/oms:high"/>
			<xsl:variable name="main.High_in" select="$v_386/self::node()"/>
			<xsl:apply-templates mode="main_m176" select="$main.Low_in"/>
			<xsl:apply-templates mode="main_m177" select="$main.High_in"/>
		</effectiveTime>
	</xsl:template>
	<xsl:template match="oms:low" mode="main_m176">
		<xsl:variable name="main.Low_in" select="."/>
		<low>
			<xsl:variable name="value_385" select="$main.Low_in/@value"/>
			<xsl:if test="string($value_385)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_385"/>
				</xsl:attribute>
			</xsl:if>
		</low>
	</xsl:template>
	<xsl:template match="oms:high" mode="main_m177">
		<xsl:variable name="main.High_in" select="."/>
		<high>
			<xsl:variable name="value_387" select="$main.High_in/@value"/>
			<xsl:if test="string($value_387)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_387"/>
				</xsl:attribute>
			</xsl:if>
		</high>
	</xsl:template>
	<xsl:template match="oms:dischargeDispositionCode" mode="main_m178">
		<xsl:variable name="main.DischargeDispositionCode_in" select="."/>
		<dischargeDispositionCode>
			<xsl:variable name="nullFlavor_389" select="$main.DischargeDispositionCode_in/@nullFlavor"/>
			<xsl:variable name="code_390" select="$main.DischargeDispositionCode_in/@code"/>
			<xsl:if test="string($nullFlavor_389)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_389"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($code_390)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_390"/>
				</xsl:attribute>
			</xsl:if>
		</dischargeDispositionCode>
	</xsl:template>
	<xsl:template match="oms:encounterParticipant_AssignedEntity" mode="main_m179">
		<xsl:variable name="main.EncounterParticipantEntity_in" select="."/>
		<encounterParticipantEntity>
			<xsl:variable name="typeCode_392" select="$main.EncounterParticipantEntity_in/@typeCode"/>
			<xsl:variable name="v_393" select="$main.EncounterParticipantEntity_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s6_in_s6" select="$v_393/self::node()"/>
			<xsl:variable name="v_396" select="$main.EncounterParticipantEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:id"/>
			<xsl:variable name="main.Id_subset_s17_in_s17" select="$v_396/self::node()"/>
			<xsl:variable name="v_400" select="$main.EncounterParticipantEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:code"/>
			<xsl:variable name="main.Code_subset_s9_in_s9" select="$v_400/self::node()"/>
			<xsl:variable name="v_402" select="$main.EncounterParticipantEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.Name_subset_s11_in_s11" select="$v_402/self::node()"/>
			<xsl:variable name="v_409" select="$main.EncounterParticipantEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s11_in_s11" select="$v_409/self::node()"/>
			<xsl:variable name="v_413" select="$main.EncounterParticipantEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s11_in_s11" select="$v_413/self::node()"/>
			<xsl:if test="string($typeCode_392)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_392"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m180" select="$main.Time_subset_s6_in_s6"/>
			<xsl:apply-templates mode="main_m181" select="$main.Id_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m182" select="$main.Code_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m183" select="$main.Name_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m187" select="$main.OrgId_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m188" select="$main.OrgName_subset_s11_in_s11"/>
		</encounterParticipantEntity>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m180">
		<xsl:variable name="main.Time_subset_s6_in" select="."/>
		<time>
			<xsl:variable name="nullFlavor_394" select="$main.Time_subset_s6_in/@nullFlavor"/>
			<xsl:variable name="value_3_395" select="$main.Time_subset_s6_in/@value"/>
			<xsl:if test="string($nullFlavor_394)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_394"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($value_3_395)">
				<xsl:attribute name="value_3">
					<xsl:value-of select="$value_3_395"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m181">
		<xsl:variable name="main.Id_subset_s17_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_397" select="$main.Id_subset_s17_in/@nullFlavor"/>
			<xsl:variable name="root_398" select="$main.Id_subset_s17_in/@root"/>
			<xsl:variable name="extension_399" select="$main.Id_subset_s17_in/@extension"/>
			<xsl:if test="string($nullFlavor_397)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_397"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_398)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_398"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_399)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_399"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m182">
		<xsl:variable name="main.Code_subset_s9_in" select="."/>
		<code>
			<xsl:variable name="code_401" select="$main.Code_subset_s9_in/@code"/>
			<xsl:if test="string($code_401)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_401"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m183">
		<xsl:variable name="main.Name_subset_s11_in" select="."/>
		<name>
			<xsl:variable name="v_403" select="$main.Name_subset_s11_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s11_in_s11" select="$v_403/self::node()"/>
			<xsl:variable name="v_405" select="$main.Name_subset_s11_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s11_in_s11" select="$v_405/self::node()"/>
			<xsl:variable name="v_407" select="$main.Name_subset_s11_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s11_in_s11" select="$v_407/self::node()"/>
			<xsl:apply-templates mode="main_m184" select="$main.Prefix_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m185" select="$main.Given_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m186" select="$main.Family_subset_s11_in_s11"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m184">
		<xsl:variable name="main.Prefix_subset_s11_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_404" select="$main.Prefix_subset_s11_in/self::node()"/>
			<xsl:value-of select="$textConten_404"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m185">
		<xsl:variable name="main.Given_subset_s11_in" select="."/>
		<given>
			<xsl:variable name="textConten_406" select="$main.Given_subset_s11_in/self::node()"/>
			<xsl:value-of select="$textConten_406"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m186">
		<xsl:variable name="main.Family_subset_s11_in" select="."/>
		<family>
			<xsl:variable name="textConten_408" select="$main.Family_subset_s11_in/self::node()"/>
			<xsl:value-of select="$textConten_408"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m187">
		<xsl:variable name="main.OrgId_subset_s11_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_410" select="$main.OrgId_subset_s11_in/@nullFlavor"/>
			<xsl:variable name="root_411" select="$main.OrgId_subset_s11_in/@root"/>
			<xsl:variable name="extension_412" select="$main.OrgId_subset_s11_in/@extension"/>
			<xsl:if test="string($nullFlavor_410)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_410"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_411)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_411"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_412)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_412"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m188">
		<xsl:variable name="main.OrgName_subset_s11_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_414" select="$main.OrgName_subset_s11_in/self::node()"/>
			<xsl:value-of select="$textConten_414"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:encounterParticipant_Workgroup" mode="main_m189">
		<xsl:variable name="main.EncounterParticipantWorkgroup_in" select="."/>
		<encounterParticipantWorkgroup>
			<xsl:variable name="typeCode_416" select="$main.EncounterParticipantWorkgroup_in/@typeCode"/>
			<xsl:variable name="v_417" select="$main.EncounterParticipantWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:id"/>
			<xsl:variable name="main.Id_subset_s18_in_s18" select="$v_417/self::node()"/>
			<xsl:variable name="v_421" select="$main.EncounterParticipantWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:code"/>
			<xsl:variable name="main.Code_subset_s10_in_s10" select="$v_421/self::node()"/>
			<xsl:variable name="v_423" select="$main.EncounterParticipantWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s12_in_s12" select="$v_423/self::node()"/>
			<xsl:variable name="v_427" select="$main.EncounterParticipantWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s12_in_s12" select="$v_427/self::node()"/>
			<xsl:variable name="v_429" select="$main.EncounterParticipantWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s2_in_s2" select="$v_429/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145212GB02#assignedPerson') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:if test="string($typeCode_416)">
				<xsl:attribute name="typeCode">
					<xsl:value-of select="$typeCode_416"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="main_m190" select="$main.Id_subset_s18_in_s18"/>
			<xsl:apply-templates mode="main_m191" select="$main.Code_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m192" select="$main.OrgId_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m193" select="$main.OrgName_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m194" select="$main.AssignedPerson_subset_s2_in_s2"/>
		</encounterParticipantWorkgroup>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m190">
		<xsl:variable name="main.Id_subset_s18_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_418" select="$main.Id_subset_s18_in/@nullFlavor"/>
			<xsl:variable name="root_419" select="$main.Id_subset_s18_in/@root"/>
			<xsl:variable name="extension_420" select="$main.Id_subset_s18_in/@extension"/>
			<xsl:if test="string($nullFlavor_418)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_418"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_419)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_419"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_420)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_420"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m191">
		<xsl:variable name="main.Code_subset_s10_in" select="."/>
		<code>
			<xsl:variable name="code_422" select="$main.Code_subset_s10_in/@code"/>
			<xsl:if test="string($code_422)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_422"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m192">
		<xsl:variable name="main.OrgId_subset_s12_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_424" select="$main.OrgId_subset_s12_in/@nullFlavor"/>
			<xsl:variable name="root_425" select="$main.OrgId_subset_s12_in/@root"/>
			<xsl:variable name="extension_426" select="$main.OrgId_subset_s12_in/@extension"/>
			<xsl:if test="string($nullFlavor_424)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_424"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_425)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_425"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_426)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_426"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m193">
		<xsl:variable name="main.OrgName_subset_s12_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_428" select="$main.OrgName_subset_s12_in/self::node()"/>
			<xsl:value-of select="$textConten_428"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m194">
		<xsl:variable name="main.AssignedPerson_subset_s2_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_430" select="$main.AssignedPerson_subset_s2_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s12_in_s12" select="$v_430/self::node()"/>
			<xsl:apply-templates mode="main_m195" select="$main.Name_subset_s12_in_s12"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m195">
		<xsl:variable name="main.Name_subset_s12_in" select="."/>
		<name>
			<xsl:variable name="v_431" select="$main.Name_subset_s12_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s12_in_s12" select="$v_431/self::node()"/>
			<xsl:variable name="v_433" select="$main.Name_subset_s12_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s12_in_s12" select="$v_433/self::node()"/>
			<xsl:variable name="v_435" select="$main.Name_subset_s12_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s12_in_s12" select="$v_435/self::node()"/>
			<xsl:apply-templates mode="main_m196" select="$main.Prefix_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m197" select="$main.Given_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m198" select="$main.Family_subset_s12_in_s12"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m196">
		<xsl:variable name="main.Prefix_subset_s12_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_432" select="$main.Prefix_subset_s12_in/self::node()"/>
			<xsl:value-of select="$textConten_432"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m197">
		<xsl:variable name="main.Given_subset_s12_in" select="."/>
		<given>
			<xsl:variable name="textConten_434" select="$main.Given_subset_s12_in/self::node()"/>
			<xsl:value-of select="$textConten_434"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m198">
		<xsl:variable name="main.Family_subset_s12_in" select="."/>
		<family>
			<xsl:variable name="textConten_436" select="$main.Family_subset_s12_in/self::node()"/>
			<xsl:value-of select="$textConten_436"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:location_HealthCareFacility_Univ" mode="main_m199">
		<xsl:variable name="main.LocationUniversal_in" select="."/>
		<locationUniversal>
			<xsl:variable name="v_438" select="$main.LocationUniversal_in/oms:COCD_TP145211GB01.HealthCareFacility_Univ/oms:code"/>
			<xsl:variable name="main.LocCode_in" select="$v_438/self::node()"/>
			<xsl:apply-templates mode="main_m200" select="$main.LocCode_in"/>
		</locationUniversal>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m200">
		<xsl:variable name="main.LocCode_in" select="."/>
		<locCode>
			<xsl:variable name="code_439" select="$main.LocCode_in/@code"/>
			<xsl:variable name="codeSystem_440" select="$main.LocCode_in/@codeSystem"/>
			<xsl:variable name="displayNam_441" select="$main.LocCode_in/@displayName"/>
			<xsl:if test="string($code_439)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_439"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_440)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_440"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_441)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_441"/>
				</xsl:attribute>
			</xsl:if>
		</locCode>
	</xsl:template>
	<xsl:template match="oms:responsibleParty_AssignedEntity" mode="main_m201">
		<xsl:variable name="main.ResponsiblePartyEntity_in" select="."/>
		<responsiblePartyEntity>
			<xsl:variable name="v_443" select="$main.ResponsiblePartyEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:id"/>
			<xsl:variable name="main.Id_subset_s19_in_s19" select="$v_443/self::node()"/>
			<xsl:variable name="v_447" select="$main.ResponsiblePartyEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:code"/>
			<xsl:variable name="main.Code_subset_s11_in_s11" select="$v_447/self::node()"/>
			<xsl:variable name="v_449" select="$main.ResponsiblePartyEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.Name_subset_s13_in_s13" select="$v_449/self::node()"/>
			<xsl:variable name="v_456" select="$main.ResponsiblePartyEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s13_in_s13" select="$v_456/self::node()"/>
			<xsl:variable name="v_460" select="$main.ResponsiblePartyEntity_in/oms:COCD_TP145210GB01.AssignedEntity/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s13_in_s13" select="$v_460/self::node()"/>
			<xsl:apply-templates mode="main_m202" select="$main.Id_subset_s19_in_s19"/>
			<xsl:apply-templates mode="main_m203" select="$main.Code_subset_s11_in_s11"/>
			<xsl:apply-templates mode="main_m204" select="$main.Name_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m208" select="$main.OrgId_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m209" select="$main.OrgName_subset_s13_in_s13"/>
		</responsiblePartyEntity>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m202">
		<xsl:variable name="main.Id_subset_s19_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_444" select="$main.Id_subset_s19_in/@nullFlavor"/>
			<xsl:variable name="root_445" select="$main.Id_subset_s19_in/@root"/>
			<xsl:variable name="extension_446" select="$main.Id_subset_s19_in/@extension"/>
			<xsl:if test="string($nullFlavor_444)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_444"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_445)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_445"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_446)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_446"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m203">
		<xsl:variable name="main.Code_subset_s11_in" select="."/>
		<code>
			<xsl:variable name="code_448" select="$main.Code_subset_s11_in/@code"/>
			<xsl:if test="string($code_448)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_448"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m204">
		<xsl:variable name="main.Name_subset_s13_in" select="."/>
		<name>
			<xsl:variable name="v_450" select="$main.Name_subset_s13_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s13_in_s13" select="$v_450/self::node()"/>
			<xsl:variable name="v_452" select="$main.Name_subset_s13_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s13_in_s13" select="$v_452/self::node()"/>
			<xsl:variable name="v_454" select="$main.Name_subset_s13_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s13_in_s13" select="$v_454/self::node()"/>
			<xsl:apply-templates mode="main_m205" select="$main.Prefix_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m206" select="$main.Given_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m207" select="$main.Family_subset_s13_in_s13"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m205">
		<xsl:variable name="main.Prefix_subset_s13_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_451" select="$main.Prefix_subset_s13_in/self::node()"/>
			<xsl:value-of select="$textConten_451"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m206">
		<xsl:variable name="main.Given_subset_s13_in" select="."/>
		<given>
			<xsl:variable name="textConten_453" select="$main.Given_subset_s13_in/self::node()"/>
			<xsl:value-of select="$textConten_453"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m207">
		<xsl:variable name="main.Family_subset_s13_in" select="."/>
		<family>
			<xsl:variable name="textConten_455" select="$main.Family_subset_s13_in/self::node()"/>
			<xsl:value-of select="$textConten_455"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m208">
		<xsl:variable name="main.OrgId_subset_s13_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_457" select="$main.OrgId_subset_s13_in/@nullFlavor"/>
			<xsl:variable name="root_458" select="$main.OrgId_subset_s13_in/@root"/>
			<xsl:variable name="extension_459" select="$main.OrgId_subset_s13_in/@extension"/>
			<xsl:if test="string($nullFlavor_457)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_457"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_458)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_458"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_459)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_459"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m209">
		<xsl:variable name="main.OrgName_subset_s13_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_461" select="$main.OrgName_subset_s13_in/self::node()"/>
			<xsl:value-of select="$textConten_461"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:responsibleParty_Workgroup" mode="main_m210">
		<xsl:variable name="main.ResponsiblePartyWorkgroup_in" select="."/>
		<responsiblePartyWorkgroup>
			<xsl:variable name="v_463" select="$main.ResponsiblePartyWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:id"/>
			<xsl:variable name="main.Id_subset_s20_in_s20" select="$v_463/self::node()"/>
			<xsl:variable name="v_467" select="$main.ResponsiblePartyWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:code"/>
			<xsl:variable name="main.Code_subset_s12_in_s12" select="$v_467/self::node()"/>
			<xsl:variable name="v_469" select="$main.ResponsiblePartyWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s14_in_s14" select="$v_469/self::node()"/>
			<xsl:variable name="v_473" select="$main.ResponsiblePartyWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s14_in_s14" select="$v_473/self::node()"/>
			<xsl:variable name="v_475" select="$main.ResponsiblePartyWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s3_in_s3" select="$v_475/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145212GB02#assignedPerson') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m211" select="$main.Id_subset_s20_in_s20"/>
			<xsl:apply-templates mode="main_m212" select="$main.Code_subset_s12_in_s12"/>
			<xsl:apply-templates mode="main_m213" select="$main.OrgId_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m214" select="$main.OrgName_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m215" select="$main.AssignedPerson_subset_s3_in_s3"/>
		</responsiblePartyWorkgroup>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m211">
		<xsl:variable name="main.Id_subset_s20_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_464" select="$main.Id_subset_s20_in/@nullFlavor"/>
			<xsl:variable name="root_465" select="$main.Id_subset_s20_in/@root"/>
			<xsl:variable name="extension_466" select="$main.Id_subset_s20_in/@extension"/>
			<xsl:if test="string($nullFlavor_464)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_464"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_465)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_465"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_466)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_466"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m212">
		<xsl:variable name="main.Code_subset_s12_in" select="."/>
		<code>
			<xsl:variable name="code_468" select="$main.Code_subset_s12_in/@code"/>
			<xsl:if test="string($code_468)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_468"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m213">
		<xsl:variable name="main.OrgId_subset_s14_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_470" select="$main.OrgId_subset_s14_in/@nullFlavor"/>
			<xsl:variable name="root_471" select="$main.OrgId_subset_s14_in/@root"/>
			<xsl:variable name="extension_472" select="$main.OrgId_subset_s14_in/@extension"/>
			<xsl:if test="string($nullFlavor_470)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_470"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_471)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_471"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_472)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_472"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m214">
		<xsl:variable name="main.OrgName_subset_s14_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_474" select="$main.OrgName_subset_s14_in/self::node()"/>
			<xsl:value-of select="$textConten_474"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m215">
		<xsl:variable name="main.AssignedPerson_subset_s3_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_476" select="$main.AssignedPerson_subset_s3_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s14_in_s14" select="$v_476/self::node()"/>
			<xsl:apply-templates mode="main_m216" select="$main.Name_subset_s14_in_s14"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m216">
		<xsl:variable name="main.Name_subset_s14_in" select="."/>
		<name>
			<xsl:variable name="v_477" select="$main.Name_subset_s14_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s14_in_s14" select="$v_477/self::node()"/>
			<xsl:variable name="v_479" select="$main.Name_subset_s14_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s14_in_s14" select="$v_479/self::node()"/>
			<xsl:variable name="v_481" select="$main.Name_subset_s14_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s14_in_s14" select="$v_481/self::node()"/>
			<xsl:apply-templates mode="main_m217" select="$main.Prefix_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m218" select="$main.Given_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m219" select="$main.Family_subset_s14_in_s14"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m217">
		<xsl:variable name="main.Prefix_subset_s14_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_478" select="$main.Prefix_subset_s14_in/self::node()"/>
			<xsl:value-of select="$textConten_478"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m218">
		<xsl:variable name="main.Given_subset_s14_in" select="."/>
		<given>
			<xsl:variable name="textConten_480" select="$main.Given_subset_s14_in/self::node()"/>
			<xsl:value-of select="$textConten_480"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m219">
		<xsl:variable name="main.Family_subset_s14_in" select="."/>
		<family>
			<xsl:variable name="textConten_482" select="$main.Family_subset_s14_in/self::node()"/>
			<xsl:value-of select="$textConten_482"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:bodyChoiceStructuredBody" mode="main_m220">
		<xsl:variable name="main.StructuredBody_in" select="."/>
		<structuredBody>
			<xsl:variable name="v_484" select="$main.StructuredBody_in/oms:component/oms:classificationSection/oms:id"/>
			<xsl:variable name="main.Id_subset_s21_in_s21" select="$v_484/self::node()"/>
			<xsl:variable name="v_486" select="$main.StructuredBody_in/oms:component/oms:classificationSection/oms:component_Section1"/>
			<xsl:variable name="main.ComponentSection_in" select="$v_486/self::node()[(@typeCode = 'COMP') and (@contextConductionInd = 'true') and (oms:COCD_TP146229GB01.Section1/@classCode = 'DOCSECT') and (oms:COCD_TP146229GB01.Section1/@moodCode = 'EVN') and (oms:COCD_TP146229GB01.Section1/oms:templateId/@extension = 'COCD_TP146229GB01#Section1') and (oms:COCD_TP146229GB01.Section1/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m221" select="$main.Id_subset_s21_in_s21"/>
			<xsl:apply-templates mode="main_m222" select="$main.ComponentSection_in"/>
		</structuredBody>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m221">
		<xsl:variable name="main.Id_subset_s21_in" select="."/>
		<id>
			<xsl:variable name="root_485" select="$main.Id_subset_s21_in/@root"/>
			<xsl:if test="string($root_485)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_485"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:component_Section1" mode="main_m222">
		<xsl:variable name="main.ComponentSection_in" select="."/>
		<componentSection>
			<xsl:variable name="v_487" select="$main.ComponentSection_in/oms:COCD_TP146229GB01.Section1/oms:id"/>
			<xsl:variable name="main.Id_subset_s22_in_s22" select="$v_487/self::node()"/>
			<xsl:variable name="v_491" select="$main.ComponentSection_in/oms:COCD_TP146229GB01.Section1/oms:text"/>
			<xsl:variable name="main.Text_subset_s0_in_s0" select="$v_491/self::node()"/>
			<xsl:variable name="v_493" select="$main.ComponentSection_in/oms:COCD_TP146229GB01.Section1/oms:title"/>
			<xsl:variable name="main.Title_subset_s0_in_s0" select="$v_493/self::node()"/>
			<xsl:variable name="v_495" select="$main.ComponentSection_in/oms:COCD_TP146229GB01.Section1/oms:component1"/>
			<xsl:variable name="main.Component1_in" select="$v_495/self::node()[(@typeCode = 'COMP') and (@contextConductionInd = 'true') and (oms:templateId/@extension = 'COCD_TP146229GB01#component1') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_545" select="$main.ComponentSection_in/oms:COCD_TP146229GB01.Section1/oms:authorTextSection_AssignedAuthor_Person"/>
			<xsl:variable name="main.AuthorTextSectionPerson_in" select="$v_545/self::node()[(@typeCode = 'AUT') and (@contextControlCode = 'OP') and (oms:templateId/@extension = 'COCD_TP146229GB01#author') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:functionCode/@code = 'OA') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/@classCode = 'ASSIGNED') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:templateId/@extension = 'COCD_TP145200GB01#AssignedAuthor') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/@classCode = 'PSN') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/@determinerCode = 'INSTANCE') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/oms:templateId/@extension = 'COCD_TP145200GB01#assignedPerson') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145200GB01#representedOrganization') and (oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_567" select="$main.ComponentSection_in/oms:COCD_TP146229GB01.Section1/oms:authorTextSection_AssignedAuthor_Anon"/>
			<xsl:variable name="main.AuthorTextSectionAnonymous_in" select="$v_567/self::node()[(@typeCode = 'AUT') and (@contextControlCode = 'OP') and (oms:templateId/@extension = 'COCD_TP146229GB01#author') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:functionCode/@code = 'OA') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/@classCode = 'ASSIGNED') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:templateId/@extension = 'COCD_TP145208GB01#AssignedAuthor') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145208GB01#representedOrganization') and (oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_582" select="$main.ComponentSection_in/oms:COCD_TP146229GB01.Section1/oms:authorTextSection_Workgroup"/>
			<xsl:variable name="main.AuthorTextSectionWorkgroup_in" select="$v_582/self::node()[(@typeCode = 'AUT') and (@contextControlCode = 'OP') and (oms:templateId/@extension = 'COCD_TP146229GB01#author') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:functionCode/@code = 'OA') and (oms:COCD_TP145212GB02.Workgroup/@classCode = 'ASSIGNED') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@extension = 'COCD_TP145212GB02#Workgroup') and (oms:COCD_TP145212GB02.Workgroup/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145212GB02#representedOrganization') and (oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:variable name="v_605" select="$main.ComponentSection_in/oms:COCD_TP146229GB01.Section1/oms:authorTextSection_AssignedAuthorDevice"/>
			<xsl:variable name="main.AuthorTextSectionDevice_in" select="$v_605/self::node()[(@typeCode = 'AUT') and (@contextControlCode = 'OP') and (oms:templateId/@extension = 'COCD_TP146229GB01#author') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:functionCode/@code = 'OA') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/@classCode = 'ASSIGNED') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:templateId/@extension = 'COCD_TP145207GB01#AssignedAuthorDevice') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/@classCode = 'DEV') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/@determinerCode = 'INSTANCE') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/oms:templateId/@extension = 'COCD_TP145207GB01#assignedAuthoringDevice') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/@classCode = 'ORG') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/@determinerCode = 'INSTANCE') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/oms:templateId/@extension = 'COCD_TP145207GB01#representedOrganization') and (oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m223" select="$main.Id_subset_s22_in_s22"/>
			<xsl:apply-templates mode="main_m224" select="$main.Text_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m225" select="$main.Title_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m226" select="$main.Component1_in"/>
			<xsl:apply-templates mode="main_m251" select="$main.AuthorTextSectionPerson_in"/>
			<xsl:apply-templates mode="main_m261" select="$main.AuthorTextSectionAnonymous_in"/>
			<xsl:apply-templates mode="main_m267" select="$main.AuthorTextSectionWorkgroup_in"/>
			<xsl:apply-templates mode="main_m278" select="$main.AuthorTextSectionDevice_in"/>
		</componentSection>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m223">
		<xsl:variable name="main.Id_subset_s22_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_488" select="$main.Id_subset_s22_in/@nullFlavor"/>
			<xsl:variable name="root_489" select="$main.Id_subset_s22_in/@root"/>
			<xsl:variable name="extension_490" select="$main.Id_subset_s22_in/@extension"/>
			<xsl:if test="string($nullFlavor_488)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_488"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_489)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_489"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_490)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_490"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m224">
		<xsl:variable name="main.Text_subset_s0_in" select="."/>
		<text>
			<xsl:variable name="textConten_492" select="$main.Text_subset_s0_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m225">
		<xsl:variable name="main.Title_subset_s0_in" select="."/>
		<title>
			<xsl:variable name="textConten_494" select="$main.Title_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_494"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:component1" mode="main_m226">
		<xsl:variable name="main.Component1_in" select="."/>
		<component1>
			<xsl:variable name="v_496" select="$main.Component1_in/oms:section2"/>
			<xsl:variable name="main.Section2_in" select="$v_496/self::node()[(@classCode = 'DOCSECT') and (@moodCode = 'EVN') and (oms:templateId/@extension = 'COCD_TP146229GB01#section2') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m227" select="$main.Section2_in"/>
		</component1>
	</xsl:template>
	<xsl:template match="oms:section2" mode="main_m227">
		<xsl:variable name="main.Section2_in" select="."/>
		<section2>
			<xsl:variable name="v_497" select="$main.Section2_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s23_in_s23" select="$v_497/self::node()"/>
			<xsl:variable name="v_501" select="$main.Section2_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s1_in_s1" select="$v_501/self::node()"/>
			<xsl:variable name="v_503" select="$main.Section2_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s1_in_s1" select="$v_503/self::node()"/>
			<xsl:variable name="v_505" select="$main.Section2_in/oms:component2"/>
			<xsl:variable name="main.Component2_in" select="$v_505/self::node()[(@typeCode = 'COMP') and (@contextConductionInd = 'true') and (oms:templateId/@extension = 'COCD_TP146229GB01#component2') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m228" select="$main.Id_subset_s23_in_s23"/>
			<xsl:apply-templates mode="main_m229" select="$main.Text_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m230" select="$main.Title_subset_s1_in_s1"/>
			<xsl:apply-templates mode="main_m231" select="$main.Component2_in"/>
		</section2>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m228">
		<xsl:variable name="main.Id_subset_s23_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_498" select="$main.Id_subset_s23_in/@nullFlavor"/>
			<xsl:variable name="root_499" select="$main.Id_subset_s23_in/@root"/>
			<xsl:variable name="extension_500" select="$main.Id_subset_s23_in/@extension"/>
			<xsl:if test="string($nullFlavor_498)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_498"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_499)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_499"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_500)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_500"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m229">
		<xsl:variable name="main.Text_subset_s1_in" select="."/>
		<text>
			<xsl:variable name="textConten_502" select="$main.Text_subset_s1_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m230">
		<xsl:variable name="main.Title_subset_s1_in" select="."/>
		<title>
			<xsl:variable name="textConten_504" select="$main.Title_subset_s1_in/self::node()"/>
			<xsl:value-of select="$textConten_504"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:component2" mode="main_m231">
		<xsl:variable name="main.Component2_in" select="."/>
		<component2>
			<xsl:variable name="v_506" select="$main.Component2_in/oms:section3"/>
			<xsl:variable name="main.Section3_in" select="$v_506/self::node()[(@classCode = 'DOCSECT') and (@moodCode = 'EVN') and (oms:templateId/@extension = 'COCD_TP146229GB01#section3') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m232" select="$main.Section3_in"/>
		</component2>
	</xsl:template>
	<xsl:template match="oms:section3" mode="main_m232">
		<xsl:variable name="main.Section3_in" select="."/>
		<section3>
			<xsl:variable name="v_507" select="$main.Section3_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s24_in_s24" select="$v_507/self::node()"/>
			<xsl:variable name="v_511" select="$main.Section3_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s2_in_s2" select="$v_511/self::node()"/>
			<xsl:variable name="v_513" select="$main.Section3_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s2_in_s2" select="$v_513/self::node()"/>
			<xsl:variable name="v_515" select="$main.Section3_in/oms:component3"/>
			<xsl:variable name="main.Component3_in" select="$v_515/self::node()[(@typeCode = 'COMP') and (@contextConductionInd = 'true') and (oms:templateId/@extension = 'COCD_TP146229GB01#component3') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m233" select="$main.Id_subset_s24_in_s24"/>
			<xsl:apply-templates mode="main_m234" select="$main.Text_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m235" select="$main.Title_subset_s2_in_s2"/>
			<xsl:apply-templates mode="main_m236" select="$main.Component3_in"/>
		</section3>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m233">
		<xsl:variable name="main.Id_subset_s24_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_508" select="$main.Id_subset_s24_in/@nullFlavor"/>
			<xsl:variable name="root_509" select="$main.Id_subset_s24_in/@root"/>
			<xsl:variable name="extension_510" select="$main.Id_subset_s24_in/@extension"/>
			<xsl:if test="string($nullFlavor_508)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_508"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_509)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_509"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_510)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_510"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m234">
		<xsl:variable name="main.Text_subset_s2_in" select="."/>
		<text>
			<xsl:variable name="textConten_512" select="$main.Text_subset_s2_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m235">
		<xsl:variable name="main.Title_subset_s2_in" select="."/>
		<title>
			<xsl:variable name="textConten_514" select="$main.Title_subset_s2_in/self::node()"/>
			<xsl:value-of select="$textConten_514"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:component3" mode="main_m236">
		<xsl:variable name="main.Component3_in" select="."/>
		<component3>
			<xsl:variable name="v_516" select="$main.Component3_in/oms:section4"/>
			<xsl:variable name="main.Section4_in" select="$v_516/self::node()[(@classCode = 'DOCSECT') and (@moodCode = 'EVN') and (oms:templateId/@extension = 'COCD_TP146229GB01#section4') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m237" select="$main.Section4_in"/>
		</component3>
	</xsl:template>
	<xsl:template match="oms:section4" mode="main_m237">
		<xsl:variable name="main.Section4_in" select="."/>
		<section4>
			<xsl:variable name="v_517" select="$main.Section4_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s25_in_s25" select="$v_517/self::node()"/>
			<xsl:variable name="v_521" select="$main.Section4_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s3_in_s3" select="$v_521/self::node()"/>
			<xsl:variable name="v_523" select="$main.Section4_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s3_in_s3" select="$v_523/self::node()"/>
			<xsl:variable name="v_525" select="$main.Section4_in/oms:component4"/>
			<xsl:variable name="main.Component4_in" select="$v_525/self::node()[(@typeCode = 'COMP') and (@contextConductionInd = 'true') and (oms:templateId/@extension = 'COCD_TP146229GB01#component4') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m238" select="$main.Id_subset_s25_in_s25"/>
			<xsl:apply-templates mode="main_m239" select="$main.Text_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m240" select="$main.Title_subset_s3_in_s3"/>
			<xsl:apply-templates mode="main_m241" select="$main.Component4_in"/>
		</section4>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m238">
		<xsl:variable name="main.Id_subset_s25_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_518" select="$main.Id_subset_s25_in/@nullFlavor"/>
			<xsl:variable name="root_519" select="$main.Id_subset_s25_in/@root"/>
			<xsl:variable name="extension_520" select="$main.Id_subset_s25_in/@extension"/>
			<xsl:if test="string($nullFlavor_518)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_518"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_519)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_519"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_520)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_520"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m239">
		<xsl:variable name="main.Text_subset_s3_in" select="."/>
		<text>
			<xsl:variable name="textConten_522" select="$main.Text_subset_s3_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m240">
		<xsl:variable name="main.Title_subset_s3_in" select="."/>
		<title>
			<xsl:variable name="textConten_524" select="$main.Title_subset_s3_in/self::node()"/>
			<xsl:value-of select="$textConten_524"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:component4" mode="main_m241">
		<xsl:variable name="main.Component4_in" select="."/>
		<component4>
			<xsl:variable name="v_526" select="$main.Component4_in/oms:section5"/>
			<xsl:variable name="main.Section5_in" select="$v_526/self::node()[(@classCode = 'DOCSECT') and (@moodCode = 'EVN') and (oms:templateId/@extension = 'COCD_TP146229GB01#section5') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m242" select="$main.Section5_in"/>
		</component4>
	</xsl:template>
	<xsl:template match="oms:section5" mode="main_m242">
		<xsl:variable name="main.Section5_in" select="."/>
		<section5>
			<xsl:variable name="v_527" select="$main.Section5_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s26_in_s26" select="$v_527/self::node()"/>
			<xsl:variable name="v_531" select="$main.Section5_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s4_in_s4" select="$v_531/self::node()"/>
			<xsl:variable name="v_533" select="$main.Section5_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s4_in_s4" select="$v_533/self::node()"/>
			<xsl:variable name="v_535" select="$main.Section5_in/oms:component5"/>
			<xsl:variable name="main.Component5_in" select="$v_535/self::node()[(@typeCode = 'COMP') and (@contextConductionInd = 'true') and (oms:templateId/@extension = 'COCD_TP146229GB01#component5') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m243" select="$main.Id_subset_s26_in_s26"/>
			<xsl:apply-templates mode="main_m244" select="$main.Text_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m245" select="$main.Title_subset_s4_in_s4"/>
			<xsl:apply-templates mode="main_m246" select="$main.Component5_in"/>
		</section5>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m243">
		<xsl:variable name="main.Id_subset_s26_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_528" select="$main.Id_subset_s26_in/@nullFlavor"/>
			<xsl:variable name="root_529" select="$main.Id_subset_s26_in/@root"/>
			<xsl:variable name="extension_530" select="$main.Id_subset_s26_in/@extension"/>
			<xsl:if test="string($nullFlavor_528)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_528"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_529)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_529"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_530)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_530"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m244">
		<xsl:variable name="main.Text_subset_s4_in" select="."/>
		<text>
			<xsl:variable name="textConten_532" select="$main.Text_subset_s4_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m245">
		<xsl:variable name="main.Title_subset_s4_in" select="."/>
		<title>
			<xsl:variable name="textConten_534" select="$main.Title_subset_s4_in/self::node()"/>
			<xsl:value-of select="$textConten_534"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:component5" mode="main_m246">
		<xsl:variable name="main.Component5_in" select="."/>
		<component5>
			<xsl:variable name="v_536" select="$main.Component5_in/oms:section6"/>
			<xsl:variable name="main.Section6_in" select="$v_536/self::node()[(@classCode = 'DOCSECT') and (@moodCode = 'EVN') and (oms:templateId/@extension = 'COCD_TP146229GB01#section6') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m247" select="$main.Section6_in"/>
		</component5>
	</xsl:template>
	<xsl:template match="oms:section6" mode="main_m247">
		<xsl:variable name="main.Section6_in" select="."/>
		<section6>
			<xsl:variable name="v_537" select="$main.Section6_in/oms:id"/>
			<xsl:variable name="main.Id_subset_s27_in_s27" select="$v_537/self::node()"/>
			<xsl:variable name="v_541" select="$main.Section6_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s5_in_s5" select="$v_541/self::node()"/>
			<xsl:variable name="v_543" select="$main.Section6_in/oms:title"/>
			<xsl:variable name="main.Title_subset_s5_in_s5" select="$v_543/self::node()"/>
			<xsl:apply-templates mode="main_m248" select="$main.Id_subset_s27_in_s27"/>
			<xsl:apply-templates mode="main_m249" select="$main.Text_subset_s5_in_s5"/>
			<xsl:apply-templates mode="main_m250" select="$main.Title_subset_s5_in_s5"/>
		</section6>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m248">
		<xsl:variable name="main.Id_subset_s27_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_538" select="$main.Id_subset_s27_in/@nullFlavor"/>
			<xsl:variable name="root_539" select="$main.Id_subset_s27_in/@root"/>
			<xsl:variable name="extension_540" select="$main.Id_subset_s27_in/@extension"/>
			<xsl:if test="string($nullFlavor_538)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_538"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_539)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_539"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_540)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_540"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m249">
		<xsl:variable name="main.Text_subset_s5_in" select="."/>
		<text>
			<xsl:variable name="textConten_542" select="$main.Text_subset_s5_in/self::node()"/>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:title" mode="main_m250">
		<xsl:variable name="main.Title_subset_s5_in" select="."/>
		<title>
			<xsl:variable name="textConten_544" select="$main.Title_subset_s5_in/self::node()"/>
			<xsl:value-of select="$textConten_544"/>
		</title>
	</xsl:template>
	<xsl:template match="oms:authorTextSection_AssignedAuthor_Person" mode="main_m251">
		<xsl:variable name="main.AuthorTextSectionPerson_in" select="."/>
		<authorTextSectionPerson>
			<xsl:variable name="v_546" select="$main.AuthorTextSectionPerson_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s7_in_s7" select="$v_546/self::node()"/>
			<xsl:variable name="v_548" select="$main.AuthorTextSectionPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:id"/>
			<xsl:variable name="main.Id_subset_s28_in_s28" select="$v_548/self::node()"/>
			<xsl:variable name="v_552" select="$main.AuthorTextSectionPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:code"/>
			<xsl:variable name="main.Code_subset_s13_in_s13" select="$v_552/self::node()"/>
			<xsl:variable name="v_554" select="$main.AuthorTextSectionPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.Name_subset_s15_in_s15" select="$v_554/self::node()"/>
			<xsl:variable name="v_561" select="$main.AuthorTextSectionPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s15_in_s15" select="$v_561/self::node()"/>
			<xsl:variable name="v_565" select="$main.AuthorTextSectionPerson_in/oms:COCD_TP145200GB01.AssignedAuthor_Person/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s15_in_s15" select="$v_565/self::node()"/>
			<xsl:apply-templates mode="main_m252" select="$main.Time_subset_s7_in_s7"/>
			<xsl:apply-templates mode="main_m253" select="$main.Id_subset_s28_in_s28"/>
			<xsl:apply-templates mode="main_m254" select="$main.Code_subset_s13_in_s13"/>
			<xsl:apply-templates mode="main_m255" select="$main.Name_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m259" select="$main.OrgId_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m260" select="$main.OrgName_subset_s15_in_s15"/>
		</authorTextSectionPerson>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m252">
		<xsl:variable name="main.Time_subset_s7_in" select="."/>
		<time>
			<xsl:variable name="value_547" select="$main.Time_subset_s7_in/@value"/>
			<xsl:if test="string($value_547)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_547"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m253">
		<xsl:variable name="main.Id_subset_s28_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_549" select="$main.Id_subset_s28_in/@nullFlavor"/>
			<xsl:variable name="root_550" select="$main.Id_subset_s28_in/@root"/>
			<xsl:variable name="extension_551" select="$main.Id_subset_s28_in/@extension"/>
			<xsl:if test="string($nullFlavor_549)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_549"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_550)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_550"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_551)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_551"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m254">
		<xsl:variable name="main.Code_subset_s13_in" select="."/>
		<code>
			<xsl:variable name="code_553" select="$main.Code_subset_s13_in/@code"/>
			<xsl:if test="string($code_553)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_553"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m255">
		<xsl:variable name="main.Name_subset_s15_in" select="."/>
		<name>
			<xsl:variable name="v_555" select="$main.Name_subset_s15_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s15_in_s15" select="$v_555/self::node()"/>
			<xsl:variable name="v_557" select="$main.Name_subset_s15_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s15_in_s15" select="$v_557/self::node()"/>
			<xsl:variable name="v_559" select="$main.Name_subset_s15_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s15_in_s15" select="$v_559/self::node()"/>
			<xsl:apply-templates mode="main_m256" select="$main.Prefix_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m257" select="$main.Given_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m258" select="$main.Family_subset_s15_in_s15"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m256">
		<xsl:variable name="main.Prefix_subset_s15_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_556" select="$main.Prefix_subset_s15_in/self::node()"/>
			<xsl:value-of select="$textConten_556"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m257">
		<xsl:variable name="main.Given_subset_s15_in" select="."/>
		<given>
			<xsl:variable name="textConten_558" select="$main.Given_subset_s15_in/self::node()"/>
			<xsl:value-of select="$textConten_558"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m258">
		<xsl:variable name="main.Family_subset_s15_in" select="."/>
		<family>
			<xsl:variable name="textConten_560" select="$main.Family_subset_s15_in/self::node()"/>
			<xsl:value-of select="$textConten_560"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m259">
		<xsl:variable name="main.OrgId_subset_s15_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_562" select="$main.OrgId_subset_s15_in/@nullFlavor"/>
			<xsl:variable name="root_563" select="$main.OrgId_subset_s15_in/@root"/>
			<xsl:variable name="extension_564" select="$main.OrgId_subset_s15_in/@extension"/>
			<xsl:if test="string($nullFlavor_562)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_562"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_563)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_563"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_564)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_564"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m260">
		<xsl:variable name="main.OrgName_subset_s15_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_566" select="$main.OrgName_subset_s15_in/self::node()"/>
			<xsl:value-of select="$textConten_566"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:authorTextSection_AssignedAuthor_Anon" mode="main_m261">
		<xsl:variable name="main.AuthorTextSectionAnonymous_in" select="."/>
		<authorTextSectionAnonymous>
			<xsl:variable name="v_568" select="$main.AuthorTextSectionAnonymous_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s8_in_s8" select="$v_568/self::node()"/>
			<xsl:variable name="v_570" select="$main.AuthorTextSectionAnonymous_in/oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:id"/>
			<xsl:variable name="main.Id_subset_s29_in_s29" select="$v_570/self::node()"/>
			<xsl:variable name="v_574" select="$main.AuthorTextSectionAnonymous_in/oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:code"/>
			<xsl:variable name="main.Code_subset_s14_in_s14" select="$v_574/self::node()"/>
			<xsl:variable name="v_576" select="$main.AuthorTextSectionAnonymous_in/oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s16_in_s16" select="$v_576/self::node()"/>
			<xsl:variable name="v_580" select="$main.AuthorTextSectionAnonymous_in/oms:COCD_TP145208GB01.AssignedAuthor_Anon/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s16_in_s16" select="$v_580/self::node()"/>
			<xsl:apply-templates mode="main_m262" select="$main.Time_subset_s8_in_s8"/>
			<xsl:apply-templates mode="main_m263" select="$main.Id_subset_s29_in_s29"/>
			<xsl:apply-templates mode="main_m264" select="$main.Code_subset_s14_in_s14"/>
			<xsl:apply-templates mode="main_m265" select="$main.OrgId_subset_s16_in_s16"/>
			<xsl:apply-templates mode="main_m266" select="$main.OrgName_subset_s16_in_s16"/>
		</authorTextSectionAnonymous>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m262">
		<xsl:variable name="main.Time_subset_s8_in" select="."/>
		<time>
			<xsl:variable name="value_569" select="$main.Time_subset_s8_in/@value"/>
			<xsl:if test="string($value_569)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_569"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m263">
		<xsl:variable name="main.Id_subset_s29_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_571" select="$main.Id_subset_s29_in/@nullFlavor"/>
			<xsl:variable name="root_572" select="$main.Id_subset_s29_in/@root"/>
			<xsl:variable name="extension_573" select="$main.Id_subset_s29_in/@extension"/>
			<xsl:if test="string($nullFlavor_571)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_571"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_572)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_572"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_573)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_573"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m264">
		<xsl:variable name="main.Code_subset_s14_in" select="."/>
		<code>
			<xsl:variable name="code_575" select="$main.Code_subset_s14_in/@code"/>
			<xsl:if test="string($code_575)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_575"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m265">
		<xsl:variable name="main.OrgId_subset_s16_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_577" select="$main.OrgId_subset_s16_in/@nullFlavor"/>
			<xsl:variable name="root_578" select="$main.OrgId_subset_s16_in/@root"/>
			<xsl:variable name="extension_579" select="$main.OrgId_subset_s16_in/@extension"/>
			<xsl:if test="string($nullFlavor_577)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_577"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_578)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_578"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_579)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_579"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m266">
		<xsl:variable name="main.OrgName_subset_s16_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_581" select="$main.OrgName_subset_s16_in/self::node()"/>
			<xsl:value-of select="$textConten_581"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:authorTextSection_Workgroup" mode="main_m267">
		<xsl:variable name="main.AuthorTextSectionWorkgroup_in" select="."/>
		<authorTextSectionWorkgroup>
			<xsl:variable name="v_583" select="$main.AuthorTextSectionWorkgroup_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s9_in_s9" select="$v_583/self::node()"/>
			<xsl:variable name="v_585" select="$main.AuthorTextSectionWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:id"/>
			<xsl:variable name="main.Id_subset_s30_in_s30" select="$v_585/self::node()"/>
			<xsl:variable name="v_589" select="$main.AuthorTextSectionWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:code"/>
			<xsl:variable name="main.Code_subset_s15_in_s15" select="$v_589/self::node()"/>
			<xsl:variable name="v_591" select="$main.AuthorTextSectionWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s17_in_s17" select="$v_591/self::node()"/>
			<xsl:variable name="v_595" select="$main.AuthorTextSectionWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s17_in_s17" select="$v_595/self::node()"/>
			<xsl:variable name="v_597" select="$main.AuthorTextSectionWorkgroup_in/oms:COCD_TP145212GB02.Workgroup/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s4_in_s4" select="$v_597/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145212GB02#assignedPerson') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m268" select="$main.Time_subset_s9_in_s9"/>
			<xsl:apply-templates mode="main_m269" select="$main.Id_subset_s30_in_s30"/>
			<xsl:apply-templates mode="main_m270" select="$main.Code_subset_s15_in_s15"/>
			<xsl:apply-templates mode="main_m271" select="$main.OrgId_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m272" select="$main.OrgName_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m273" select="$main.AssignedPerson_subset_s4_in_s4"/>
		</authorTextSectionWorkgroup>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m268">
		<xsl:variable name="main.Time_subset_s9_in" select="."/>
		<time>
			<xsl:variable name="value_584" select="$main.Time_subset_s9_in/@value"/>
			<xsl:if test="string($value_584)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_584"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m269">
		<xsl:variable name="main.Id_subset_s30_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_586" select="$main.Id_subset_s30_in/@nullFlavor"/>
			<xsl:variable name="root_587" select="$main.Id_subset_s30_in/@root"/>
			<xsl:variable name="extension_588" select="$main.Id_subset_s30_in/@extension"/>
			<xsl:if test="string($nullFlavor_586)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_586"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_587)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_587"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_588)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_588"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:code" mode="main_m270">
		<xsl:variable name="main.Code_subset_s15_in" select="."/>
		<code>
			<xsl:variable name="code_590" select="$main.Code_subset_s15_in/@code"/>
			<xsl:if test="string($code_590)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_590"/>
				</xsl:attribute>
			</xsl:if>
		</code>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m271">
		<xsl:variable name="main.OrgId_subset_s17_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_592" select="$main.OrgId_subset_s17_in/@nullFlavor"/>
			<xsl:variable name="root_593" select="$main.OrgId_subset_s17_in/@root"/>
			<xsl:variable name="extension_594" select="$main.OrgId_subset_s17_in/@extension"/>
			<xsl:if test="string($nullFlavor_592)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_592"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_593)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_593"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_594)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_594"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m272">
		<xsl:variable name="main.OrgName_subset_s17_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_596" select="$main.OrgName_subset_s17_in/self::node()"/>
			<xsl:value-of select="$textConten_596"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m273">
		<xsl:variable name="main.AssignedPerson_subset_s4_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_598" select="$main.AssignedPerson_subset_s4_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s16_in_s16" select="$v_598/self::node()"/>
			<xsl:apply-templates mode="main_m274" select="$main.Name_subset_s16_in_s16"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m274">
		<xsl:variable name="main.Name_subset_s16_in" select="."/>
		<name>
			<xsl:variable name="v_599" select="$main.Name_subset_s16_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s16_in_s16" select="$v_599/self::node()"/>
			<xsl:variable name="v_601" select="$main.Name_subset_s16_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s16_in_s16" select="$v_601/self::node()"/>
			<xsl:variable name="v_603" select="$main.Name_subset_s16_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s16_in_s16" select="$v_603/self::node()"/>
			<xsl:apply-templates mode="main_m275" select="$main.Prefix_subset_s16_in_s16"/>
			<xsl:apply-templates mode="main_m276" select="$main.Given_subset_s16_in_s16"/>
			<xsl:apply-templates mode="main_m277" select="$main.Family_subset_s16_in_s16"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m275">
		<xsl:variable name="main.Prefix_subset_s16_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_600" select="$main.Prefix_subset_s16_in/self::node()"/>
			<xsl:value-of select="$textConten_600"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m276">
		<xsl:variable name="main.Given_subset_s16_in" select="."/>
		<given>
			<xsl:variable name="textConten_602" select="$main.Given_subset_s16_in/self::node()"/>
			<xsl:value-of select="$textConten_602"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m277">
		<xsl:variable name="main.Family_subset_s16_in" select="."/>
		<family>
			<xsl:variable name="textConten_604" select="$main.Family_subset_s16_in/self::node()"/>
			<xsl:value-of select="$textConten_604"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:authorTextSection_AssignedAuthorDevice" mode="main_m278">
		<xsl:variable name="main.AuthorTextSectionDevice_in" select="."/>
		<authorTextSectionDevice>
			<xsl:variable name="v_606" select="$main.AuthorTextSectionDevice_in/oms:time"/>
			<xsl:variable name="main.Time_subset_s10_in_s10" select="$v_606/self::node()"/>
			<xsl:variable name="v_608" select="$main.AuthorTextSectionDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:id"/>
			<xsl:variable name="main.Id_subset_s31_in_s31" select="$v_608/self::node()"/>
			<xsl:variable name="v_612" select="$main.AuthorTextSectionDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/oms:manufacturerModelName"/>
			<xsl:variable name="main.DevName_subset_s0_in_s0" select="$v_612/self::node()"/>
			<xsl:variable name="v_614" select="$main.AuthorTextSectionDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:assignedAuthoringDevice/oms:softwareName"/>
			<xsl:variable name="main.SoftName_subset_s0_in_s0" select="$v_614/self::node()"/>
			<xsl:variable name="v_616" select="$main.AuthorTextSectionDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s18_in_s18" select="$v_616/self::node()"/>
			<xsl:variable name="v_620" select="$main.AuthorTextSectionDevice_in/oms:COCD_TP145207GB01.AssignedAuthorDevice/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s18_in_s18" select="$v_620/self::node()"/>
			<xsl:apply-templates mode="main_m279" select="$main.Time_subset_s10_in_s10"/>
			<xsl:apply-templates mode="main_m280" select="$main.Id_subset_s31_in_s31"/>
			<xsl:apply-templates mode="main_m281" select="$main.DevName_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m282" select="$main.SoftName_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m283" select="$main.OrgId_subset_s18_in_s18"/>
			<xsl:apply-templates mode="main_m284" select="$main.OrgName_subset_s18_in_s18"/>
		</authorTextSectionDevice>
	</xsl:template>
	<xsl:template match="oms:time" mode="main_m279">
		<xsl:variable name="main.Time_subset_s10_in" select="."/>
		<time>
			<xsl:variable name="value_607" select="$main.Time_subset_s10_in/@value"/>
			<xsl:if test="string($value_607)">
				<xsl:attribute name="value">
					<xsl:value-of select="$value_607"/>
				</xsl:attribute>
			</xsl:if>
		</time>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m280">
		<xsl:variable name="main.Id_subset_s31_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_609" select="$main.Id_subset_s31_in/@nullFlavor"/>
			<xsl:variable name="root_610" select="$main.Id_subset_s31_in/@root"/>
			<xsl:variable name="extension_611" select="$main.Id_subset_s31_in/@extension"/>
			<xsl:if test="string($nullFlavor_609)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_609"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_610)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_610"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_611)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_611"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:manufacturerModelName" mode="main_m281">
		<xsl:variable name="main.DevName_subset_s0_in" select="."/>
		<devName>
			<xsl:variable name="textConten_613" select="$main.DevName_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_613"/>
		</devName>
	</xsl:template>
	<xsl:template match="oms:softwareName" mode="main_m282">
		<xsl:variable name="main.SoftName_subset_s0_in" select="."/>
		<softName>
			<xsl:variable name="textConten_615" select="$main.SoftName_subset_s0_in/self::node()"/>
			<xsl:value-of select="$textConten_615"/>
		</softName>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m283">
		<xsl:variable name="main.OrgId_subset_s18_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_617" select="$main.OrgId_subset_s18_in/@nullFlavor"/>
			<xsl:variable name="root_618" select="$main.OrgId_subset_s18_in/@root"/>
			<xsl:variable name="extension_619" select="$main.OrgId_subset_s18_in/@extension"/>
			<xsl:if test="string($nullFlavor_617)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_617"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_618)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_618"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_619)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_619"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m284">
		<xsl:variable name="main.OrgName_subset_s18_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_621" select="$main.OrgName_subset_s18_in/self::node()"/>
			<xsl:value-of select="$textConten_621"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:bodyChoiceNonXMLBody" mode="main_m285">
		<xsl:variable name="main.NonXMLBody_in" select="."/>
		<nonXMLBody>
			<xsl:variable name="v_623" select="$main.NonXMLBody_in/oms:text"/>
			<xsl:variable name="main.Text_subset_s6_in_s6" select="$v_623/self::node()"/>
			<xsl:apply-templates mode="main_m286" select="$main.Text_subset_s6_in_s6"/>
		</nonXMLBody>
	</xsl:template>
	<xsl:template match="oms:text" mode="main_m286">
		<xsl:variable name="main.Text_subset_s6_in" select="."/>
		<text>
			<xsl:variable name="representa_624" select="$main.Text_subset_s6_in/@representation"/>
			<xsl:variable name="mediaType_625" select="$main.Text_subset_s6_in/@mediaType"/>
			<xsl:variable name="textConten_626" select="$main.Text_subset_s6_in/self::node()"/>
			<xsl:if test="string($representa_624)">
				<xsl:attribute name="representation">
					<xsl:value-of select="$representa_624"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($mediaType_625)">
				<xsl:attribute name="mediaType">
					<xsl:value-of select="$mediaType_625"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates mode="copy" select="node()"/>
		</text>
	</xsl:template>
	<xsl:template match="oms:tracker_IntendedRecipient_Person" mode="main_m287">
		<xsl:variable name="main.TrackerPerson_in" select="."/>
		<trackerPerson>
			<xsl:variable name="v_628" select="$main.TrackerPerson_in/oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:id"/>
			<xsl:variable name="main.Id_subset_s32_in_s32" select="$v_628/self::node()"/>
			<xsl:variable name="v_632" select="$main.TrackerPerson_in/oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:assignedPerson/oms:name"/>
			<xsl:variable name="main.Name_subset_s17_in_s17" select="$v_632/self::node()"/>
			<xsl:variable name="v_639" select="$main.TrackerPerson_in/oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s19_in_s19" select="$v_639/self::node()"/>
			<xsl:variable name="v_643" select="$main.TrackerPerson_in/oms:COCD_TP145202GB01.IntendedRecipient_Person/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s19_in_s19" select="$v_643/self::node()"/>
			<xsl:apply-templates mode="main_m288" select="$main.Id_subset_s32_in_s32"/>
			<xsl:apply-templates mode="main_m289" select="$main.Name_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m293" select="$main.OrgId_subset_s19_in_s19"/>
			<xsl:apply-templates mode="main_m294" select="$main.OrgName_subset_s19_in_s19"/>
		</trackerPerson>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m288">
		<xsl:variable name="main.Id_subset_s32_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_629" select="$main.Id_subset_s32_in/@nullFlavor"/>
			<xsl:variable name="root_630" select="$main.Id_subset_s32_in/@root"/>
			<xsl:variable name="extension_631" select="$main.Id_subset_s32_in/@extension"/>
			<xsl:if test="string($nullFlavor_629)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_629"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_630)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_630"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_631)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_631"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m289">
		<xsl:variable name="main.Name_subset_s17_in" select="."/>
		<name>
			<xsl:variable name="v_633" select="$main.Name_subset_s17_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s17_in_s17" select="$v_633/self::node()"/>
			<xsl:variable name="v_635" select="$main.Name_subset_s17_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s17_in_s17" select="$v_635/self::node()"/>
			<xsl:variable name="v_637" select="$main.Name_subset_s17_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s17_in_s17" select="$v_637/self::node()"/>
			<xsl:apply-templates mode="main_m290" select="$main.Prefix_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m291" select="$main.Given_subset_s17_in_s17"/>
			<xsl:apply-templates mode="main_m292" select="$main.Family_subset_s17_in_s17"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m290">
		<xsl:variable name="main.Prefix_subset_s17_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_634" select="$main.Prefix_subset_s17_in/self::node()"/>
			<xsl:value-of select="$textConten_634"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m291">
		<xsl:variable name="main.Given_subset_s17_in" select="."/>
		<given>
			<xsl:variable name="textConten_636" select="$main.Given_subset_s17_in/self::node()"/>
			<xsl:value-of select="$textConten_636"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m292">
		<xsl:variable name="main.Family_subset_s17_in" select="."/>
		<family>
			<xsl:variable name="textConten_638" select="$main.Family_subset_s17_in/self::node()"/>
			<xsl:value-of select="$textConten_638"/>
		</family>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m293">
		<xsl:variable name="main.OrgId_subset_s19_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_640" select="$main.OrgId_subset_s19_in/@nullFlavor"/>
			<xsl:variable name="root_641" select="$main.OrgId_subset_s19_in/@root"/>
			<xsl:variable name="extension_642" select="$main.OrgId_subset_s19_in/@extension"/>
			<xsl:if test="string($nullFlavor_640)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_640"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_641)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_641"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_642)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_642"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m294">
		<xsl:variable name="main.OrgName_subset_s19_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_644" select="$main.OrgName_subset_s19_in/self::node()"/>
			<xsl:value-of select="$textConten_644"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:tracker_IntendedRecipient_Org" mode="main_m295">
		<xsl:variable name="main.TrackerOrganization_in" select="."/>
		<trackerOrganization>
			<xsl:variable name="v_646" select="$main.TrackerOrganization_in/oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s20_in_s20" select="$v_646/self::node()"/>
			<xsl:variable name="v_650" select="$main.TrackerOrganization_in/oms:COCD_TP145203GB02.IntendedRecipient_Org/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s20_in_s20" select="$v_650/self::node()"/>
			<xsl:apply-templates mode="main_m296" select="$main.OrgId_subset_s20_in_s20"/>
			<xsl:apply-templates mode="main_m297" select="$main.OrgName_subset_s20_in_s20"/>
		</trackerOrganization>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m296">
		<xsl:variable name="main.OrgId_subset_s20_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_647" select="$main.OrgId_subset_s20_in/@nullFlavor"/>
			<xsl:variable name="root_648" select="$main.OrgId_subset_s20_in/@root"/>
			<xsl:variable name="extension_649" select="$main.OrgId_subset_s20_in/@extension"/>
			<xsl:if test="string($nullFlavor_647)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_647"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_648)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_648"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_649)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_649"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m297">
		<xsl:variable name="main.OrgName_subset_s20_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_651" select="$main.OrgName_subset_s20_in/self::node()"/>
			<xsl:value-of select="$textConten_651"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:tracker_IntendedRecipient_WorkGp" mode="main_m298">
		<xsl:variable name="main.TrackerWorkgroup_in" select="."/>
		<trackerWorkgroup>
			<xsl:variable name="v_653" select="$main.TrackerWorkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/npfitlc:recipientRoleCode"/>
			<xsl:variable name="main.RecipientRoleCode_subset_s0_in_s0" select="$v_653/self::node()"/>
			<xsl:variable name="v_657" select="$main.TrackerWorkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:id"/>
			<xsl:variable name="main.Id_subset_s33_in_s33" select="$v_657/self::node()"/>
			<xsl:variable name="v_661" select="$main.TrackerWorkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/oms:id"/>
			<xsl:variable name="main.OrgId_subset_s21_in_s21" select="$v_661/self::node()"/>
			<xsl:variable name="v_665" select="$main.TrackerWorkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:representedOrganization/oms:name"/>
			<xsl:variable name="main.OrgName_subset_s21_in_s21" select="$v_665/self::node()"/>
			<xsl:variable name="v_667" select="$main.TrackerWorkgroup_in/oms:COCD_TP145204GB02.IntendedRecipient_WorkGp/oms:assignedPerson"/>
			<xsl:variable name="main.AssignedPerson_subset_s5_in_s5" select="$v_667/self::node()[(@classCode = 'PSN') and (@determinerCode = 'INSTANCE') and (oms:templateId/@extension = 'COCD_TP145204GB02#assignedPerson') and (oms:templateId/@root = '2.16.840.1.113883.2.1.3.2.4.18.2')]"/>
			<xsl:apply-templates mode="main_m299" select="$main.RecipientRoleCode_subset_s0_in_s0"/>
			<xsl:apply-templates mode="main_m300" select="$main.Id_subset_s33_in_s33"/>
			<xsl:apply-templates mode="main_m301" select="$main.OrgId_subset_s21_in_s21"/>
			<xsl:apply-templates mode="main_m302" select="$main.OrgName_subset_s21_in_s21"/>
			<xsl:apply-templates mode="main_m303" select="$main.AssignedPerson_subset_s5_in_s5"/>
		</trackerWorkgroup>
	</xsl:template>
	<xsl:template match="npfitlc:recipientRoleCode" mode="main_m299">
		<xsl:variable name="main.RecipientRoleCode_subset_s0_in" select="."/>
		<recipientRoleCode>
			<xsl:variable name="code_654" select="$main.RecipientRoleCode_subset_s0_in/@code"/>
			<xsl:variable name="codeSystem_655" select="$main.RecipientRoleCode_subset_s0_in/@codeSystem"/>
			<xsl:variable name="displayNam_656" select="$main.RecipientRoleCode_subset_s0_in/@displayName"/>
			<xsl:if test="string($code_654)">
				<xsl:attribute name="code">
					<xsl:value-of select="$code_654"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($codeSystem_655)">
				<xsl:attribute name="codeSystem">
					<xsl:value-of select="$codeSystem_655"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($displayNam_656)">
				<xsl:attribute name="displayName">
					<xsl:value-of select="$displayNam_656"/>
				</xsl:attribute>
			</xsl:if>
		</recipientRoleCode>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m300">
		<xsl:variable name="main.Id_subset_s33_in" select="."/>
		<id>
			<xsl:variable name="nullFlavor_658" select="$main.Id_subset_s33_in/@nullFlavor"/>
			<xsl:variable name="root_659" select="$main.Id_subset_s33_in/@root"/>
			<xsl:variable name="extension_660" select="$main.Id_subset_s33_in/@extension"/>
			<xsl:if test="string($nullFlavor_658)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_658"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_659)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_659"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_660)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_660"/>
				</xsl:attribute>
			</xsl:if>
		</id>
	</xsl:template>
	<xsl:template match="oms:id" mode="main_m301">
		<xsl:variable name="main.OrgId_subset_s21_in" select="."/>
		<orgId>
			<xsl:variable name="nullFlavor_662" select="$main.OrgId_subset_s21_in/@nullFlavor"/>
			<xsl:variable name="root_663" select="$main.OrgId_subset_s21_in/@root"/>
			<xsl:variable name="extension_664" select="$main.OrgId_subset_s21_in/@extension"/>
			<xsl:if test="string($nullFlavor_662)">
				<xsl:attribute name="nullFlavor">
					<xsl:value-of select="$nullFlavor_662"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($root_663)">
				<xsl:attribute name="root">
					<xsl:value-of select="$root_663"/>
				</xsl:attribute>
			</xsl:if>
			<xsl:if test="string($extension_664)">
				<xsl:attribute name="extension">
					<xsl:value-of select="$extension_664"/>
				</xsl:attribute>
			</xsl:if>
		</orgId>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m302">
		<xsl:variable name="main.OrgName_subset_s21_in" select="."/>
		<orgName>
			<xsl:variable name="textConten_666" select="$main.OrgName_subset_s21_in/self::node()"/>
			<xsl:value-of select="$textConten_666"/>
		</orgName>
	</xsl:template>
	<xsl:template match="oms:assignedPerson" mode="main_m303">
		<xsl:variable name="main.AssignedPerson_subset_s5_in" select="."/>
		<assignedPerson>
			<xsl:variable name="v_668" select="$main.AssignedPerson_subset_s5_in/oms:name"/>
			<xsl:variable name="main.Name_subset_s18_in_s18" select="$v_668/self::node()"/>
			<xsl:apply-templates mode="main_m304" select="$main.Name_subset_s18_in_s18"/>
		</assignedPerson>
	</xsl:template>
	<xsl:template match="oms:name" mode="main_m304">
		<xsl:variable name="main.Name_subset_s18_in" select="."/>
		<name>
			<xsl:variable name="v_669" select="$main.Name_subset_s18_in/oms:prefix"/>
			<xsl:variable name="main.Prefix_subset_s18_in_s18" select="$v_669/self::node()"/>
			<xsl:variable name="v_671" select="$main.Name_subset_s18_in/oms:given"/>
			<xsl:variable name="main.Given_subset_s18_in_s18" select="$v_671/self::node()"/>
			<xsl:variable name="v_673" select="$main.Name_subset_s18_in/oms:family"/>
			<xsl:variable name="main.Family_subset_s18_in_s18" select="$v_673/self::node()"/>
			<xsl:apply-templates mode="main_m305" select="$main.Prefix_subset_s18_in_s18"/>
			<xsl:apply-templates mode="main_m306" select="$main.Given_subset_s18_in_s18"/>
			<xsl:apply-templates mode="main_m307" select="$main.Family_subset_s18_in_s18"/>
		</name>
	</xsl:template>
	<xsl:template match="oms:prefix" mode="main_m305">
		<xsl:variable name="main.Prefix_subset_s18_in" select="."/>
		<prefix>
			<xsl:variable name="textConten_670" select="$main.Prefix_subset_s18_in/self::node()"/>
			<xsl:value-of select="$textConten_670"/>
		</prefix>
	</xsl:template>
	<xsl:template match="oms:given" mode="main_m306">
		<xsl:variable name="main.Given_subset_s18_in" select="."/>
		<given>
			<xsl:variable name="textConten_672" select="$main.Given_subset_s18_in/self::node()"/>
			<xsl:value-of select="$textConten_672"/>
		</given>
	</xsl:template>
	<xsl:template match="oms:family" mode="main_m307">
		<xsl:variable name="main.Family_subset_s18_in" select="."/>
		<family>
			<xsl:variable name="textConten_674" select="$main.Family_subset_s18_in/self::node()"/>
			<xsl:value-of select="$textConten_674"/>
		</family>
	</xsl:template>
	<xsl:variable name="inWrapper_result">
		<xsl:apply-templates mode="inWrapper"/>
	</xsl:variable>
	<xsl:template match="@*|node()" mode="copy">
		<xsl:copy>
			<xsl:apply-templates mode="copy" select="@*|node()"/>
		</xsl:copy>
	</xsl:template>
	<xsl:template match="*" mode="inWrapper">
		<xsl:param name="path"/>
		<xsl:variable name="newPath" select="concat($path,'/',local-name(.))"/>
		<xsl:copy>
			<xsl:copy-of select="@*"/>
			<xsl:apply-templates mode="inWrapper">
				<xsl:with-param name="path" select="$newPath"/>
			</xsl:apply-templates>
		</xsl:copy>
	</xsl:template>
	<xsl:template match="v3:recordTarget[parent::v3:ClinicalDocument][v3:patientRole/v3:templateId/@extension='COCD_TP145201GB01#PatientRole'][@typeCode='RCT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','recordTarget_PatientRole_Univ')"/>
				<recordTarget_PatientRole_Univ>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</recordTarget_PatientRole_Univ>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:patientRole[parent::v3:recordTarget]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/recordTarget_PatientRole_Univ'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145201GB01.PatientRole_Univ')"/>
				<COCD_TP145201GB01.PatientRole_Univ>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145201GB01.PatientRole_Univ>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:patient[parent::v3:patientRole]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/recordTarget_PatientRole_Univ/COCD_TP145201GB01.PatientRole_Univ'">
				<xsl:variable name="newPath" select="concat($path,'/','patientPatient')"/>
				<patientPatient>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</patientPatient>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author[parent::v3:ClinicalDocument][v3:assignedAuthor/v3:templateId/@extension='COCD_TP145200GB01#AssignedAuthor'][@typeCode='AUT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','author_AssignedAuthor_Person')"/>
				<author_AssignedAuthor_Person>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author_AssignedAuthor_Person>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedAuthor[parent::v3:author]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145200GB01.AssignedAuthor_Person')"/>
				<COCD_TP145200GB01.AssignedAuthor_Person>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145200GB01.AssignedAuthor_Person>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthor_Anon'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145208GB01.AssignedAuthor_Anon')"/>
				<COCD_TP145208GB01.AssignedAuthor_Anon>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145208GB01.AssignedAuthor_Anon>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/author_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<COCD_TP145212GB02.Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145212GB02.Workgroup>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/author_AssignedAuthorDevice'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145207GB01.AssignedAuthorDevice')"/>
				<COCD_TP145207GB01.AssignedAuthorDevice>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145207GB01.AssignedAuthorDevice>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145200GB01.AssignedAuthor_Person')"/>
				<COCD_TP145200GB01.AssignedAuthor_Person>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145200GB01.AssignedAuthor_Person>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthor_Anon'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145208GB01.AssignedAuthor_Anon')"/>
				<COCD_TP145208GB01.AssignedAuthor_Anon>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145208GB01.AssignedAuthor_Anon>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<COCD_TP145212GB02.Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145212GB02.Workgroup>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/authorTextSection_AssignedAuthorDevice'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145207GB01.AssignedAuthorDevice')"/>
				<COCD_TP145207GB01.AssignedAuthorDevice>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145207GB01.AssignedAuthorDevice>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author[parent::v3:ClinicalDocument][v3:assignedAuthor/v3:templateId/@extension='COCD_TP145208GB01#AssignedAuthor'][@typeCode='AUT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','author_AssignedAuthor_Anon')"/>
				<author_AssignedAuthor_Anon>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author_AssignedAuthor_Anon>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author[parent::v3:ClinicalDocument][v3:assignedAuthor/v3:templateId/@extension='COCD_TP145212GB02#Workgroup'][@typeCode='AUT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','author_Workgroup')"/>
				<author_Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author_Workgroup>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author[parent::v3:ClinicalDocument][v3:assignedAuthor/v3:templateId/@extension='COCD_TP145207GB01#AssignedAuthorDevice'][@typeCode='AUT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','author_AssignedAuthorDevice')"/>
				<author_AssignedAuthorDevice>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</author_AssignedAuthorDevice>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:dataEnterer[parent::v3:ClinicalDocument][v3:assignedEntity/v3:templateId/@extension='COCD_TP145205GB01#AssignedEntity'][@typeCode='ENT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','dataEnterer_AssignedEntity')"/>
				<dataEnterer_AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</dataEnterer_AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedEntity[parent::v3:dataEnterer]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/dataEnterer_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145205GB01.AssignedEntity')"/>
				<COCD_TP145205GB01.AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145205GB01.AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informant[parent::v3:ClinicalDocument][v3:relatedEntity/v3:templateId/@extension='COCD_TP145007UK03#RelatedEntity'][@typeCode='INF']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informant_RelatedEntity')"/>
				<informant_RelatedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informant_RelatedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:relatedEntity[parent::v3:informant]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informant_RelatedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145007UK03.RelatedEntity')"/>
				<COCD_TP145007UK03.RelatedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145007UK03.RelatedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:relatedPerson[parent::v3:relatedEntity]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informant_RelatedEntity/COCD_TP145007UK03.RelatedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','relationshipHolder')"/>
				<relationshipHolder>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</relationshipHolder>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informant[parent::v3:ClinicalDocument][v3:assignedEntity/v3:templateId/@extension='COCD_TP145210GB01#AssignedEntity'][@typeCode='INF']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informant_AssignedEntity')"/>
				<informant_AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informant_AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedEntity[parent::v3:informant]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informant_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145210GB01.AssignedEntity')"/>
				<COCD_TP145210GB01.AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145210GB01.AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:custodian[parent::v3:ClinicalDocument][v3:assignedCustodian/v3:templateId/@extension='COCD_TP145018UK03#AssignedCustodian'][@typeCode='CST']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','custodian_AssignedCustodian')"/>
				<custodian_AssignedCustodian>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</custodian_AssignedCustodian>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedCustodian[parent::v3:custodian]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/custodian_AssignedCustodian'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145018UK03.AssignedCustodian')"/>
				<COCD_TP145018UK03.AssignedCustodian>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145018UK03.AssignedCustodian>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient[parent::v3:ClinicalDocument][v3:intendedRecipient/v3:templateId/@extension='COCD_TP145202GB01#IntendedRecipient'][@typeCode='PRCP']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informationRecipient_IntendedRecipient_Person')"/>
				<informationRecipient_IntendedRecipient_Person>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient_IntendedRecipient_Person>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:intendedRecipient[parent::v3:informationRecipient]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145202GB01.IntendedRecipient_Person')"/>
				<COCD_TP145202GB01.IntendedRecipient_Person>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145202GB01.IntendedRecipient_Person>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Org'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145203GB02.IntendedRecipient_Org')"/>
				<COCD_TP145203GB02.IntendedRecipient_Org>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145203GB02.IntendedRecipient_Org>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145204GB02.IntendedRecipient_WorkGp')"/>
				<COCD_TP145204GB02.IntendedRecipient_WorkGp>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145204GB02.IntendedRecipient_WorkGp>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145202GB01.IntendedRecipient_Person')"/>
				<COCD_TP145202GB01.IntendedRecipient_Person>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145202GB01.IntendedRecipient_Person>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Org'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145203GB02.IntendedRecipient_Org')"/>
				<COCD_TP145203GB02.IntendedRecipient_Org>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145203GB02.IntendedRecipient_Org>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145204GB02.IntendedRecipient_WorkGp')"/>
				<COCD_TP145204GB02.IntendedRecipient_WorkGp>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145204GB02.IntendedRecipient_WorkGp>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient[parent::v3:intendedRecipient]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Person/COCD_TP145202GB01.IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_WorkGp/COCD_TP145204GB02.IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Person/COCD_TP145202GB01.IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_WorkGp/COCD_TP145204GB02.IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','assignedPerson')"/>
				<assignedPerson>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</assignedPerson>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:receivedOrganization[parent::v3:intendedRecipient]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Person/COCD_TP145202GB01.IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_Org/COCD_TP145203GB02.IntendedRecipient_Org'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/informationRecipient_IntendedRecipient_WorkGp/COCD_TP145204GB02.IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Person/COCD_TP145202GB01.IntendedRecipient_Person'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_Org/COCD_TP145203GB02.IntendedRecipient_Org'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/tracker_IntendedRecipient_WorkGp/COCD_TP145204GB02.IntendedRecipient_WorkGp'">
				<xsl:variable name="newPath" select="concat($path,'/','representedOrganization')"/>
				<representedOrganization>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</representedOrganization>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient[parent::v3:ClinicalDocument][v3:intendedRecipient/v3:templateId/@extension='COCD_TP145203GB02#IntendedRecipient'][@typeCode='PRCP']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informationRecipient_IntendedRecipient_Org')"/>
				<informationRecipient_IntendedRecipient_Org>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient_IntendedRecipient_Org>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient[parent::v3:ClinicalDocument][v3:intendedRecipient/v3:templateId/@extension='COCD_TP145204GB02#RecipientWorkgroup'][@typeCode='PRCP']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','informationRecipient_IntendedRecipient_WorkGp')"/>
				<informationRecipient_IntendedRecipient_WorkGp>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</informationRecipient_IntendedRecipient_WorkGp>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient[parent::v3:ClinicalDocument][v3:intendedRecipient/v3:templateId/@extension='COCD_TP145202GB01#IntendedRecipient'][@typeCode='TRC']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','tracker_IntendedRecipient_Person')"/>
				<tracker_IntendedRecipient_Person>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</tracker_IntendedRecipient_Person>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient[parent::v3:ClinicalDocument][v3:intendedRecipient/v3:templateId/@extension='COCD_TP145203GB02#IntendedRecipient'][@typeCode='TRC']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','tracker_IntendedRecipient_Org')"/>
				<tracker_IntendedRecipient_Org>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</tracker_IntendedRecipient_Org>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:informationRecipient[parent::v3:ClinicalDocument][v3:intendedRecipient/v3:templateId/@extension='COCD_TP145204GB02#RecipientWorkgroup'][@typeCode='TRC']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','tracker_IntendedRecipient_WorkGp')"/>
				<tracker_IntendedRecipient_WorkGp>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</tracker_IntendedRecipient_WorkGp>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:authenticator[parent::v3:ClinicalDocument][v3:assignedEntity/v3:templateId/@extension='COCD_TP145205GB01#AssignedEntity'][@typeCode='AUTHEN']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','authenticator_AssignedEntity')"/>
				<authenticator_AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</authenticator_AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedEntity[parent::v3:authenticator]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/authenticator_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145205GB01.AssignedEntity')"/>
				<COCD_TP145205GB01.AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145205GB01.AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:participant[parent::v3:ClinicalDocument][v3:associatedEntity/v3:templateId/@extension='COCD_TP145214GB01#AssociatedEntity']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','participant_AssociatedEntity')"/>
				<participant_AssociatedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</participant_AssociatedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:associatedEntity[parent::v3:participant]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/participant_AssociatedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145214GB01.AssociatedEntity')"/>
				<COCD_TP145214GB01.AssociatedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145214GB01.AssociatedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:documentationOf[parent::v3:ClinicalDocument][v3:serviceEvent/v3:templateId/@extension='COCD_TP146227GB01#ServiceEvent'][@typeCode='DOC']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','documentationOf_ServiceEvent')"/>
				<documentationOf_ServiceEvent>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</documentationOf_ServiceEvent>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:serviceEvent[parent::v3:documentationOf]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP146227GB01.ServiceEvent')"/>
				<COCD_TP146227GB01.ServiceEvent>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP146227GB01.ServiceEvent>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:performer[parent::v3:serviceEvent][v3:assignedEntity/v3:templateId/@extension='COCD_TP145210GB01#AssignedEntity']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent'">
				<xsl:variable name="newPath" select="concat($path,'/','performer_AssignedEntity')"/>
				<performer_AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</performer_AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedEntity[parent::v3:performer]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145210GB01.AssignedEntity')"/>
				<COCD_TP145210GB01.AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145210GB01.AssignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent/performer_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<COCD_TP145212GB02.Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145212GB02.Workgroup>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:performer[parent::v3:serviceEvent][v3:assignedEntity/v3:templateId/@extension='COCD_TP145212GB02#Workgroup']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/documentationOf_ServiceEvent/COCD_TP146227GB01.ServiceEvent'">
				<xsl:variable name="newPath" select="concat($path,'/','performer_Workgroup')"/>
				<performer_Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</performer_Workgroup>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:authorization[parent::v3:ClinicalDocument][v3:consent/v3:templateId/@extension='COCD_TP146226GB01#Consent'][@typeCode='AUTH']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','authorization_Consent')"/>
				<authorization_Consent>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</authorization_Consent>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:consent[parent::v3:authorization]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/authorization_Consent'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP146226GB01.Consent')"/>
				<COCD_TP146226GB01.Consent>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP146226GB01.Consent>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:componentOf[parent::v3:ClinicalDocument][v3:encompassingEncounter/v3:templateId/@extension='COCD_TP146228GB01#EncompassingEncounter']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','componentOf_EncompassingEncounter')"/>
				<componentOf_EncompassingEncounter>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</componentOf_EncompassingEncounter>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:encompassingEncounter[parent::v3:componentOf]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP146228GB01.EncompassingEncounter')"/>
				<COCD_TP146228GB01.EncompassingEncounter>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP146228GB01.EncompassingEncounter>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:responsibleParty[parent::v3:encompassingEncounter][v3:assignedEntity/v3:templateId/@extension='COCD_TP145210GB01#AssignedEntity'][@typeCode='RESP']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','responsibleParty_AssignedEntity')"/>
				<responsibleParty_AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</responsibleParty_AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedEntity[parent::v3:responsibleParty]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/responsibleParty_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145210GB01.AssignedEntity')"/>
				<COCD_TP145210GB01.AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145210GB01.AssignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/responsibleParty_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<COCD_TP145212GB02.Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145212GB02.Workgroup>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:responsibleParty[parent::v3:encompassingEncounter][v3:assignedEntity/v3:templateId/@extension='COCD_TP145212GB02#Workgroup'][@typeCode='RESP']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','responsibleParty_Workgroup')"/>
				<responsibleParty_Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</responsibleParty_Workgroup>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:encounterParticipant[parent::v3:encompassingEncounter][v3:assignedEntity/v3:templateId/@extension='COCD_TP145210GB01#AssignedEntity']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','encounterParticipant_AssignedEntity')"/>
				<encounterParticipant_AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</encounterParticipant_AssignedEntity>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:assignedEntity[parent::v3:encounterParticipant]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_AssignedEntity'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145210GB01.AssignedEntity')"/>
				<COCD_TP145210GB01.AssignedEntity>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145210GB01.AssignedEntity>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/encounterParticipant_Workgroup'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145212GB02.Workgroup')"/>
				<COCD_TP145212GB02.Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145212GB02.Workgroup>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:encounterParticipant[parent::v3:encompassingEncounter][v3:assignedEntity/v3:templateId/@extension='COCD_TP145212GB02#Workgroup']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','encounterParticipant_Workgroup')"/>
				<encounterParticipant_Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</encounterParticipant_Workgroup>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:location[parent::v3:encompassingEncounter][v3:healthCareFacility/v3:templateId/@extension='COCD_TP145211GB01#HealthCareFacility'][@typeCode='LOC']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter'">
				<xsl:variable name="newPath" select="concat($path,'/','location_HealthCareFacility_Univ')"/>
				<location_HealthCareFacility_Univ>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</location_HealthCareFacility_Univ>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:healthCareFacility[parent::v3:location]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/componentOf_EncompassingEncounter/COCD_TP146228GB01.EncompassingEncounter/location_HealthCareFacility_Univ'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP145211GB01.HealthCareFacility_Univ')"/>
				<COCD_TP145211GB01.HealthCareFacility_Univ>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP145211GB01.HealthCareFacility_Univ>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component[parent::v3:ClinicalDocument]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument'">
				<xsl:variable name="newPath" select="concat($path,'/','component')"/>
				<component>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:structuredBody[parent::v3:component]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component'">
				<xsl:variable name="newPath" select="concat($path,'/','bodyChoiceStructuredBody')"/>
				<bodyChoiceStructuredBody>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</bodyChoiceStructuredBody>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component[parent::v3:structuredBody]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody'">
				<xsl:variable name="newPath" select="concat($path,'/','component')"/>
				<component>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:section[parent::v3:component]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component'">
				<xsl:variable name="newPath" select="concat($path,'/','classificationSection')"/>
				<classificationSection>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</classificationSection>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','COCD_TP146229GB01.Section1')"/>
				<COCD_TP146229GB01.Section1>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</COCD_TP146229GB01.Section1>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1'">
				<xsl:variable name="newPath" select="concat($path,'/','section2')"/>
				<section2>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section2>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2'">
				<xsl:variable name="newPath" select="concat($path,'/','section3')"/>
				<section3>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section3>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3'">
				<xsl:variable name="newPath" select="concat($path,'/','section4')"/>
				<section4>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section4>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3/section4/component4'">
				<xsl:variable name="newPath" select="concat($path,'/','section5')"/>
				<section5>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section5>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3/section4/component4/section5/component5'">
				<xsl:variable name="newPath" select="concat($path,'/','section6')"/>
				<section6>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</section6>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component[parent::v3:section][v3:section/v3:templateId/@extension='COCD_TP146229GB01#Section1'][@typeCode='COMP']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection'">
				<xsl:variable name="newPath" select="concat($path,'/','component_Section1')"/>
				<component_Section1>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component_Section1>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author[parent::v3:section][v3:assignedAuthor/v3:templateId/@extension='COCD_TP145200GB01#AssignedAuthor'][@typeCode='AUT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','authorTextSection_AssignedAuthor_Person')"/>
				<authorTextSection_AssignedAuthor_Person>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</authorTextSection_AssignedAuthor_Person>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author[parent::v3:section][v3:assignedAuthor/v3:templateId/@extension='COCD_TP145208GB01#AssignedAuthor'][@typeCode='AUT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','authorTextSection_AssignedAuthor_Anon')"/>
				<authorTextSection_AssignedAuthor_Anon>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</authorTextSection_AssignedAuthor_Anon>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author[parent::v3:section][v3:assignedAuthor/v3:templateId/@extension='COCD_TP145212GB02#Workgroup'][@typeCode='AUT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','authorTextSection_Workgroup')"/>
				<authorTextSection_Workgroup>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</authorTextSection_Workgroup>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:author[parent::v3:section][v3:assignedAuthor/v3:templateId/@extension='COCD_TP145207GB01#AssignedAuthorDevice'][@typeCode='AUT']" mode="inWrapper" priority="3">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','authorTextSection_AssignedAuthorDevice')"/>
				<authorTextSection_AssignedAuthorDevice>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</authorTextSection_AssignedAuthorDevice>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:component[parent::v3:section][@typeCode='COMP']" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1'">
				<xsl:variable name="newPath" select="concat($path,'/','component1')"/>
				<component1>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component1>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2'">
				<xsl:variable name="newPath" select="concat($path,'/','component2')"/>
				<component2>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component2>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3'">
				<xsl:variable name="newPath" select="concat($path,'/','component3')"/>
				<component3>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component3>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3/section4'">
				<xsl:variable name="newPath" select="concat($path,'/','component4')"/>
				<component4>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component4>
			</xsl:when>
			<xsl:when test="$path='/ClinicalDocument/component/bodyChoiceStructuredBody/component/classificationSection/component_Section1/COCD_TP146229GB01.Section1/component1/section2/component2/section3/component3/section4/component4/section5'">
				<xsl:variable name="newPath" select="concat($path,'/','component5')"/>
				<component5>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</component5>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="v3:nonXMLBody[parent::v3:component]" mode="inWrapper" priority="2">
		<xsl:param name="path"/>
		<xsl:choose>
			<xsl:when test="$path='/ClinicalDocument/component'">
				<xsl:variable name="newPath" select="concat($path,'/','bodyChoiceNonXMLBody')"/>
				<bodyChoiceNonXMLBody>
					<xsl:copy-of select="@*"/>
					<xsl:apply-templates mode="inWrapper">
						<xsl:with-param name="path" select="$newPath"/>
					</xsl:apply-templates>
				</bodyChoiceNonXMLBody>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:variable name="main_result">
		<xsl:apply-templates mode="main" select="$inWrapper_result"/>
	</xsl:variable>
	<xsl:template match="/">
		<xsl:apply-templates mode="outWrapper" select="$main_result"/>
	</xsl:template>
	<xsl:template match="*" mode="outWrapper">
		<xsl:copy>
			<xsl:copy-of select="@*"/>
			<xsl:apply-templates mode="outWrapper"/>
		</xsl:copy>
	</xsl:template>
</xsl:stylesheet>